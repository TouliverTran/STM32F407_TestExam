ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB141:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** #include <stdarg.h>
  26:Core/Src/main.c **** #include <string.h>
  27:Core/Src/main.c **** #include <assert.h>
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** #include "unity.h"
  30:Core/Src/main.c **** #include "yahdlc.h"
  31:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** UART_HandleTypeDef huart1;
  50:Core/Src/main.c **** UART_HandleTypeDef huart2;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE BEGIN PV */
  53:Core/Src/main.c **** extern uint16_t timeoutReceive = 70;
  54:Core/Src/main.c **** extern uint16_t delaytimer = 1000;
  55:Core/Src/main.c **** extern uint8_t newReceive = 0;
  56:Core/Src/main.c **** /* USER CODE END PV */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  59:Core/Src/main.c **** void SystemClock_Config(void);
  60:Core/Src/main.c **** static void MX_GPIO_Init(void);
  61:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  62:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  63:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  64:Core/Src/main.c **** int uart_printf(const char *fmt, ...);
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** int add(int a, int b);
  67:Core/Src/main.c **** void test_add(void);
  68:Core/Src/main.c **** void setUp();
  69:Core/Src/main.c **** void tearDown();
  70:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart);
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** extern int debug_printf(const char *fmt, ...);
  73:Core/Src/main.c **** extern void debug_sendchar(const char pdata);
  74:Core/Src/main.c **** void ProcessDataFromUART(void);
  75:Core/Src/main.c **** /* USER CODE END PFP */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  78:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  79:Core/Src/main.c **** uint8_t data_rx[2];
  80:Core/Src/main.c **** uint8_t buf_rx[256];
  81:Core/Src/main.c **** uint16_t t = 0;
  82:Core/Src/main.c **** yahdlc_state_t state;
  83:Core/Src/main.c **** /* USER CODE END 0 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /**
  86:Core/Src/main.c ****   * @brief  The application entry point.
  87:Core/Src/main.c ****   * @retval int
  88:Core/Src/main.c ****   */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 3


  89:Core/Src/main.c **** int main(void)
  90:Core/Src/main.c **** {
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE END 1 */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  99:Core/Src/main.c ****   HAL_Init();
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE END Init */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Configure the system clock */
 106:Core/Src/main.c ****   SystemClock_Config();
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE END SysInit */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* Initialize all configured peripherals */
 113:Core/Src/main.c ****   MX_GPIO_Init();
 114:Core/Src/main.c ****   MX_USART1_UART_Init();
 115:Core/Src/main.c ****   MX_USART2_UART_Init();
 116:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 117:Core/Src/main.c ****   debug_printf("HELLO WORLD!!!\r\n");
 118:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1, data_rx, 1);
 119:Core/Src/main.c ****   UNITY_BEGIN();
 120:Core/Src/main.c ****   RUN_TEST(test_add);
 121:Core/Src/main.c ****   UNITY_END();
 122:Core/Src/main.c ****   char string_buffer[256];
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   yahdlc_set_state(&state);
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   yahdlc_control_t control;
 127:Core/Src/main.c ****   control.frame = YAHDLC_FRAME_DATA;
 128:Core/Src/main.c ****   control.seq_no = 0;
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   uint8_t input_data[] = "1234567\r\n";
 131:Core/Src/main.c ****   uint8_t output_frame[256];
 132:Core/Src/main.c ****   int frame_len;
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   yahdlc_frame_data(&control, input_data, sizeof(input_data)-1, output_frame, &frame_len);
 135:Core/Src/main.c ****   for(int i=0; i<frame_len; i++)
 136:Core/Src/main.c ****   {
 137:Core/Src/main.c ****     debug_sendchar(output_frame[i]);
 138:Core/Src/main.c ****     uart_sendchar(output_frame[i]);
 139:Core/Src/main.c ****   }
 140:Core/Src/main.c **** 
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* USER CODE END 2 */
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /* Infinite loop */
 145:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 4


 146:Core/Src/main.c ****   while (1)
 147:Core/Src/main.c ****   {
 148:Core/Src/main.c ****     /* USER CODE END WHILE */
 149:Core/Src/main.c ****     if(delaytimer == 0)
 150:Core/Src/main.c ****     {
 151:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_6);
 152:Core/Src/main.c ****       delaytimer = 1000;
 153:Core/Src/main.c ****       // for(int i=0; i<frame_len; i++)
 154:Core/Src/main.c ****       // {
 155:Core/Src/main.c ****       //   uart_sendchar(output_frame[i]);
 156:Core/Src/main.c ****       // }
 157:Core/Src/main.c ****     }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****     ProcessDataFromUART();
 160:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 161:Core/Src/main.c ****   }
 162:Core/Src/main.c ****   /* USER CODE END 3 */
 163:Core/Src/main.c **** }
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** /**
 166:Core/Src/main.c ****   * @brief System Clock Configuration
 167:Core/Src/main.c ****   * @retval None
 168:Core/Src/main.c ****   */
 169:Core/Src/main.c **** void SystemClock_Config(void)
 170:Core/Src/main.c **** {
 171:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 172:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 175:Core/Src/main.c ****   */
 176:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 180:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 181:Core/Src/main.c ****   */
 182:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 183:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 190:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 191:Core/Src/main.c ****   {
 192:Core/Src/main.c ****     Error_Handler();
 193:Core/Src/main.c ****   }
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 196:Core/Src/main.c ****   */
 197:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 198:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 199:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 200:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 202:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 5


 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 205:Core/Src/main.c ****   {
 206:Core/Src/main.c ****     Error_Handler();
 207:Core/Src/main.c ****   }
 208:Core/Src/main.c **** }
 209:Core/Src/main.c **** 
 210:Core/Src/main.c **** /**
 211:Core/Src/main.c ****   * @brief USART1 Initialization Function
 212:Core/Src/main.c ****   * @param None
 213:Core/Src/main.c ****   * @retval None
 214:Core/Src/main.c ****   */
 215:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 216:Core/Src/main.c **** {
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 225:Core/Src/main.c ****   huart1.Instance = USART1;
 226:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 227:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 228:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 229:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 230:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 231:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 232:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 233:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 234:Core/Src/main.c ****   {
 235:Core/Src/main.c ****     Error_Handler();
 236:Core/Src/main.c ****   }
 237:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 240:Core/Src/main.c **** 
 241:Core/Src/main.c **** }
 242:Core/Src/main.c **** 
 243:Core/Src/main.c **** /**
 244:Core/Src/main.c ****   * @brief USART2 Initialization Function
 245:Core/Src/main.c ****   * @param None
 246:Core/Src/main.c ****   * @retval None
 247:Core/Src/main.c ****   */
 248:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 249:Core/Src/main.c **** {
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 258:Core/Src/main.c ****   huart2.Instance = USART2;
 259:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 6


 260:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 261:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 262:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 263:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 264:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 265:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 266:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 267:Core/Src/main.c ****   {
 268:Core/Src/main.c ****     Error_Handler();
 269:Core/Src/main.c ****   }
 270:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 273:Core/Src/main.c **** 
 274:Core/Src/main.c **** }
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** /**
 277:Core/Src/main.c ****   * @brief GPIO Initialization Function
 278:Core/Src/main.c ****   * @param None
 279:Core/Src/main.c ****   * @retval None
 280:Core/Src/main.c ****   */
 281:Core/Src/main.c **** static void MX_GPIO_Init(void)
 282:Core/Src/main.c **** {
  28              		.loc 1 282 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 283:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 283 3 view .LVU1
  42              		.loc 1 283 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 284:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 285:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 288:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  49              		.loc 1 288 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 288 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
  53              		.loc 1 288 3 view .LVU5
  54 0012 134B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 7


  56 0016 42F08002 		orr	r2, r2, #128
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 288 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F08002 		and	r2, r2, #128
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 288 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 288 3 view .LVU8
 289:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  66              		.loc 1 289 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 289 3 view .LVU10
  69 0026 0294     		str	r4, [sp, #8]
  70              		.loc 1 289 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F00102 		orr	r2, r2, #1
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 289 3 view .LVU12
  75 0030 1B6B     		ldr	r3, [r3, #48]
  76 0032 03F00103 		and	r3, r3, #1
  77 0036 0293     		str	r3, [sp, #8]
  78              		.loc 1 289 3 view .LVU13
  79 0038 029B     		ldr	r3, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 289 3 view .LVU14
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 292:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, GPIO_PIN_RESET);
  82              		.loc 1 292 3 view .LVU15
  83 003a 0A4D     		ldr	r5, .L3+4
  84 003c 2246     		mov	r2, r4
  85 003e 4021     		movs	r1, #64
  86 0040 2846     		mov	r0, r5
  87 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL0:
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****   /*Configure GPIO pin : PA6 */
 295:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_6;
  89              		.loc 1 295 3 view .LVU16
  90              		.loc 1 295 23 is_stmt 0 view .LVU17
  91 0046 4023     		movs	r3, #64
  92 0048 0393     		str	r3, [sp, #12]
 296:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  93              		.loc 1 296 3 is_stmt 1 view .LVU18
  94              		.loc 1 296 24 is_stmt 0 view .LVU19
  95 004a 0123     		movs	r3, #1
  96 004c 0493     		str	r3, [sp, #16]
 297:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  97              		.loc 1 297 3 is_stmt 1 view .LVU20
  98              		.loc 1 297 24 is_stmt 0 view .LVU21
  99 004e 0594     		str	r4, [sp, #20]
 298:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 100              		.loc 1 298 3 is_stmt 1 view .LVU22
 101              		.loc 1 298 25 is_stmt 0 view .LVU23
 102 0050 0694     		str	r4, [sp, #24]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 8


 299:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 103              		.loc 1 299 3 is_stmt 1 view .LVU24
 104 0052 03A9     		add	r1, sp, #12
 105 0054 2846     		mov	r0, r5
 106 0056 FFF7FEFF 		bl	HAL_GPIO_Init
 107              	.LVL1:
 300:Core/Src/main.c **** 
 301:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 302:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 303:Core/Src/main.c **** }
 108              		.loc 1 303 1 is_stmt 0 view .LVU25
 109 005a 09B0     		add	sp, sp, #36
 110              	.LCFI2:
 111              		.cfi_def_cfa_offset 12
 112              		@ sp needed
 113 005c 30BD     		pop	{r4, r5, pc}
 114              	.L4:
 115 005e 00BF     		.align	2
 116              	.L3:
 117 0060 00380240 		.word	1073887232
 118 0064 00000240 		.word	1073872896
 119              		.cfi_endproc
 120              	.LFE141:
 122              		.section	.text.uart_printf,"ax",%progbits
 123              		.align	1
 124              		.global	uart_printf
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu fpv4-sp-d16
 130              	uart_printf:
 131              	.LVL2:
 132              	.LFB142:
 304:Core/Src/main.c **** 
 305:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 306:Core/Src/main.c **** int uart_printf(const char *fmt, ...)
 307:Core/Src/main.c **** {
 133              		.loc 1 307 1 is_stmt 1 view -0
 134              		.cfi_startproc
 135              		@ args = 4, pretend = 16, frame = 1032
 136              		@ frame_needed = 0, uses_anonymous_args = 1
 137              		.loc 1 307 1 is_stmt 0 view .LVU27
 138 0000 0FB4     		push	{r0, r1, r2, r3}
 139              	.LCFI3:
 140              		.cfi_def_cfa_offset 16
 141              		.cfi_offset 0, -16
 142              		.cfi_offset 1, -12
 143              		.cfi_offset 2, -8
 144              		.cfi_offset 3, -4
 145 0002 30B5     		push	{r4, r5, lr}
 146              	.LCFI4:
 147              		.cfi_def_cfa_offset 28
 148              		.cfi_offset 4, -28
 149              		.cfi_offset 5, -24
 150              		.cfi_offset 14, -20
 151 0004 ADF20C4D 		subw	sp, sp, #1036
 152              	.LCFI5:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 9


 153              		.cfi_def_cfa_offset 1064
 154 0008 0DF58362 		add	r2, sp, #1048
 155 000c 52F8041B 		ldr	r1, [r2], #4
 308:Core/Src/main.c ****   char buf[1024];
 156              		.loc 1 308 3 is_stmt 1 view .LVU28
 309:Core/Src/main.c ****   int len, i;
 157              		.loc 1 309 3 view .LVU29
 310:Core/Src/main.c ****   va_list args;
 158              		.loc 1 310 3 view .LVU30
 311:Core/Src/main.c ****   va_start (args, fmt);
 159              		.loc 1 311 3 view .LVU31
 160 0010 0192     		str	r2, [sp, #4]
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****   len = vsprintf(buf, fmt, args);
 161              		.loc 1 313 3 view .LVU32
 162              		.loc 1 313 9 is_stmt 0 view .LVU33
 163 0012 02A8     		add	r0, sp, #8
 164 0014 FFF7FEFF 		bl	vsprintf
 165              	.LVL3:
 166 0018 0546     		mov	r5, r0
 167              	.LVL4:
 314:Core/Src/main.c ****   for (i=0; i<len; i++)
 168              		.loc 1 314 3 is_stmt 1 view .LVU34
 169              		.loc 1 314 9 is_stmt 0 view .LVU35
 170 001a 0024     		movs	r4, #0
 171              		.loc 1 314 3 view .LVU36
 172 001c 07E0     		b	.L6
 173              	.LVL5:
 174              	.L7:
 315:Core/Src/main.c ****   {
 316:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, &buf[i], sizeof(char), 10);
 175              		.loc 1 316 5 is_stmt 1 discriminator 3 view .LVU37
 176 001e 0A23     		movs	r3, #10
 177 0020 0122     		movs	r2, #1
 178 0022 02A9     		add	r1, sp, #8
 179 0024 2144     		add	r1, r1, r4
 180 0026 0648     		ldr	r0, .L9
 181 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 182              	.LVL6:
 314:Core/Src/main.c ****   for (i=0; i<len; i++)
 183              		.loc 1 314 20 discriminator 3 view .LVU38
 314:Core/Src/main.c ****   for (i=0; i<len; i++)
 184              		.loc 1 314 21 is_stmt 0 discriminator 3 view .LVU39
 185 002c 0134     		adds	r4, r4, #1
 186              	.LVL7:
 187              	.L6:
 314:Core/Src/main.c ****   for (i=0; i<len; i++)
 188              		.loc 1 314 13 is_stmt 1 discriminator 1 view .LVU40
 314:Core/Src/main.c ****   for (i=0; i<len; i++)
 189              		.loc 1 314 3 is_stmt 0 discriminator 1 view .LVU41
 190 002e AC42     		cmp	r4, r5
 191 0030 F5DB     		blt	.L7
 317:Core/Src/main.c ****   }
 318:Core/Src/main.c ****   va_end(args);
 192              		.loc 1 318 3 is_stmt 1 view .LVU42
 319:Core/Src/main.c ****   return len;
 193              		.loc 1 319 3 view .LVU43
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 10


 320:Core/Src/main.c **** }
 194              		.loc 1 320 1 is_stmt 0 view .LVU44
 195 0032 2846     		mov	r0, r5
 196 0034 0DF20C4D 		addw	sp, sp, #1036
 197              	.LCFI6:
 198              		.cfi_def_cfa_offset 28
 199              		@ sp needed
 200 0038 BDE83040 		pop	{r4, r5, lr}
 201              	.LCFI7:
 202              		.cfi_restore 14
 203              		.cfi_restore 5
 204              		.cfi_restore 4
 205              		.cfi_def_cfa_offset 16
 206              	.LVL8:
 207              		.loc 1 320 1 view .LVU45
 208 003c 04B0     		add	sp, sp, #16
 209              	.LCFI8:
 210              		.cfi_restore 3
 211              		.cfi_restore 2
 212              		.cfi_restore 1
 213              		.cfi_restore 0
 214              		.cfi_def_cfa_offset 0
 215 003e 7047     		bx	lr
 216              	.L10:
 217              		.align	2
 218              	.L9:
 219 0040 00000000 		.word	.LANCHOR0
 220              		.cfi_endproc
 221              	.LFE142:
 223              		.section	.text.uart_sendchar,"ax",%progbits
 224              		.align	1
 225              		.global	uart_sendchar
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu fpv4-sp-d16
 231              	uart_sendchar:
 232              	.LVL9:
 233              	.LFB143:
 321:Core/Src/main.c **** 
 322:Core/Src/main.c **** void uart_sendchar(const char pdata)
 323:Core/Src/main.c **** {
 234              		.loc 1 323 1 is_stmt 1 view -0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 8
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		.loc 1 323 1 is_stmt 0 view .LVU47
 239 0000 00B5     		push	{lr}
 240              	.LCFI9:
 241              		.cfi_def_cfa_offset 4
 242              		.cfi_offset 14, -4
 243 0002 83B0     		sub	sp, sp, #12
 244              	.LCFI10:
 245              		.cfi_def_cfa_offset 16
 324:Core/Src/main.c ****   char temp = pdata;
 246              		.loc 1 324 3 is_stmt 1 view .LVU48
 247              		.loc 1 324 8 is_stmt 0 view .LVU49
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 11


 248 0004 8DF80700 		strb	r0, [sp, #7]
 325:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, &temp, sizeof(char), 10);
 249              		.loc 1 325 3 is_stmt 1 view .LVU50
 250 0008 0A23     		movs	r3, #10
 251 000a 0122     		movs	r2, #1
 252 000c 0DF10701 		add	r1, sp, #7
 253 0010 0248     		ldr	r0, .L13
 254              	.LVL10:
 255              		.loc 1 325 3 is_stmt 0 view .LVU51
 256 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 257              	.LVL11:
 326:Core/Src/main.c ****   // if ('\n' == pdata)
 327:Core/Src/main.c ****   // {
 328:Core/Src/main.c ****   //   temp = '\r';
 329:Core/Src/main.c ****   //   HAL_UART_Transmit(&huart1, &temp, sizeof(char), 10);
 330:Core/Src/main.c ****   // }
 331:Core/Src/main.c **** }
 258              		.loc 1 331 1 view .LVU52
 259 0016 03B0     		add	sp, sp, #12
 260              	.LCFI11:
 261              		.cfi_def_cfa_offset 4
 262              		@ sp needed
 263 0018 5DF804FB 		ldr	pc, [sp], #4
 264              	.L14:
 265              		.align	2
 266              	.L13:
 267 001c 00000000 		.word	.LANCHOR0
 268              		.cfi_endproc
 269              	.LFE143:
 271              		.section	.text.debug_printf,"ax",%progbits
 272              		.align	1
 273              		.global	debug_printf
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 277              		.fpu fpv4-sp-d16
 279              	debug_printf:
 280              	.LVL12:
 281              	.LFB144:
 332:Core/Src/main.c **** 
 333:Core/Src/main.c **** int debug_printf(const char *fmt, ...)
 334:Core/Src/main.c **** {
 282              		.loc 1 334 1 is_stmt 1 view -0
 283              		.cfi_startproc
 284              		@ args = 4, pretend = 16, frame = 1032
 285              		@ frame_needed = 0, uses_anonymous_args = 1
 286              		.loc 1 334 1 is_stmt 0 view .LVU54
 287 0000 0FB4     		push	{r0, r1, r2, r3}
 288              	.LCFI12:
 289              		.cfi_def_cfa_offset 16
 290              		.cfi_offset 0, -16
 291              		.cfi_offset 1, -12
 292              		.cfi_offset 2, -8
 293              		.cfi_offset 3, -4
 294 0002 30B5     		push	{r4, r5, lr}
 295              	.LCFI13:
 296              		.cfi_def_cfa_offset 28
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 12


 297              		.cfi_offset 4, -28
 298              		.cfi_offset 5, -24
 299              		.cfi_offset 14, -20
 300 0004 ADF20C4D 		subw	sp, sp, #1036
 301              	.LCFI14:
 302              		.cfi_def_cfa_offset 1064
 303 0008 0DF58362 		add	r2, sp, #1048
 304 000c 52F8041B 		ldr	r1, [r2], #4
 335:Core/Src/main.c ****   char buf[1024];
 305              		.loc 1 335 3 is_stmt 1 view .LVU55
 336:Core/Src/main.c ****   int len, i;
 306              		.loc 1 336 3 view .LVU56
 337:Core/Src/main.c ****   va_list args;
 307              		.loc 1 337 3 view .LVU57
 338:Core/Src/main.c ****   va_start (args, fmt);
 308              		.loc 1 338 3 view .LVU58
 309 0010 0192     		str	r2, [sp, #4]
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   len = vsprintf(buf, fmt, args);
 310              		.loc 1 340 3 view .LVU59
 311              		.loc 1 340 9 is_stmt 0 view .LVU60
 312 0012 02A8     		add	r0, sp, #8
 313 0014 FFF7FEFF 		bl	vsprintf
 314              	.LVL13:
 315 0018 0546     		mov	r5, r0
 316              	.LVL14:
 341:Core/Src/main.c ****   for (i=0; i<len; i++)
 317              		.loc 1 341 3 is_stmt 1 view .LVU61
 318              		.loc 1 341 9 is_stmt 0 view .LVU62
 319 001a 0024     		movs	r4, #0
 320              		.loc 1 341 3 view .LVU63
 321 001c 07E0     		b	.L16
 322              	.LVL15:
 323              	.L17:
 342:Core/Src/main.c ****   {
 343:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, &buf[i], sizeof(char), 10);
 324              		.loc 1 343 5 is_stmt 1 discriminator 3 view .LVU64
 325 001e 0A23     		movs	r3, #10
 326 0020 0122     		movs	r2, #1
 327 0022 02A9     		add	r1, sp, #8
 328 0024 2144     		add	r1, r1, r4
 329 0026 0648     		ldr	r0, .L19
 330 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 331              	.LVL16:
 341:Core/Src/main.c ****   for (i=0; i<len; i++)
 332              		.loc 1 341 20 discriminator 3 view .LVU65
 341:Core/Src/main.c ****   for (i=0; i<len; i++)
 333              		.loc 1 341 21 is_stmt 0 discriminator 3 view .LVU66
 334 002c 0134     		adds	r4, r4, #1
 335              	.LVL17:
 336              	.L16:
 341:Core/Src/main.c ****   for (i=0; i<len; i++)
 337              		.loc 1 341 13 is_stmt 1 discriminator 1 view .LVU67
 341:Core/Src/main.c ****   for (i=0; i<len; i++)
 338              		.loc 1 341 3 is_stmt 0 discriminator 1 view .LVU68
 339 002e AC42     		cmp	r4, r5
 340 0030 F5DB     		blt	.L17
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 13


 344:Core/Src/main.c ****   }
 345:Core/Src/main.c ****   va_end(args);
 341              		.loc 1 345 3 is_stmt 1 view .LVU69
 346:Core/Src/main.c ****   return len;
 342              		.loc 1 346 3 view .LVU70
 347:Core/Src/main.c **** }
 343              		.loc 1 347 1 is_stmt 0 view .LVU71
 344 0032 2846     		mov	r0, r5
 345 0034 0DF20C4D 		addw	sp, sp, #1036
 346              	.LCFI15:
 347              		.cfi_def_cfa_offset 28
 348              		@ sp needed
 349 0038 BDE83040 		pop	{r4, r5, lr}
 350              	.LCFI16:
 351              		.cfi_restore 14
 352              		.cfi_restore 5
 353              		.cfi_restore 4
 354              		.cfi_def_cfa_offset 16
 355              	.LVL18:
 356              		.loc 1 347 1 view .LVU72
 357 003c 04B0     		add	sp, sp, #16
 358              	.LCFI17:
 359              		.cfi_restore 3
 360              		.cfi_restore 2
 361              		.cfi_restore 1
 362              		.cfi_restore 0
 363              		.cfi_def_cfa_offset 0
 364 003e 7047     		bx	lr
 365              	.L20:
 366              		.align	2
 367              	.L19:
 368 0040 00000000 		.word	.LANCHOR1
 369              		.cfi_endproc
 370              	.LFE144:
 372              		.section	.text.debug_sendchar,"ax",%progbits
 373              		.align	1
 374              		.global	debug_sendchar
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu fpv4-sp-d16
 380              	debug_sendchar:
 381              	.LVL19:
 382              	.LFB145:
 348:Core/Src/main.c **** 
 349:Core/Src/main.c **** void debug_sendchar(const char pdata)
 350:Core/Src/main.c **** {
 383              		.loc 1 350 1 is_stmt 1 view -0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 8
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387              		.loc 1 350 1 is_stmt 0 view .LVU74
 388 0000 00B5     		push	{lr}
 389              	.LCFI18:
 390              		.cfi_def_cfa_offset 4
 391              		.cfi_offset 14, -4
 392 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 14


 393              	.LCFI19:
 394              		.cfi_def_cfa_offset 16
 351:Core/Src/main.c ****   char temp = pdata;
 395              		.loc 1 351 3 is_stmt 1 view .LVU75
 396              		.loc 1 351 8 is_stmt 0 view .LVU76
 397 0004 8DF80700 		strb	r0, [sp, #7]
 352:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, &temp, sizeof(char), 10);
 398              		.loc 1 352 3 is_stmt 1 view .LVU77
 399 0008 0A23     		movs	r3, #10
 400 000a 0122     		movs	r2, #1
 401 000c 0DF10701 		add	r1, sp, #7
 402 0010 0248     		ldr	r0, .L23
 403              	.LVL20:
 404              		.loc 1 352 3 is_stmt 0 view .LVU78
 405 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 406              	.LVL21:
 353:Core/Src/main.c ****   // if ('\n' == pdata)
 354:Core/Src/main.c ****   // {
 355:Core/Src/main.c ****   //   temp = '\r';
 356:Core/Src/main.c ****   //   HAL_UART_Transmit(&huart1, &temp, sizeof(char), 10);
 357:Core/Src/main.c ****   // }
 358:Core/Src/main.c **** }
 407              		.loc 1 358 1 view .LVU79
 408 0016 03B0     		add	sp, sp, #12
 409              	.LCFI20:
 410              		.cfi_def_cfa_offset 4
 411              		@ sp needed
 412 0018 5DF804FB 		ldr	pc, [sp], #4
 413              	.L24:
 414              		.align	2
 415              	.L23:
 416 001c 00000000 		.word	.LANCHOR1
 417              		.cfi_endproc
 418              	.LFE145:
 420              		.section	.text.add,"ax",%progbits
 421              		.align	1
 422              		.global	add
 423              		.syntax unified
 424              		.thumb
 425              		.thumb_func
 426              		.fpu fpv4-sp-d16
 428              	add:
 429              	.LVL22:
 430              	.LFB146:
 359:Core/Src/main.c **** 
 360:Core/Src/main.c **** int add(int a, int b){
 431              		.loc 1 360 22 is_stmt 1 view -0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435              		@ link register save eliminated.
 361:Core/Src/main.c ****     return a + b;
 436              		.loc 1 361 5 view .LVU81
 362:Core/Src/main.c **** }
 437              		.loc 1 362 1 is_stmt 0 view .LVU82
 438 0000 0844     		add	r0, r0, r1
 439              	.LVL23:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 15


 440              		.loc 1 362 1 view .LVU83
 441 0002 7047     		bx	lr
 442              		.cfi_endproc
 443              	.LFE146:
 445              		.section	.text.test_add,"ax",%progbits
 446              		.align	1
 447              		.global	test_add
 448              		.syntax unified
 449              		.thumb
 450              		.thumb_func
 451              		.fpu fpv4-sp-d16
 453              	test_add:
 454              	.LFB147:
 363:Core/Src/main.c **** 
 364:Core/Src/main.c **** void test_add(void){
 455              		.loc 1 364 20 is_stmt 1 view -0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 0
 458              		@ frame_needed = 0, uses_anonymous_args = 0
 459 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 460              	.LCFI21:
 461              		.cfi_def_cfa_offset 24
 462              		.cfi_offset 4, -24
 463              		.cfi_offset 5, -20
 464              		.cfi_offset 6, -16
 465              		.cfi_offset 7, -12
 466              		.cfi_offset 8, -8
 467              		.cfi_offset 14, -4
 468 0004 82B0     		sub	sp, sp, #8
 469              	.LCFI22:
 470              		.cfi_def_cfa_offset 32
 365:Core/Src/main.c ****     for(int i=0; i<9; i++){
 471              		.loc 1 365 5 view .LVU85
 472              	.LBB6:
 473              		.loc 1 365 9 view .LVU86
 474              	.LVL24:
 475              		.loc 1 365 13 is_stmt 0 view .LVU87
 476 0006 4FF00008 		mov	r8, #0
 477              		.loc 1 365 5 view .LVU88
 478 000a 1CE0     		b	.L27
 479              	.LVL25:
 480              	.L28:
 481              	.LBB7:
 366:Core/Src/main.c ****         for(int j=0; j<9; j++){
 367:Core/Src/main.c ****             TEST_ASSERT_EQUAL_INT((i+j), add(i,j));
 482              		.loc 1 367 13 is_stmt 1 discriminator 3 view .LVU89
 483 000c 08EB0406 		add	r6, r8, r4
 484 0010 2146     		mov	r1, r4
 485 0012 4046     		mov	r0, r8
 486 0014 FFF7FEFF 		bl	add
 487              	.LVL26:
 488 0018 0546     		mov	r5, r0
 489 001a 1427     		movs	r7, #20
 490 001c 0097     		str	r7, [sp]
 491 001e 40F26F13 		movw	r3, #367
 492 0022 0022     		movs	r2, #0
 493 0024 0146     		mov	r1, r0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 16


 494 0026 3046     		mov	r0, r6
 495 0028 FFF7FEFF 		bl	UnityAssertEqualNumber
 496              	.LVL27:
 368:Core/Src/main.c ****             TEST_ASSERT_EQUAL_INT((i+j+1), add(i,j));
 497              		.loc 1 368 13 discriminator 3 view .LVU90
 498 002c 0097     		str	r7, [sp]
 499 002e 4FF4B873 		mov	r3, #368
 500 0032 0022     		movs	r2, #0
 501 0034 2946     		mov	r1, r5
 502 0036 701C     		adds	r0, r6, #1
 503 0038 FFF7FEFF 		bl	UnityAssertEqualNumber
 504              	.LVL28:
 366:Core/Src/main.c ****         for(int j=0; j<9; j++){
 505              		.loc 1 366 27 discriminator 3 view .LVU91
 366:Core/Src/main.c ****         for(int j=0; j<9; j++){
 506              		.loc 1 366 28 is_stmt 0 discriminator 3 view .LVU92
 507 003c 0134     		adds	r4, r4, #1
 508              	.LVL29:
 509              	.L29:
 366:Core/Src/main.c ****         for(int j=0; j<9; j++){
 510              		.loc 1 366 22 is_stmt 1 discriminator 1 view .LVU93
 366:Core/Src/main.c ****         for(int j=0; j<9; j++){
 511              		.loc 1 366 9 is_stmt 0 discriminator 1 view .LVU94
 512 003e 082C     		cmp	r4, #8
 513 0040 E4DD     		ble	.L28
 514              	.LBE7:
 365:Core/Src/main.c ****     for(int i=0; i<9; i++){
 515              		.loc 1 365 23 is_stmt 1 discriminator 2 view .LVU95
 365:Core/Src/main.c ****     for(int i=0; i<9; i++){
 516              		.loc 1 365 24 is_stmt 0 discriminator 2 view .LVU96
 517 0042 08F10108 		add	r8, r8, #1
 518              	.LVL30:
 519              	.L27:
 365:Core/Src/main.c ****     for(int i=0; i<9; i++){
 520              		.loc 1 365 18 is_stmt 1 discriminator 1 view .LVU97
 365:Core/Src/main.c ****     for(int i=0; i<9; i++){
 521              		.loc 1 365 5 is_stmt 0 discriminator 1 view .LVU98
 522 0046 B8F1080F 		cmp	r8, #8
 523 004a 01DC     		bgt	.L32
 524              	.LBB8:
 366:Core/Src/main.c ****         for(int j=0; j<9; j++){
 525              		.loc 1 366 17 view .LVU99
 526 004c 0024     		movs	r4, #0
 527 004e F6E7     		b	.L29
 528              	.L32:
 529              	.LBE8:
 530              	.LBE6:
 369:Core/Src/main.c ****         }
 370:Core/Src/main.c ****     }
 371:Core/Src/main.c **** }
 531              		.loc 1 371 1 view .LVU100
 532 0050 02B0     		add	sp, sp, #8
 533              	.LCFI23:
 534              		.cfi_def_cfa_offset 24
 535              		@ sp needed
 536 0052 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 537              		.loc 1 371 1 view .LVU101
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 17


 538              		.cfi_endproc
 539              	.LFE147:
 541              		.section	.text.setUp,"ax",%progbits
 542              		.align	1
 543              		.global	setUp
 544              		.syntax unified
 545              		.thumb
 546              		.thumb_func
 547              		.fpu fpv4-sp-d16
 549              	setUp:
 550              	.LFB148:
 372:Core/Src/main.c **** 
 373:Core/Src/main.c **** void setUp(){
 551              		.loc 1 373 13 is_stmt 1 view -0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555              		@ link register save eliminated.
 374:Core/Src/main.c **** 
 375:Core/Src/main.c **** }
 556              		.loc 1 375 1 view .LVU103
 557 0000 7047     		bx	lr
 558              		.cfi_endproc
 559              	.LFE148:
 561              		.section	.text.tearDown,"ax",%progbits
 562              		.align	1
 563              		.global	tearDown
 564              		.syntax unified
 565              		.thumb
 566              		.thumb_func
 567              		.fpu fpv4-sp-d16
 569              	tearDown:
 570              	.LFB149:
 376:Core/Src/main.c **** void tearDown(){
 571              		.loc 1 376 16 view -0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 0
 574              		@ frame_needed = 0, uses_anonymous_args = 0
 575              		@ link register save eliminated.
 377:Core/Src/main.c **** 
 378:Core/Src/main.c **** }
 576              		.loc 1 378 1 view .LVU105
 577 0000 7047     		bx	lr
 578              		.cfi_endproc
 579              	.LFE149:
 581              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 582              		.align	1
 583              		.global	HAL_UART_RxCpltCallback
 584              		.syntax unified
 585              		.thumb
 586              		.thumb_func
 587              		.fpu fpv4-sp-d16
 589              	HAL_UART_RxCpltCallback:
 590              	.LVL31:
 591              	.LFB150:
 379:Core/Src/main.c **** 
 380:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 18


 381:Core/Src/main.c **** {
 592              		.loc 1 381 1 view -0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 0
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 596              		.loc 1 381 1 is_stmt 0 view .LVU107
 597 0000 08B5     		push	{r3, lr}
 598              	.LCFI24:
 599              		.cfi_def_cfa_offset 8
 600              		.cfi_offset 3, -8
 601              		.cfi_offset 14, -4
 382:Core/Src/main.c ****   timeoutReceive = 70;
 602              		.loc 1 382 3 is_stmt 1 view .LVU108
 603              		.loc 1 382 18 is_stmt 0 view .LVU109
 604 0002 0C4B     		ldr	r3, .L38
 605 0004 4622     		movs	r2, #70
 606 0006 1A80     		strh	r2, [r3]	@ movhi
 383:Core/Src/main.c ****   // debug_sendchar(data_rx[0]);
 384:Core/Src/main.c ****   memcpy(buf_rx+t, data_rx, 1);
 607              		.loc 1 384 3 is_stmt 1 view .LVU110
 608 0008 0B4B     		ldr	r3, .L38+4
 609 000a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 610              	.LVL32:
 611              		.loc 1 384 3 is_stmt 0 view .LVU111
 612 000c 0B4A     		ldr	r2, .L38+8
 613 000e 1388     		ldrh	r3, [r2]
 614 0010 0B49     		ldr	r1, .L38+12
 615 0012 C854     		strb	r0, [r1, r3]
 385:Core/Src/main.c ****   if (++t >= 256) t = 0;
 616              		.loc 1 385 3 is_stmt 1 view .LVU112
 617              		.loc 1 385 7 is_stmt 0 view .LVU113
 618 0014 1388     		ldrh	r3, [r2]
 619 0016 0133     		adds	r3, r3, #1
 620 0018 9BB2     		uxth	r3, r3
 621              		.loc 1 385 6 view .LVU114
 622 001a 1380     		strh	r3, [r2]	@ movhi
 623 001c FF2B     		cmp	r3, #255
 624 001e 02D9     		bls	.L36
 625              		.loc 1 385 19 is_stmt 1 discriminator 1 view .LVU115
 626              		.loc 1 385 21 is_stmt 0 discriminator 1 view .LVU116
 627 0020 1346     		mov	r3, r2
 628 0022 0022     		movs	r2, #0
 629 0024 1A80     		strh	r2, [r3]	@ movhi
 630              	.L36:
 386:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1, data_rx, 1);
 631              		.loc 1 386 3 is_stmt 1 view .LVU117
 632 0026 0122     		movs	r2, #1
 633 0028 0349     		ldr	r1, .L38+4
 634 002a 0648     		ldr	r0, .L38+16
 635 002c FFF7FEFF 		bl	HAL_UART_Receive_IT
 636              	.LVL33:
 387:Core/Src/main.c **** }
 637              		.loc 1 387 1 is_stmt 0 view .LVU118
 638 0030 08BD     		pop	{r3, pc}
 639              	.L39:
 640 0032 00BF     		.align	2
 641              	.L38:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 19


 642 0034 00000000 		.word	.LANCHOR2
 643 0038 00000000 		.word	.LANCHOR3
 644 003c 00000000 		.word	.LANCHOR5
 645 0040 00000000 		.word	.LANCHOR4
 646 0044 00000000 		.word	.LANCHOR0
 647              		.cfi_endproc
 648              	.LFE150:
 650              		.section	.rodata.ProcessDataFromUART.str1.4,"aMS",%progbits,1
 651              		.align	2
 652              	.LC0:
 653 0000 52656365 		.ascii	"Received data: \012\000"
 653      69766564 
 653      20646174 
 653      613A200A 
 653      00
 654 0011 000000   		.align	2
 655              	.LC1:
 656 0014 4572726F 		.ascii	"Error decoding frame %d\015\012\000"
 656      72206465 
 656      636F6469 
 656      6E672066 
 656      72616D65 
 657              		.section	.text.ProcessDataFromUART,"ax",%progbits
 658              		.align	1
 659              		.global	ProcessDataFromUART
 660              		.syntax unified
 661              		.thumb
 662              		.thumb_func
 663              		.fpu fpv4-sp-d16
 665              	ProcessDataFromUART:
 666              	.LFB151:
 388:Core/Src/main.c **** 
 389:Core/Src/main.c **** void ProcessDataFromUART(void)
 390:Core/Src/main.c **** {
 667              		.loc 1 390 1 is_stmt 1 view -0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 528
 670              		@ frame_needed = 0, uses_anonymous_args = 0
 391:Core/Src/main.c **** 	/* Neu khong co du lieu thi khong xu ly */
 392:Core/Src/main.c **** 	if(newReceive == 0)
 671              		.loc 1 392 2 view .LVU120
 672              		.loc 1 392 16 is_stmt 0 view .LVU121
 673 0000 374B     		ldr	r3, .L56
 674 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 675              		.loc 1 392 4 view .LVU122
 676 0004 03B9     		cbnz	r3, .L55
 677 0006 7047     		bx	lr
 678              	.L55:
 390:Core/Src/main.c **** 	/* Neu khong co du lieu thi khong xu ly */
 679              		.loc 1 390 1 view .LVU123
 680 0008 10B5     		push	{r4, lr}
 681              	.LCFI25:
 682              		.cfi_def_cfa_offset 8
 683              		.cfi_offset 4, -8
 684              		.cfi_offset 14, -4
 685 000a ADF5067D 		sub	sp, sp, #536
 686              	.LCFI26:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 20


 687              		.cfi_def_cfa_offset 544
 393:Core/Src/main.c **** 		return;
 394:Core/Src/main.c **** 	
 395:Core/Src/main.c **** 	/* Xoa co bao co du lieu */
 396:Core/Src/main.c **** 	newReceive = 0;
 688              		.loc 1 396 2 is_stmt 1 view .LVU124
 689              		.loc 1 396 13 is_stmt 0 view .LVU125
 690 000e 0021     		movs	r1, #0
 691 0010 334B     		ldr	r3, .L56
 692 0012 1970     		strb	r1, [r3]
 397:Core/Src/main.c **** 	/* Xu ly lenh */
 398:Core/Src/main.c ****   int ret;
 693              		.loc 1 398 3 is_stmt 1 view .LVU126
 399:Core/Src/main.c ****   uint8_t received_data[256] = {0};
 694              		.loc 1 399 3 view .LVU127
 695              		.loc 1 399 11 is_stmt 0 view .LVU128
 696 0014 4691     		str	r1, [sp, #280]
 697 0016 FC22     		movs	r2, #252
 698 0018 47A8     		add	r0, sp, #284
 699 001a FFF7FEFF 		bl	memset
 700              	.LVL34:
 400:Core/Src/main.c ****   int received_len = t;
 701              		.loc 1 400 3 is_stmt 1 view .LVU129
 702              		.loc 1 400 7 is_stmt 0 view .LVU130
 703 001e 314B     		ldr	r3, .L56+4
 704 0020 1A88     		ldrh	r2, [r3]
 705 0022 45AB     		add	r3, sp, #276
 706 0024 4592     		str	r2, [sp, #276]
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****   ret = yahdlc_get_data(&state, buf_rx, t, received_data, &received_len);
 707              		.loc 1 402 3 is_stmt 1 view .LVU131
 708              		.loc 1 402 9 is_stmt 0 view .LVU132
 709 0026 0093     		str	r3, [sp]
 710 0028 46AB     		add	r3, sp, #280
 711 002a 2F49     		ldr	r1, .L56+8
 712 002c 2F48     		ldr	r0, .L56+12
 713 002e FFF7FEFF 		bl	yahdlc_get_data
 714              	.LVL35:
 403:Core/Src/main.c ****   if (ret == 0) {
 715              		.loc 1 403 3 is_stmt 1 view .LVU133
 716              		.loc 1 403 6 is_stmt 0 view .LVU134
 717 0032 0446     		mov	r4, r0
 718 0034 0028     		cmp	r0, #0
 719 0036 32D1     		bne	.L43
 720              	.LBB9:
 404:Core/Src/main.c ****       debug_printf("Received data: \n");
 721              		.loc 1 404 7 is_stmt 1 view .LVU135
 722 0038 2D48     		ldr	r0, .L56+16
 723              	.LVL36:
 724              		.loc 1 404 7 is_stmt 0 view .LVU136
 725 003a FFF7FEFF 		bl	debug_printf
 726              	.LVL37:
 405:Core/Src/main.c ****       for(int i=0; i<t; i++)
 727              		.loc 1 405 7 is_stmt 1 view .LVU137
 728              	.LBB10:
 729              		.loc 1 405 11 view .LVU138
 730              		.loc 1 405 7 is_stmt 0 view .LVU139
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 21


 731 003e 04E0     		b	.L44
 732              	.LVL38:
 733              	.L45:
 406:Core/Src/main.c ****       {
 407:Core/Src/main.c ****         debug_sendchar(received_data[i]);
 734              		.loc 1 407 9 is_stmt 1 discriminator 3 view .LVU140
 735 0040 46AB     		add	r3, sp, #280
 736 0042 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 737 0044 FFF7FEFF 		bl	debug_sendchar
 738              	.LVL39:
 405:Core/Src/main.c ****       for(int i=0; i<t; i++)
 739              		.loc 1 405 25 discriminator 3 view .LVU141
 405:Core/Src/main.c ****       for(int i=0; i<t; i++)
 740              		.loc 1 405 26 is_stmt 0 discriminator 3 view .LVU142
 741 0048 0134     		adds	r4, r4, #1
 742              	.LVL40:
 743              	.L44:
 405:Core/Src/main.c ****       for(int i=0; i<t; i++)
 744              		.loc 1 405 20 is_stmt 1 discriminator 1 view .LVU143
 405:Core/Src/main.c ****       for(int i=0; i<t; i++)
 745              		.loc 1 405 21 is_stmt 0 discriminator 1 view .LVU144
 746 004a 264B     		ldr	r3, .L56+4
 747 004c 1B88     		ldrh	r3, [r3]
 405:Core/Src/main.c ****       for(int i=0; i<t; i++)
 748              		.loc 1 405 7 discriminator 1 view .LVU145
 749 004e A342     		cmp	r3, r4
 750 0050 F6DC     		bgt	.L45
 751              	.LBE10:
 408:Core/Src/main.c ****       }
 409:Core/Src/main.c ****       yahdlc_control_t control;
 752              		.loc 1 409 7 is_stmt 1 view .LVU146
 410:Core/Src/main.c ****       control.frame = YAHDLC_FRAME_ACK;
 753              		.loc 1 410 7 view .LVU147
 754              		.loc 1 410 21 is_stmt 0 view .LVU148
 755 0052 0123     		movs	r3, #1
 756 0054 8DF80C30 		strb	r3, [sp, #12]
 411:Core/Src/main.c ****       control.seq_no = 0;
 757              		.loc 1 411 7 is_stmt 1 view .LVU149
 758              		.loc 1 411 22 is_stmt 0 view .LVU150
 759 0058 9DF80D30 		ldrb	r3, [sp, #13]	@ zero_extendqisi2
 760 005c 6FF30203 		bfc	r3, #0, #3
 761 0060 8DF80D30 		strb	r3, [sp, #13]
 412:Core/Src/main.c ****       // Generate the ACK frame
 413:Core/Src/main.c ****       char frame[256];
 762              		.loc 1 413 7 is_stmt 1 view .LVU151
 414:Core/Src/main.c ****       unsigned int frame_len;
 763              		.loc 1 414 7 view .LVU152
 415:Core/Src/main.c ****       yahdlc_frame_data(&control, NULL, 0, frame, &frame_len);
 764              		.loc 1 415 7 view .LVU153
 765 0064 04AB     		add	r3, sp, #16
 766 0066 0093     		str	r3, [sp]
 767 0068 05AB     		add	r3, sp, #20
 768 006a 0022     		movs	r2, #0
 769 006c 1146     		mov	r1, r2
 770 006e 03A8     		add	r0, sp, #12
 771 0070 FFF7FEFF 		bl	yahdlc_frame_data
 772              	.LVL41:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 22


 416:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 773              		.loc 1 416 7 view .LVU154
 774              	.LBB11:
 775              		.loc 1 416 12 view .LVU155
 776              		.loc 1 416 25 is_stmt 0 view .LVU156
 777 0074 0024     		movs	r4, #0
 778              	.LVL42:
 779              		.loc 1 416 7 view .LVU157
 780 0076 04E0     		b	.L46
 781              	.LVL43:
 782              	.L47:
 417:Core/Src/main.c ****         uart_sendchar(frame[i]);
 783              		.loc 1 417 9 is_stmt 1 discriminator 3 view .LVU158
 784 0078 05AB     		add	r3, sp, #20
 785 007a 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 786 007c FFF7FEFF 		bl	uart_sendchar
 787              	.LVL44:
 416:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 788              		.loc 1 416 47 discriminator 3 view .LVU159
 416:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 789              		.loc 1 416 48 is_stmt 0 discriminator 3 view .LVU160
 790 0080 0134     		adds	r4, r4, #1
 791              	.LVL45:
 792              	.L46:
 416:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 793              		.loc 1 416 32 is_stmt 1 discriminator 1 view .LVU161
 416:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 794              		.loc 1 416 34 is_stmt 0 discriminator 1 view .LVU162
 795 0082 049B     		ldr	r3, [sp, #16]
 416:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 796              		.loc 1 416 7 discriminator 1 view .LVU163
 797 0084 A342     		cmp	r3, r4
 798 0086 F7D8     		bhi	.L47
 799              	.LVL46:
 800              	.L48:
 416:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 801              		.loc 1 416 7 discriminator 1 view .LVU164
 802              	.LBE11:
 803              	.LBE9:
 418:Core/Src/main.c ****       }
 419:Core/Src/main.c ****   } else {
 420:Core/Src/main.c ****       debug_printf("Error decoding frame %d\r\n", ret);
 421:Core/Src/main.c ****       // debug_printf("t = %d buf_rx:\r\n", t);
 422:Core/Src/main.c ****       // for(int i=0; i<t; i++)
 423:Core/Src/main.c ****       // {
 424:Core/Src/main.c ****       //   debug_printf("0x%02x, ", buf_rx[i]);
 425:Core/Src/main.c ****       // }
 426:Core/Src/main.c ****       // debug_printf("\r\nreceived_len = %d received_data:\r\n", received_len);
 427:Core/Src/main.c ****       // for(int i=0; i<received_len; i++)
 428:Core/Src/main.c ****       // {
 429:Core/Src/main.c ****       //   debug_printf("0x%02x, ", received_data[i]);
 430:Core/Src/main.c ****       // }
 431:Core/Src/main.c ****       yahdlc_control_t control;
 432:Core/Src/main.c ****       control.frame = YAHDLC_FRAME_NACK;
 433:Core/Src/main.c ****       control.seq_no = 0;
 434:Core/Src/main.c ****       // Generate the ACK frame
 435:Core/Src/main.c ****       char frame[256];
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 23


 436:Core/Src/main.c ****       unsigned int frame_len;
 437:Core/Src/main.c ****       yahdlc_frame_data(&control, NULL, 0, frame, &frame_len);
 438:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 439:Core/Src/main.c ****         uart_sendchar(frame[i]);
 440:Core/Src/main.c ****       }
 441:Core/Src/main.c ****   }
 442:Core/Src/main.c **** 	/* Xoa bo dem nhan */
 443:Core/Src/main.c **** 	t = 0;
 804              		.loc 1 443 2 is_stmt 1 discriminator 1 view .LVU165
 805              		.loc 1 443 4 is_stmt 0 discriminator 1 view .LVU166
 806 0088 0021     		movs	r1, #0
 807 008a 164B     		ldr	r3, .L56+4
 808 008c 1980     		strh	r1, [r3]	@ movhi
 444:Core/Src/main.c **** 	memset(buf_rx, 0, 256);
 809              		.loc 1 444 2 is_stmt 1 discriminator 1 view .LVU167
 810 008e 4FF48072 		mov	r2, #256
 811 0092 1548     		ldr	r0, .L56+8
 812 0094 FFF7FEFF 		bl	memset
 813              	.LVL47:
 445:Core/Src/main.c **** }
 814              		.loc 1 445 1 is_stmt 0 discriminator 1 view .LVU168
 815 0098 0DF5067D 		add	sp, sp, #536
 816              	.LCFI27:
 817              		.cfi_remember_state
 818              		.cfi_def_cfa_offset 8
 819              		@ sp needed
 820 009c 10BD     		pop	{r4, pc}
 821              	.LVL48:
 822              	.L43:
 823              	.LCFI28:
 824              		.cfi_restore_state
 825              	.LBB12:
 420:Core/Src/main.c ****       // debug_printf("t = %d buf_rx:\r\n", t);
 826              		.loc 1 420 7 is_stmt 1 view .LVU169
 827 009e 0146     		mov	r1, r0
 828 00a0 1448     		ldr	r0, .L56+20
 829              	.LVL49:
 420:Core/Src/main.c ****       // debug_printf("t = %d buf_rx:\r\n", t);
 830              		.loc 1 420 7 is_stmt 0 view .LVU170
 831 00a2 FFF7FEFF 		bl	debug_printf
 832              	.LVL50:
 431:Core/Src/main.c ****       control.frame = YAHDLC_FRAME_NACK;
 833              		.loc 1 431 7 is_stmt 1 view .LVU171
 432:Core/Src/main.c ****       control.seq_no = 0;
 834              		.loc 1 432 7 view .LVU172
 432:Core/Src/main.c ****       control.seq_no = 0;
 835              		.loc 1 432 21 is_stmt 0 view .LVU173
 836 00a6 0223     		movs	r3, #2
 837 00a8 8DF80C30 		strb	r3, [sp, #12]
 433:Core/Src/main.c ****       // Generate the ACK frame
 838              		.loc 1 433 7 is_stmt 1 view .LVU174
 433:Core/Src/main.c ****       // Generate the ACK frame
 839              		.loc 1 433 22 is_stmt 0 view .LVU175
 840 00ac 9DF80D30 		ldrb	r3, [sp, #13]	@ zero_extendqisi2
 841 00b0 6FF30203 		bfc	r3, #0, #3
 842 00b4 8DF80D30 		strb	r3, [sp, #13]
 435:Core/Src/main.c ****       unsigned int frame_len;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 24


 843              		.loc 1 435 7 is_stmt 1 view .LVU176
 436:Core/Src/main.c ****       yahdlc_frame_data(&control, NULL, 0, frame, &frame_len);
 844              		.loc 1 436 7 view .LVU177
 437:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 845              		.loc 1 437 7 view .LVU178
 846 00b8 04AB     		add	r3, sp, #16
 847 00ba 0093     		str	r3, [sp]
 848 00bc 05AB     		add	r3, sp, #20
 849 00be 0022     		movs	r2, #0
 850 00c0 1146     		mov	r1, r2
 851 00c2 03A8     		add	r0, sp, #12
 852 00c4 FFF7FEFF 		bl	yahdlc_frame_data
 853              	.LVL51:
 438:Core/Src/main.c ****         uart_sendchar(frame[i]);
 854              		.loc 1 438 7 view .LVU179
 855              	.LBB13:
 438:Core/Src/main.c ****         uart_sendchar(frame[i]);
 856              		.loc 1 438 12 view .LVU180
 438:Core/Src/main.c ****         uart_sendchar(frame[i]);
 857              		.loc 1 438 25 is_stmt 0 view .LVU181
 858 00c8 0024     		movs	r4, #0
 859              	.LVL52:
 438:Core/Src/main.c ****         uart_sendchar(frame[i]);
 860              		.loc 1 438 7 view .LVU182
 861 00ca 04E0     		b	.L49
 862              	.LVL53:
 863              	.L50:
 439:Core/Src/main.c ****       }
 864              		.loc 1 439 9 is_stmt 1 discriminator 3 view .LVU183
 865 00cc 05AB     		add	r3, sp, #20
 866 00ce 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 867 00d0 FFF7FEFF 		bl	uart_sendchar
 868              	.LVL54:
 438:Core/Src/main.c ****         uart_sendchar(frame[i]);
 869              		.loc 1 438 47 discriminator 3 view .LVU184
 438:Core/Src/main.c ****         uart_sendchar(frame[i]);
 870              		.loc 1 438 48 is_stmt 0 discriminator 3 view .LVU185
 871 00d4 0134     		adds	r4, r4, #1
 872              	.LVL55:
 873              	.L49:
 438:Core/Src/main.c ****         uart_sendchar(frame[i]);
 874              		.loc 1 438 32 is_stmt 1 discriminator 1 view .LVU186
 438:Core/Src/main.c ****         uart_sendchar(frame[i]);
 875              		.loc 1 438 34 is_stmt 0 discriminator 1 view .LVU187
 876 00d6 049B     		ldr	r3, [sp, #16]
 438:Core/Src/main.c ****         uart_sendchar(frame[i]);
 877              		.loc 1 438 7 discriminator 1 view .LVU188
 878 00d8 A342     		cmp	r3, r4
 879 00da F7D8     		bhi	.L50
 880 00dc D4E7     		b	.L48
 881              	.L57:
 882 00de 00BF     		.align	2
 883              	.L56:
 884 00e0 00000000 		.word	.LANCHOR6
 885 00e4 00000000 		.word	.LANCHOR5
 886 00e8 00000000 		.word	.LANCHOR4
 887 00ec 00000000 		.word	.LANCHOR7
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 25


 888 00f0 00000000 		.word	.LC0
 889 00f4 14000000 		.word	.LC1
 890              	.LBE13:
 891              	.LBE12:
 892              		.cfi_endproc
 893              	.LFE151:
 895              		.section	.text.Error_Handler,"ax",%progbits
 896              		.align	1
 897              		.global	Error_Handler
 898              		.syntax unified
 899              		.thumb
 900              		.thumb_func
 901              		.fpu fpv4-sp-d16
 903              	Error_Handler:
 904              	.LFB152:
 446:Core/Src/main.c **** 
 447:Core/Src/main.c **** /* USER CODE END 4 */
 448:Core/Src/main.c **** 
 449:Core/Src/main.c **** /**
 450:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 451:Core/Src/main.c ****   * @retval None
 452:Core/Src/main.c ****   */
 453:Core/Src/main.c **** void Error_Handler(void)
 454:Core/Src/main.c **** {
 905              		.loc 1 454 1 is_stmt 1 view -0
 906              		.cfi_startproc
 907              		@ Volatile: function does not return.
 908              		@ args = 0, pretend = 0, frame = 0
 909              		@ frame_needed = 0, uses_anonymous_args = 0
 910              		@ link register save eliminated.
 455:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 456:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 457:Core/Src/main.c ****   __disable_irq();
 911              		.loc 1 457 3 view .LVU190
 912              	.LBB14:
 913              	.LBI14:
 914              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 26


  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 27


  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 28


 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 29


 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 30


 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 31


 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 32


 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 33


 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 34


 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 35


 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 36


 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 37


 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 38


 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 39


 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 40


 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 41


 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 42


 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 915              		.loc 2 960 27 view .LVU191
 916              	.LBB15:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 917              		.loc 2 962 3 view .LVU192
 918              		.syntax unified
 919              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 920 0000 72B6     		cpsid i
 921              	@ 0 "" 2
 922              		.thumb
 923              		.syntax unified
 924              	.L59:
 925              	.LBE15:
 926              	.LBE14:
 458:Core/Src/main.c ****   while (1)
 927              		.loc 1 458 3 discriminator 1 view .LVU193
 459:Core/Src/main.c ****   {
 460:Core/Src/main.c ****   }
 928              		.loc 1 460 3 discriminator 1 view .LVU194
 458:Core/Src/main.c ****   while (1)
 929              		.loc 1 458 9 discriminator 1 view .LVU195
 930 0002 FEE7     		b	.L59
 931              		.cfi_endproc
 932              	.LFE152:
 934              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 935              		.align	1
 936              		.syntax unified
 937              		.thumb
 938              		.thumb_func
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 43


 939              		.fpu fpv4-sp-d16
 941              	MX_USART1_UART_Init:
 942              	.LFB139:
 216:Core/Src/main.c **** 
 943              		.loc 1 216 1 view -0
 944              		.cfi_startproc
 945              		@ args = 0, pretend = 0, frame = 0
 946              		@ frame_needed = 0, uses_anonymous_args = 0
 947 0000 08B5     		push	{r3, lr}
 948              	.LCFI29:
 949              		.cfi_def_cfa_offset 8
 950              		.cfi_offset 3, -8
 951              		.cfi_offset 14, -4
 225:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 952              		.loc 1 225 3 view .LVU197
 225:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 953              		.loc 1 225 19 is_stmt 0 view .LVU198
 954 0002 0A48     		ldr	r0, .L64
 955 0004 0A4B     		ldr	r3, .L64+4
 956 0006 0360     		str	r3, [r0]
 226:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 957              		.loc 1 226 3 is_stmt 1 view .LVU199
 226:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 958              		.loc 1 226 24 is_stmt 0 view .LVU200
 959 0008 4FF4E133 		mov	r3, #115200
 960 000c 4360     		str	r3, [r0, #4]
 227:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 961              		.loc 1 227 3 is_stmt 1 view .LVU201
 227:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 962              		.loc 1 227 26 is_stmt 0 view .LVU202
 963 000e 0023     		movs	r3, #0
 964 0010 8360     		str	r3, [r0, #8]
 228:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 965              		.loc 1 228 3 is_stmt 1 view .LVU203
 228:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 966              		.loc 1 228 24 is_stmt 0 view .LVU204
 967 0012 C360     		str	r3, [r0, #12]
 229:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 968              		.loc 1 229 3 is_stmt 1 view .LVU205
 229:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 969              		.loc 1 229 22 is_stmt 0 view .LVU206
 970 0014 0361     		str	r3, [r0, #16]
 230:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 971              		.loc 1 230 3 is_stmt 1 view .LVU207
 230:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 972              		.loc 1 230 20 is_stmt 0 view .LVU208
 973 0016 0C22     		movs	r2, #12
 974 0018 4261     		str	r2, [r0, #20]
 231:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 975              		.loc 1 231 3 is_stmt 1 view .LVU209
 231:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 976              		.loc 1 231 25 is_stmt 0 view .LVU210
 977 001a 8361     		str	r3, [r0, #24]
 232:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 978              		.loc 1 232 3 is_stmt 1 view .LVU211
 232:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 979              		.loc 1 232 28 is_stmt 0 view .LVU212
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 44


 980 001c C361     		str	r3, [r0, #28]
 233:Core/Src/main.c ****   {
 981              		.loc 1 233 3 is_stmt 1 view .LVU213
 233:Core/Src/main.c ****   {
 982              		.loc 1 233 7 is_stmt 0 view .LVU214
 983 001e FFF7FEFF 		bl	HAL_UART_Init
 984              	.LVL56:
 233:Core/Src/main.c ****   {
 985              		.loc 1 233 6 view .LVU215
 986 0022 00B9     		cbnz	r0, .L63
 241:Core/Src/main.c **** 
 987              		.loc 1 241 1 view .LVU216
 988 0024 08BD     		pop	{r3, pc}
 989              	.L63:
 235:Core/Src/main.c ****   }
 990              		.loc 1 235 5 is_stmt 1 view .LVU217
 991 0026 FFF7FEFF 		bl	Error_Handler
 992              	.LVL57:
 993              	.L65:
 994 002a 00BF     		.align	2
 995              	.L64:
 996 002c 00000000 		.word	.LANCHOR0
 997 0030 00100140 		.word	1073811456
 998              		.cfi_endproc
 999              	.LFE139:
 1001              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 1002              		.align	1
 1003              		.syntax unified
 1004              		.thumb
 1005              		.thumb_func
 1006              		.fpu fpv4-sp-d16
 1008              	MX_USART2_UART_Init:
 1009              	.LFB140:
 249:Core/Src/main.c **** 
 1010              		.loc 1 249 1 view -0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 0
 1013              		@ frame_needed = 0, uses_anonymous_args = 0
 1014 0000 08B5     		push	{r3, lr}
 1015              	.LCFI30:
 1016              		.cfi_def_cfa_offset 8
 1017              		.cfi_offset 3, -8
 1018              		.cfi_offset 14, -4
 258:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1019              		.loc 1 258 3 view .LVU219
 258:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1020              		.loc 1 258 19 is_stmt 0 view .LVU220
 1021 0002 0A48     		ldr	r0, .L70
 1022 0004 0A4B     		ldr	r3, .L70+4
 1023 0006 0360     		str	r3, [r0]
 259:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1024              		.loc 1 259 3 is_stmt 1 view .LVU221
 259:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1025              		.loc 1 259 24 is_stmt 0 view .LVU222
 1026 0008 4FF4E133 		mov	r3, #115200
 1027 000c 4360     		str	r3, [r0, #4]
 260:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 45


 1028              		.loc 1 260 3 is_stmt 1 view .LVU223
 260:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1029              		.loc 1 260 26 is_stmt 0 view .LVU224
 1030 000e 0023     		movs	r3, #0
 1031 0010 8360     		str	r3, [r0, #8]
 261:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1032              		.loc 1 261 3 is_stmt 1 view .LVU225
 261:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1033              		.loc 1 261 24 is_stmt 0 view .LVU226
 1034 0012 C360     		str	r3, [r0, #12]
 262:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1035              		.loc 1 262 3 is_stmt 1 view .LVU227
 262:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1036              		.loc 1 262 22 is_stmt 0 view .LVU228
 1037 0014 0361     		str	r3, [r0, #16]
 263:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1038              		.loc 1 263 3 is_stmt 1 view .LVU229
 263:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1039              		.loc 1 263 20 is_stmt 0 view .LVU230
 1040 0016 0C22     		movs	r2, #12
 1041 0018 4261     		str	r2, [r0, #20]
 264:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1042              		.loc 1 264 3 is_stmt 1 view .LVU231
 264:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1043              		.loc 1 264 25 is_stmt 0 view .LVU232
 1044 001a 8361     		str	r3, [r0, #24]
 265:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1045              		.loc 1 265 3 is_stmt 1 view .LVU233
 265:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1046              		.loc 1 265 28 is_stmt 0 view .LVU234
 1047 001c C361     		str	r3, [r0, #28]
 266:Core/Src/main.c ****   {
 1048              		.loc 1 266 3 is_stmt 1 view .LVU235
 266:Core/Src/main.c ****   {
 1049              		.loc 1 266 7 is_stmt 0 view .LVU236
 1050 001e FFF7FEFF 		bl	HAL_UART_Init
 1051              	.LVL58:
 266:Core/Src/main.c ****   {
 1052              		.loc 1 266 6 view .LVU237
 1053 0022 00B9     		cbnz	r0, .L69
 274:Core/Src/main.c **** 
 1054              		.loc 1 274 1 view .LVU238
 1055 0024 08BD     		pop	{r3, pc}
 1056              	.L69:
 268:Core/Src/main.c ****   }
 1057              		.loc 1 268 5 is_stmt 1 view .LVU239
 1058 0026 FFF7FEFF 		bl	Error_Handler
 1059              	.LVL59:
 1060              	.L71:
 1061 002a 00BF     		.align	2
 1062              	.L70:
 1063 002c 00000000 		.word	.LANCHOR1
 1064 0030 00440040 		.word	1073759232
 1065              		.cfi_endproc
 1066              	.LFE140:
 1068              		.section	.text.SystemClock_Config,"ax",%progbits
 1069              		.align	1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 46


 1070              		.global	SystemClock_Config
 1071              		.syntax unified
 1072              		.thumb
 1073              		.thumb_func
 1074              		.fpu fpv4-sp-d16
 1076              	SystemClock_Config:
 1077              	.LFB138:
 170:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1078              		.loc 1 170 1 view -0
 1079              		.cfi_startproc
 1080              		@ args = 0, pretend = 0, frame = 80
 1081              		@ frame_needed = 0, uses_anonymous_args = 0
 1082 0000 00B5     		push	{lr}
 1083              	.LCFI31:
 1084              		.cfi_def_cfa_offset 4
 1085              		.cfi_offset 14, -4
 1086 0002 95B0     		sub	sp, sp, #84
 1087              	.LCFI32:
 1088              		.cfi_def_cfa_offset 88
 171:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1089              		.loc 1 171 3 view .LVU241
 171:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1090              		.loc 1 171 22 is_stmt 0 view .LVU242
 1091 0004 3022     		movs	r2, #48
 1092 0006 0021     		movs	r1, #0
 1093 0008 08A8     		add	r0, sp, #32
 1094 000a FFF7FEFF 		bl	memset
 1095              	.LVL60:
 172:Core/Src/main.c **** 
 1096              		.loc 1 172 3 is_stmt 1 view .LVU243
 172:Core/Src/main.c **** 
 1097              		.loc 1 172 22 is_stmt 0 view .LVU244
 1098 000e 0023     		movs	r3, #0
 1099 0010 0393     		str	r3, [sp, #12]
 1100 0012 0493     		str	r3, [sp, #16]
 1101 0014 0593     		str	r3, [sp, #20]
 1102 0016 0693     		str	r3, [sp, #24]
 1103 0018 0793     		str	r3, [sp, #28]
 176:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1104              		.loc 1 176 3 is_stmt 1 view .LVU245
 1105              	.LBB16:
 176:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1106              		.loc 1 176 3 view .LVU246
 1107 001a 0193     		str	r3, [sp, #4]
 176:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1108              		.loc 1 176 3 view .LVU247
 1109 001c 1E4A     		ldr	r2, .L78
 1110 001e 116C     		ldr	r1, [r2, #64]
 1111 0020 41F08051 		orr	r1, r1, #268435456
 1112 0024 1164     		str	r1, [r2, #64]
 176:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1113              		.loc 1 176 3 view .LVU248
 1114 0026 126C     		ldr	r2, [r2, #64]
 1115 0028 02F08052 		and	r2, r2, #268435456
 1116 002c 0192     		str	r2, [sp, #4]
 176:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1117              		.loc 1 176 3 view .LVU249
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 47


 1118 002e 019A     		ldr	r2, [sp, #4]
 1119              	.LBE16:
 176:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1120              		.loc 1 176 3 view .LVU250
 177:Core/Src/main.c **** 
 1121              		.loc 1 177 3 view .LVU251
 1122              	.LBB17:
 177:Core/Src/main.c **** 
 1123              		.loc 1 177 3 view .LVU252
 1124 0030 0293     		str	r3, [sp, #8]
 177:Core/Src/main.c **** 
 1125              		.loc 1 177 3 view .LVU253
 1126 0032 1A4B     		ldr	r3, .L78+4
 1127 0034 1A68     		ldr	r2, [r3]
 1128 0036 42F48042 		orr	r2, r2, #16384
 1129 003a 1A60     		str	r2, [r3]
 177:Core/Src/main.c **** 
 1130              		.loc 1 177 3 view .LVU254
 1131 003c 1B68     		ldr	r3, [r3]
 1132 003e 03F48043 		and	r3, r3, #16384
 1133 0042 0293     		str	r3, [sp, #8]
 177:Core/Src/main.c **** 
 1134              		.loc 1 177 3 view .LVU255
 1135 0044 029B     		ldr	r3, [sp, #8]
 1136              	.LBE17:
 177:Core/Src/main.c **** 
 1137              		.loc 1 177 3 view .LVU256
 182:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1138              		.loc 1 182 3 view .LVU257
 182:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1139              		.loc 1 182 36 is_stmt 0 view .LVU258
 1140 0046 0123     		movs	r3, #1
 1141 0048 0893     		str	r3, [sp, #32]
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1142              		.loc 1 183 3 is_stmt 1 view .LVU259
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1143              		.loc 1 183 30 is_stmt 0 view .LVU260
 1144 004a 4FF48033 		mov	r3, #65536
 1145 004e 0993     		str	r3, [sp, #36]
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1146              		.loc 1 184 3 is_stmt 1 view .LVU261
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1147              		.loc 1 184 34 is_stmt 0 view .LVU262
 1148 0050 0223     		movs	r3, #2
 1149 0052 0E93     		str	r3, [sp, #56]
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1150              		.loc 1 185 3 is_stmt 1 view .LVU263
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1151              		.loc 1 185 35 is_stmt 0 view .LVU264
 1152 0054 4FF48003 		mov	r3, #4194304
 1153 0058 0F93     		str	r3, [sp, #60]
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1154              		.loc 1 186 3 is_stmt 1 view .LVU265
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1155              		.loc 1 186 30 is_stmt 0 view .LVU266
 1156 005a 0423     		movs	r3, #4
 1157 005c 1093     		str	r3, [sp, #64]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 48


 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1158              		.loc 1 187 3 is_stmt 1 view .LVU267
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1159              		.loc 1 187 30 is_stmt 0 view .LVU268
 1160 005e 9022     		movs	r2, #144
 1161 0060 1192     		str	r2, [sp, #68]
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1162              		.loc 1 188 3 is_stmt 1 view .LVU269
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1163              		.loc 1 188 30 is_stmt 0 view .LVU270
 1164 0062 1293     		str	r3, [sp, #72]
 189:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1165              		.loc 1 189 3 is_stmt 1 view .LVU271
 189:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1166              		.loc 1 189 30 is_stmt 0 view .LVU272
 1167 0064 1393     		str	r3, [sp, #76]
 190:Core/Src/main.c ****   {
 1168              		.loc 1 190 3 is_stmt 1 view .LVU273
 190:Core/Src/main.c ****   {
 1169              		.loc 1 190 7 is_stmt 0 view .LVU274
 1170 0066 08A8     		add	r0, sp, #32
 1171 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1172              	.LVL61:
 190:Core/Src/main.c ****   {
 1173              		.loc 1 190 6 view .LVU275
 1174 006c 80B9     		cbnz	r0, .L76
 197:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1175              		.loc 1 197 3 is_stmt 1 view .LVU276
 197:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1176              		.loc 1 197 31 is_stmt 0 view .LVU277
 1177 006e 0F23     		movs	r3, #15
 1178 0070 0393     		str	r3, [sp, #12]
 199:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1179              		.loc 1 199 3 is_stmt 1 view .LVU278
 199:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1180              		.loc 1 199 34 is_stmt 0 view .LVU279
 1181 0072 0221     		movs	r1, #2
 1182 0074 0491     		str	r1, [sp, #16]
 200:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1183              		.loc 1 200 3 is_stmt 1 view .LVU280
 200:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1184              		.loc 1 200 35 is_stmt 0 view .LVU281
 1185 0076 0023     		movs	r3, #0
 1186 0078 0593     		str	r3, [sp, #20]
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1187              		.loc 1 201 3 is_stmt 1 view .LVU282
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1188              		.loc 1 201 36 is_stmt 0 view .LVU283
 1189 007a 4FF48052 		mov	r2, #4096
 1190 007e 0692     		str	r2, [sp, #24]
 202:Core/Src/main.c **** 
 1191              		.loc 1 202 3 is_stmt 1 view .LVU284
 202:Core/Src/main.c **** 
 1192              		.loc 1 202 36 is_stmt 0 view .LVU285
 1193 0080 0793     		str	r3, [sp, #28]
 204:Core/Src/main.c ****   {
 1194              		.loc 1 204 3 is_stmt 1 view .LVU286
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 49


 204:Core/Src/main.c ****   {
 1195              		.loc 1 204 7 is_stmt 0 view .LVU287
 1196 0082 03A8     		add	r0, sp, #12
 1197 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1198              	.LVL62:
 204:Core/Src/main.c ****   {
 1199              		.loc 1 204 6 view .LVU288
 1200 0088 20B9     		cbnz	r0, .L77
 208:Core/Src/main.c **** 
 1201              		.loc 1 208 1 view .LVU289
 1202 008a 15B0     		add	sp, sp, #84
 1203              	.LCFI33:
 1204              		.cfi_remember_state
 1205              		.cfi_def_cfa_offset 4
 1206              		@ sp needed
 1207 008c 5DF804FB 		ldr	pc, [sp], #4
 1208              	.L76:
 1209              	.LCFI34:
 1210              		.cfi_restore_state
 192:Core/Src/main.c ****   }
 1211              		.loc 1 192 5 is_stmt 1 view .LVU290
 1212 0090 FFF7FEFF 		bl	Error_Handler
 1213              	.LVL63:
 1214              	.L77:
 206:Core/Src/main.c ****   }
 1215              		.loc 1 206 5 view .LVU291
 1216 0094 FFF7FEFF 		bl	Error_Handler
 1217              	.LVL64:
 1218              	.L79:
 1219              		.align	2
 1220              	.L78:
 1221 0098 00380240 		.word	1073887232
 1222 009c 00700040 		.word	1073770496
 1223              		.cfi_endproc
 1224              	.LFE138:
 1226              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1227              		.align	2
 1228              	.LC2:
 1229 0000 48454C4C 		.ascii	"HELLO WORLD!!!\015\012\000"
 1229      4F20574F 
 1229      524C4421 
 1229      21210D0A 
 1229      00
 1230 0011 000000   		.align	2
 1231              	.LC3:
 1232 0014 436F7265 		.ascii	"Core/Src/main.c\000"
 1232      2F537263 
 1232      2F6D6169 
 1232      6E2E6300 
 1233              		.align	2
 1234              	.LC4:
 1235 0024 74657374 		.ascii	"test_add\000"
 1235      5F616464 
 1235      00
 1236 002d 000000   		.align	2
 1237              	.LC5:
 1238 0030 31323334 		.ascii	"1234567\015\012\000"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 50


 1238      3536370D 
 1238      0A00
 1239              		.section	.text.main,"ax",%progbits
 1240              		.align	1
 1241              		.global	main
 1242              		.syntax unified
 1243              		.thumb
 1244              		.thumb_func
 1245              		.fpu fpv4-sp-d16
 1247              	main:
 1248              	.LFB137:
  90:Core/Src/main.c **** 
 1249              		.loc 1 90 1 view -0
 1250              		.cfi_startproc
 1251              		@ args = 0, pretend = 0, frame = 280
 1252              		@ frame_needed = 0, uses_anonymous_args = 0
 1253 0000 30B5     		push	{r4, r5, lr}
 1254              	.LCFI35:
 1255              		.cfi_def_cfa_offset 12
 1256              		.cfi_offset 4, -12
 1257              		.cfi_offset 5, -8
 1258              		.cfi_offset 14, -4
 1259 0002 C9B0     		sub	sp, sp, #292
 1260              	.LCFI36:
 1261              		.cfi_def_cfa_offset 304
  99:Core/Src/main.c **** 
 1262              		.loc 1 99 3 view .LVU293
 1263 0004 FFF7FEFF 		bl	HAL_Init
 1264              	.LVL65:
 106:Core/Src/main.c **** 
 1265              		.loc 1 106 3 view .LVU294
 1266 0008 FFF7FEFF 		bl	SystemClock_Config
 1267              	.LVL66:
 113:Core/Src/main.c ****   MX_USART1_UART_Init();
 1268              		.loc 1 113 3 view .LVU295
 1269 000c FFF7FEFF 		bl	MX_GPIO_Init
 1270              	.LVL67:
 114:Core/Src/main.c ****   MX_USART2_UART_Init();
 1271              		.loc 1 114 3 view .LVU296
 1272 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 1273              	.LVL68:
 115:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1274              		.loc 1 115 3 view .LVU297
 1275 0014 FFF7FEFF 		bl	MX_USART2_UART_Init
 1276              	.LVL69:
 117:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1, data_rx, 1);
 1277              		.loc 1 117 3 view .LVU298
 1278 0018 2348     		ldr	r0, .L87
 1279 001a FFF7FEFF 		bl	debug_printf
 1280              	.LVL70:
 118:Core/Src/main.c ****   UNITY_BEGIN();
 1281              		.loc 1 118 3 view .LVU299
 1282 001e 0122     		movs	r2, #1
 1283 0020 2249     		ldr	r1, .L87+4
 1284 0022 2348     		ldr	r0, .L87+8
 1285 0024 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1286              	.LVL71:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 51


 119:Core/Src/main.c ****   RUN_TEST(test_add);
 1287              		.loc 1 119 3 view .LVU300
 1288 0028 2248     		ldr	r0, .L87+12
 1289 002a FFF7FEFF 		bl	UnityBegin
 1290              	.LVL72:
 120:Core/Src/main.c ****   UNITY_END();
 1291              		.loc 1 120 3 view .LVU301
 1292 002e 7822     		movs	r2, #120
 1293 0030 2149     		ldr	r1, .L87+16
 1294 0032 2248     		ldr	r0, .L87+20
 1295 0034 FFF7FEFF 		bl	UnityDefaultTestRun
 1296              	.LVL73:
 121:Core/Src/main.c ****   char string_buffer[256];
 1297              		.loc 1 121 3 view .LVU302
 1298 0038 FFF7FEFF 		bl	UnityEnd
 1299              	.LVL74:
 122:Core/Src/main.c **** 
 1300              		.loc 1 122 3 view .LVU303
 124:Core/Src/main.c **** 
 1301              		.loc 1 124 3 view .LVU304
 1302 003c 2048     		ldr	r0, .L87+24
 1303 003e FFF7FEFF 		bl	yahdlc_set_state
 1304              	.LVL75:
 126:Core/Src/main.c ****   control.frame = YAHDLC_FRAME_DATA;
 1305              		.loc 1 126 3 view .LVU305
 127:Core/Src/main.c ****   control.seq_no = 0;
 1306              		.loc 1 127 3 view .LVU306
 127:Core/Src/main.c ****   control.seq_no = 0;
 1307              		.loc 1 127 17 is_stmt 0 view .LVU307
 1308 0042 0024     		movs	r4, #0
 1309 0044 8DF81C41 		strb	r4, [sp, #284]
 128:Core/Src/main.c **** 
 1310              		.loc 1 128 3 is_stmt 1 view .LVU308
 128:Core/Src/main.c **** 
 1311              		.loc 1 128 18 is_stmt 0 view .LVU309
 1312 0048 9DF81D31 		ldrb	r3, [sp, #285]	@ zero_extendqisi2
 1313 004c 64F30203 		bfi	r3, r4, #0, #3
 1314 0050 8DF81D31 		strb	r3, [sp, #285]
 130:Core/Src/main.c ****   uint8_t output_frame[256];
 1315              		.loc 1 130 3 is_stmt 1 view .LVU310
 130:Core/Src/main.c ****   uint8_t output_frame[256];
 1316              		.loc 1 130 11 is_stmt 0 view .LVU311
 1317 0054 1B4A     		ldr	r2, .L87+28
 1318 0056 44AB     		add	r3, sp, #272
 1319 0058 07CA     		ldm	r2, {r0, r1, r2}
 1320 005a 03C3     		stmia	r3!, {r0, r1}
 1321 005c 1A80     		strh	r2, [r3]	@ movhi
 131:Core/Src/main.c ****   int frame_len;
 1322              		.loc 1 131 3 is_stmt 1 view .LVU312
 132:Core/Src/main.c **** 
 1323              		.loc 1 132 3 view .LVU313
 134:Core/Src/main.c ****   for(int i=0; i<frame_len; i++)
 1324              		.loc 1 134 3 view .LVU314
 1325 005e 03AB     		add	r3, sp, #12
 1326 0060 0093     		str	r3, [sp]
 1327 0062 04AB     		add	r3, sp, #16
 1328 0064 0922     		movs	r2, #9
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 52


 1329 0066 44A9     		add	r1, sp, #272
 1330 0068 47A8     		add	r0, sp, #284
 1331 006a FFF7FEFF 		bl	yahdlc_frame_data
 1332              	.LVL76:
 135:Core/Src/main.c ****   {
 1333              		.loc 1 135 3 view .LVU315
 1334              	.LBB18:
 135:Core/Src/main.c ****   {
 1335              		.loc 1 135 7 view .LVU316
 135:Core/Src/main.c ****   {
 1336              		.loc 1 135 3 is_stmt 0 view .LVU317
 1337 006e 07E0     		b	.L81
 1338              	.LVL77:
 1339              	.L82:
 137:Core/Src/main.c ****     uart_sendchar(output_frame[i]);
 1340              		.loc 1 137 5 is_stmt 1 discriminator 3 view .LVU318
 137:Core/Src/main.c ****     uart_sendchar(output_frame[i]);
 1341              		.loc 1 137 32 is_stmt 0 discriminator 3 view .LVU319
 1342 0070 04AD     		add	r5, sp, #16
 137:Core/Src/main.c ****     uart_sendchar(output_frame[i]);
 1343              		.loc 1 137 5 discriminator 3 view .LVU320
 1344 0072 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 1345 0074 FFF7FEFF 		bl	debug_sendchar
 1346              	.LVL78:
 138:Core/Src/main.c ****   }
 1347              		.loc 1 138 5 is_stmt 1 discriminator 3 view .LVU321
 1348 0078 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 1349 007a FFF7FEFF 		bl	uart_sendchar
 1350              	.LVL79:
 135:Core/Src/main.c ****   {
 1351              		.loc 1 135 29 discriminator 3 view .LVU322
 135:Core/Src/main.c ****   {
 1352              		.loc 1 135 30 is_stmt 0 discriminator 3 view .LVU323
 1353 007e 0134     		adds	r4, r4, #1
 1354              	.LVL80:
 1355              	.L81:
 135:Core/Src/main.c ****   {
 1356              		.loc 1 135 16 is_stmt 1 discriminator 1 view .LVU324
 135:Core/Src/main.c ****   {
 1357              		.loc 1 135 17 is_stmt 0 discriminator 1 view .LVU325
 1358 0080 039B     		ldr	r3, [sp, #12]
 135:Core/Src/main.c ****   {
 1359              		.loc 1 135 3 discriminator 1 view .LVU326
 1360 0082 A342     		cmp	r3, r4
 1361 0084 F4DC     		bgt	.L82
 1362 0086 09E0     		b	.L84
 1363              	.L86:
 1364              	.LBE18:
 151:Core/Src/main.c ****       delaytimer = 1000;
 1365              		.loc 1 151 7 is_stmt 1 view .LVU327
 1366 0088 4021     		movs	r1, #64
 1367 008a 0F48     		ldr	r0, .L87+32
 1368 008c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1369              	.LVL81:
 152:Core/Src/main.c ****       // for(int i=0; i<frame_len; i++)
 1370              		.loc 1 152 7 view .LVU328
 152:Core/Src/main.c ****       // for(int i=0; i<frame_len; i++)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 53


 1371              		.loc 1 152 18 is_stmt 0 view .LVU329
 1372 0090 0E4B     		ldr	r3, .L87+36
 1373 0092 4FF47A72 		mov	r2, #1000
 1374 0096 1A80     		strh	r2, [r3]	@ movhi
 1375              	.L83:
 159:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 1376              		.loc 1 159 5 is_stmt 1 view .LVU330
 1377 0098 FFF7FEFF 		bl	ProcessDataFromUART
 1378              	.LVL82:
 146:Core/Src/main.c ****   {
 1379              		.loc 1 146 9 view .LVU331
 1380              	.L84:
 146:Core/Src/main.c ****   {
 1381              		.loc 1 146 3 view .LVU332
 149:Core/Src/main.c ****     {
 1382              		.loc 1 149 5 view .LVU333
 149:Core/Src/main.c ****     {
 1383              		.loc 1 149 19 is_stmt 0 view .LVU334
 1384 009c 0B4B     		ldr	r3, .L87+36
 1385 009e 1B88     		ldrh	r3, [r3]
 149:Core/Src/main.c ****     {
 1386              		.loc 1 149 7 view .LVU335
 1387 00a0 002B     		cmp	r3, #0
 1388 00a2 F1D0     		beq	.L86
 1389 00a4 F8E7     		b	.L83
 1390              	.L88:
 1391 00a6 00BF     		.align	2
 1392              	.L87:
 1393 00a8 00000000 		.word	.LC2
 1394 00ac 00000000 		.word	.LANCHOR3
 1395 00b0 00000000 		.word	.LANCHOR0
 1396 00b4 14000000 		.word	.LC3
 1397 00b8 24000000 		.word	.LC4
 1398 00bc 00000000 		.word	test_add
 1399 00c0 00000000 		.word	.LANCHOR7
 1400 00c4 30000000 		.word	.LC5
 1401 00c8 00000240 		.word	1073872896
 1402 00cc 00000000 		.word	.LANCHOR8
 1403              		.cfi_endproc
 1404              	.LFE137:
 1406              		.global	state
 1407              		.global	t
 1408              		.global	buf_rx
 1409              		.global	data_rx
 1410              		.global	newReceive
 1411              		.global	delaytimer
 1412              		.global	timeoutReceive
 1413              		.global	huart2
 1414              		.global	huart1
 1415              		.section	.bss.buf_rx,"aw",%nobits
 1416              		.align	2
 1417              		.set	.LANCHOR4,. + 0
 1420              	buf_rx:
 1421 0000 00000000 		.space	256
 1421      00000000 
 1421      00000000 
 1421      00000000 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 54


 1421      00000000 
 1422              		.section	.bss.data_rx,"aw",%nobits
 1423              		.align	2
 1424              		.set	.LANCHOR3,. + 0
 1427              	data_rx:
 1428 0000 0000     		.space	2
 1429              		.section	.bss.huart1,"aw",%nobits
 1430              		.align	2
 1431              		.set	.LANCHOR0,. + 0
 1434              	huart1:
 1435 0000 00000000 		.space	72
 1435      00000000 
 1435      00000000 
 1435      00000000 
 1435      00000000 
 1436              		.section	.bss.huart2,"aw",%nobits
 1437              		.align	2
 1438              		.set	.LANCHOR1,. + 0
 1441              	huart2:
 1442 0000 00000000 		.space	72
 1442      00000000 
 1442      00000000 
 1442      00000000 
 1442      00000000 
 1443              		.section	.bss.newReceive,"aw",%nobits
 1444              		.set	.LANCHOR6,. + 0
 1447              	newReceive:
 1448 0000 00       		.space	1
 1449              		.section	.bss.state,"aw",%nobits
 1450              		.align	2
 1451              		.set	.LANCHOR7,. + 0
 1454              	state:
 1455 0000 00000000 		.space	20
 1455      00000000 
 1455      00000000 
 1455      00000000 
 1455      00000000 
 1456              		.section	.bss.t,"aw",%nobits
 1457              		.align	1
 1458              		.set	.LANCHOR5,. + 0
 1461              	t:
 1462 0000 0000     		.space	2
 1463              		.section	.data.delaytimer,"aw"
 1464              		.align	1
 1465              		.set	.LANCHOR8,. + 0
 1468              	delaytimer:
 1469 0000 E803     		.short	1000
 1470              		.section	.data.timeoutReceive,"aw"
 1471              		.align	1
 1472              		.set	.LANCHOR2,. + 0
 1475              	timeoutReceive:
 1476 0000 4600     		.short	70
 1477              		.text
 1478              	.Letext0:
 1479              		.file 3 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\includ
 1480              		.file 4 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\includ
 1481              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 55


 1482              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1483              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1484              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1485              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1486              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1487              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1488              		.file 12 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\lib\\gcc\\arm-none-e
 1489              		.file 13 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\inclu
 1490              		.file 14 "Core/test/unity_internals.h"
 1491              		.file 15 "Core/test/yahdlc.h"
 1492              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1493              		.file 17 "<built-in>"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 56


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:25     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:117    .text.MX_GPIO_Init:00000060 $d
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:123    .text.uart_printf:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:130    .text.uart_printf:00000000 uart_printf
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:219    .text.uart_printf:00000040 $d
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:224    .text.uart_sendchar:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:231    .text.uart_sendchar:00000000 uart_sendchar
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:267    .text.uart_sendchar:0000001c $d
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:272    .text.debug_printf:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:279    .text.debug_printf:00000000 debug_printf
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:368    .text.debug_printf:00000040 $d
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:373    .text.debug_sendchar:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:380    .text.debug_sendchar:00000000 debug_sendchar
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:416    .text.debug_sendchar:0000001c $d
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:421    .text.add:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:428    .text.add:00000000 add
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:446    .text.test_add:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:453    .text.test_add:00000000 test_add
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:542    .text.setUp:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:549    .text.setUp:00000000 setUp
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:562    .text.tearDown:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:569    .text.tearDown:00000000 tearDown
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:582    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:589    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:642    .text.HAL_UART_RxCpltCallback:00000034 $d
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:651    .rodata.ProcessDataFromUART.str1.4:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:658    .text.ProcessDataFromUART:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:665    .text.ProcessDataFromUART:00000000 ProcessDataFromUART
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:884    .text.ProcessDataFromUART:000000e0 $d
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:896    .text.Error_Handler:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:903    .text.Error_Handler:00000000 Error_Handler
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:935    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:941    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:996    .text.MX_USART1_UART_Init:0000002c $d
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:1002   .text.MX_USART2_UART_Init:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:1008   .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:1063   .text.MX_USART2_UART_Init:0000002c $d
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:1069   .text.SystemClock_Config:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:1076   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:1221   .text.SystemClock_Config:00000098 $d
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:1227   .rodata.main.str1.4:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:1240   .text.main:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:1247   .text.main:00000000 main
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:1393   .text.main:000000a8 $d
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:1454   .bss.state:00000000 state
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:1461   .bss.t:00000000 t
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:1420   .bss.buf_rx:00000000 buf_rx
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:1427   .bss.data_rx:00000000 data_rx
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:1447   .bss.newReceive:00000000 newReceive
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:1468   .data.delaytimer:00000000 delaytimer
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:1475   .data.timeoutReceive:00000000 timeoutReceive
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:1441   .bss.huart2:00000000 huart2
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:1434   .bss.huart1:00000000 huart1
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:1416   .bss.buf_rx:00000000 $d
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s 			page 57


C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:1423   .bss.data_rx:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:1430   .bss.huart1:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:1437   .bss.huart2:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:1448   .bss.newReceive:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:1450   .bss.state:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:1457   .bss.t:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:1464   .data.delaytimer:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\cceb3b7j.s:1471   .data.timeoutReceive:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
vsprintf
HAL_UART_Transmit
UnityAssertEqualNumber
HAL_UART_Receive_IT
memset
yahdlc_get_data
yahdlc_frame_data
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
UnityBegin
UnityDefaultTestRun
UnityEnd
yahdlc_set_state
HAL_GPIO_TogglePin
