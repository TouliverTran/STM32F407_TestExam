ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB141:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** #include <stdarg.h>
  26:Core/Src/main.c **** #include <string.h>
  27:Core/Src/main.c **** #include <assert.h>
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** #include "unity.h"
  30:Core/Src/main.c **** #include "yahdlc.h"
  31:Core/Src/main.c **** #include "function.h"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 2


  32:Core/Src/main.c **** #include "function_test.h"
  33:Core/Src/main.c **** /* USER CODE END Includes */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PTD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PD */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  46:Core/Src/main.c **** /* USER CODE BEGIN PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PM */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  51:Core/Src/main.c **** UART_HandleTypeDef huart1;
  52:Core/Src/main.c **** UART_HandleTypeDef huart2;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE BEGIN PV */
  55:Core/Src/main.c **** extern uint16_t timeoutReceive = 70;
  56:Core/Src/main.c **** extern uint16_t delaytimer = 1000;
  57:Core/Src/main.c **** extern uint8_t newReceive = 0;
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** yahdlc_control_t control ={0};
  60:Core/Src/main.c **** uint8_t yahdlc_send_frame[BUF_SIZE] = {0};
  61:Core/Src/main.c **** /* USER CODE END PV */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  64:Core/Src/main.c **** void SystemClock_Config(void);
  65:Core/Src/main.c **** static void MX_GPIO_Init(void);
  66:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  67:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  68:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  69:Core/Src/main.c **** int uart_printf(const char *fmt, ...);
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart);
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** extern int debug_printf(const char *fmt, ...);
  74:Core/Src/main.c **** void debug_sendchar(const char pdata);
  75:Core/Src/main.c **** void append_char_to_buffer(char *buffer, size_t buffer_size, char c);
  76:Core/Src/main.c **** void ProcessDataFromUART(void);
  77:Core/Src/main.c **** /* USER CODE END PFP */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  80:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  81:Core/Src/main.c **** uint8_t data_rx[2];
  82:Core/Src/main.c **** uint8_t buf_rx[BUF_SIZE];
  83:Core/Src/main.c **** uint16_t t = 0;
  84:Core/Src/main.c **** yahdlc_state_t state;
  85:Core/Src/main.c **** /* USER CODE END 0 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /**
  88:Core/Src/main.c ****   * @brief  The application entry point.
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 3


  89:Core/Src/main.c ****   * @retval int
  90:Core/Src/main.c ****   */
  91:Core/Src/main.c **** int main(void)
  92:Core/Src/main.c **** {
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE END 1 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 101:Core/Src/main.c ****   HAL_Init();
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* USER CODE END Init */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* Configure the system clock */
 108:Core/Src/main.c ****   SystemClock_Config();
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE END SysInit */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* Initialize all configured peripherals */
 115:Core/Src/main.c ****   MX_GPIO_Init();
 116:Core/Src/main.c ****   MX_USART1_UART_Init();
 117:Core/Src/main.c ****   MX_USART2_UART_Init();
 118:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 119:Core/Src/main.c ****   // debug_printf("HELLO WORLD!!!\r\n");
 120:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1, data_rx, 1);
 121:Core/Src/main.c ****   memset(yahdlc_send_frame, 0, BUF_SIZE);
 122:Core/Src/main.c ****   tc_add();
 123:Core/Src/main.c ****   debug_printf("%s\n",yahdlc_send_frame);
 124:Core/Src/main.c ****   memset(yahdlc_send_frame, 0, BUF_SIZE);
 125:Core/Src/main.c ****   tc_subtract();
 126:Core/Src/main.c ****   debug_printf("%s\n",yahdlc_send_frame);
 127:Core/Src/main.c ****   memset(yahdlc_send_frame, 0, BUF_SIZE);
 128:Core/Src/main.c ****   tc_multiply();
 129:Core/Src/main.c ****   debug_printf("%s\n",yahdlc_send_frame);
 130:Core/Src/main.c ****   memset(yahdlc_send_frame, 0, BUF_SIZE);
 131:Core/Src/main.c ****   tc_divide();
 132:Core/Src/main.c ****   debug_printf("%s\n",yahdlc_send_frame);
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   yahdlc_set_state(&state);
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   control.frame = YAHDLC_FRAME_DATA;
 137:Core/Src/main.c ****   control.seq_no = 0;
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   uint8_t input_data[] = "1234567\r\n";
 140:Core/Src/main.c ****   int frame_len;
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   yahdlc_frame_data(&control, input_data, sizeof(input_data)-1, yahdlc_send_frame, &frame_len);
 143:Core/Src/main.c ****   for(int i=0; i<frame_len; i++)
 144:Core/Src/main.c ****   {
 145:Core/Src/main.c ****     // debug_sendchar(yahdlc_send_frame[i]);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 4


 146:Core/Src/main.c ****     uart_sendchar(yahdlc_send_frame[i]);
 147:Core/Src/main.c ****   }
 148:Core/Src/main.c **** 
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   /* USER CODE END 2 */
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /* Infinite loop */
 153:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 154:Core/Src/main.c ****   while (1)
 155:Core/Src/main.c ****   {
 156:Core/Src/main.c ****     /* USER CODE END WHILE */
 157:Core/Src/main.c ****     if(delaytimer == 0)
 158:Core/Src/main.c ****     {
 159:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_6);
 160:Core/Src/main.c ****       delaytimer = 1000;
 161:Core/Src/main.c ****       // for(int i=0; i<frame_len; i++)
 162:Core/Src/main.c ****       // {
 163:Core/Src/main.c ****       //   uart_sendchar(yahdlc_send_frame[i]);
 164:Core/Src/main.c ****       // }
 165:Core/Src/main.c ****     }
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****     ProcessDataFromUART();
 168:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 169:Core/Src/main.c ****   }
 170:Core/Src/main.c ****   /* USER CODE END 3 */
 171:Core/Src/main.c **** }
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** /**
 174:Core/Src/main.c ****   * @brief System Clock Configuration
 175:Core/Src/main.c ****   * @retval None
 176:Core/Src/main.c ****   */
 177:Core/Src/main.c **** void SystemClock_Config(void)
 178:Core/Src/main.c **** {
 179:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 180:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 183:Core/Src/main.c ****   */
 184:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 185:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 188:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 189:Core/Src/main.c ****   */
 190:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 191:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 198:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 199:Core/Src/main.c ****   {
 200:Core/Src/main.c ****     Error_Handler();
 201:Core/Src/main.c ****   }
 202:Core/Src/main.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 5


 203:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 204:Core/Src/main.c ****   */
 205:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 206:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 207:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 208:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 209:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 210:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 213:Core/Src/main.c ****   {
 214:Core/Src/main.c ****     Error_Handler();
 215:Core/Src/main.c ****   }
 216:Core/Src/main.c **** }
 217:Core/Src/main.c **** 
 218:Core/Src/main.c **** /**
 219:Core/Src/main.c ****   * @brief USART1 Initialization Function
 220:Core/Src/main.c ****   * @param None
 221:Core/Src/main.c ****   * @retval None
 222:Core/Src/main.c ****   */
 223:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 224:Core/Src/main.c **** {
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 233:Core/Src/main.c ****   huart1.Instance = USART1;
 234:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 235:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 236:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 237:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 238:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 239:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 240:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 241:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 242:Core/Src/main.c ****   {
 243:Core/Src/main.c ****     Error_Handler();
 244:Core/Src/main.c ****   }
 245:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 248:Core/Src/main.c **** 
 249:Core/Src/main.c **** }
 250:Core/Src/main.c **** 
 251:Core/Src/main.c **** /**
 252:Core/Src/main.c ****   * @brief USART2 Initialization Function
 253:Core/Src/main.c ****   * @param None
 254:Core/Src/main.c ****   * @retval None
 255:Core/Src/main.c ****   */
 256:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 257:Core/Src/main.c **** {
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 6


 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 266:Core/Src/main.c ****   huart2.Instance = USART2;
 267:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 268:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 269:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 270:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 271:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 272:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 273:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 274:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 275:Core/Src/main.c ****   {
 276:Core/Src/main.c ****     Error_Handler();
 277:Core/Src/main.c ****   }
 278:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 281:Core/Src/main.c **** 
 282:Core/Src/main.c **** }
 283:Core/Src/main.c **** 
 284:Core/Src/main.c **** /**
 285:Core/Src/main.c ****   * @brief GPIO Initialization Function
 286:Core/Src/main.c ****   * @param None
 287:Core/Src/main.c ****   * @retval None
 288:Core/Src/main.c ****   */
 289:Core/Src/main.c **** static void MX_GPIO_Init(void)
 290:Core/Src/main.c **** {
  28              		.loc 1 290 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 291:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 291 3 view .LVU1
  42              		.loc 1 291 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 292:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 293:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 7


 296:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  49              		.loc 1 296 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 296 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
  53              		.loc 1 296 3 view .LVU5
  54 0012 134B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F08002 		orr	r2, r2, #128
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 296 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F08002 		and	r2, r2, #128
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 296 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 296 3 view .LVU8
 297:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  66              		.loc 1 297 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 297 3 view .LVU10
  69 0026 0294     		str	r4, [sp, #8]
  70              		.loc 1 297 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F00102 		orr	r2, r2, #1
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 297 3 view .LVU12
  75 0030 1B6B     		ldr	r3, [r3, #48]
  76 0032 03F00103 		and	r3, r3, #1
  77 0036 0293     		str	r3, [sp, #8]
  78              		.loc 1 297 3 view .LVU13
  79 0038 029B     		ldr	r3, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 297 3 view .LVU14
 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 300:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, GPIO_PIN_RESET);
  82              		.loc 1 300 3 view .LVU15
  83 003a 0A4D     		ldr	r5, .L3+4
  84 003c 2246     		mov	r2, r4
  85 003e 4021     		movs	r1, #64
  86 0040 2846     		mov	r0, r5
  87 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL0:
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****   /*Configure GPIO pin : PA6 */
 303:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_6;
  89              		.loc 1 303 3 view .LVU16
  90              		.loc 1 303 23 is_stmt 0 view .LVU17
  91 0046 4023     		movs	r3, #64
  92 0048 0393     		str	r3, [sp, #12]
 304:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  93              		.loc 1 304 3 is_stmt 1 view .LVU18
  94              		.loc 1 304 24 is_stmt 0 view .LVU19
  95 004a 0123     		movs	r3, #1
  96 004c 0493     		str	r3, [sp, #16]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 8


 305:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  97              		.loc 1 305 3 is_stmt 1 view .LVU20
  98              		.loc 1 305 24 is_stmt 0 view .LVU21
  99 004e 0594     		str	r4, [sp, #20]
 306:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 100              		.loc 1 306 3 is_stmt 1 view .LVU22
 101              		.loc 1 306 25 is_stmt 0 view .LVU23
 102 0050 0694     		str	r4, [sp, #24]
 307:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 103              		.loc 1 307 3 is_stmt 1 view .LVU24
 104 0052 03A9     		add	r1, sp, #12
 105 0054 2846     		mov	r0, r5
 106 0056 FFF7FEFF 		bl	HAL_GPIO_Init
 107              	.LVL1:
 308:Core/Src/main.c **** 
 309:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 310:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 311:Core/Src/main.c **** }
 108              		.loc 1 311 1 is_stmt 0 view .LVU25
 109 005a 09B0     		add	sp, sp, #36
 110              	.LCFI2:
 111              		.cfi_def_cfa_offset 12
 112              		@ sp needed
 113 005c 30BD     		pop	{r4, r5, pc}
 114              	.L4:
 115 005e 00BF     		.align	2
 116              	.L3:
 117 0060 00380240 		.word	1073887232
 118 0064 00000240 		.word	1073872896
 119              		.cfi_endproc
 120              	.LFE141:
 122              		.section	.text.uart_printf,"ax",%progbits
 123              		.align	1
 124              		.global	uart_printf
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu fpv4-sp-d16
 130              	uart_printf:
 131              	.LVL2:
 132              	.LFB142:
 312:Core/Src/main.c **** 
 313:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 314:Core/Src/main.c **** int uart_printf(const char *fmt, ...)
 315:Core/Src/main.c **** {
 133              		.loc 1 315 1 is_stmt 1 view -0
 134              		.cfi_startproc
 135              		@ args = 4, pretend = 16, frame = 1032
 136              		@ frame_needed = 0, uses_anonymous_args = 1
 137              		.loc 1 315 1 is_stmt 0 view .LVU27
 138 0000 0FB4     		push	{r0, r1, r2, r3}
 139              	.LCFI3:
 140              		.cfi_def_cfa_offset 16
 141              		.cfi_offset 0, -16
 142              		.cfi_offset 1, -12
 143              		.cfi_offset 2, -8
 144              		.cfi_offset 3, -4
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 9


 145 0002 30B5     		push	{r4, r5, lr}
 146              	.LCFI4:
 147              		.cfi_def_cfa_offset 28
 148              		.cfi_offset 4, -28
 149              		.cfi_offset 5, -24
 150              		.cfi_offset 14, -20
 151 0004 ADF20C4D 		subw	sp, sp, #1036
 152              	.LCFI5:
 153              		.cfi_def_cfa_offset 1064
 154 0008 0DF58362 		add	r2, sp, #1048
 155 000c 52F8041B 		ldr	r1, [r2], #4
 316:Core/Src/main.c ****   char buf[1024];
 156              		.loc 1 316 3 is_stmt 1 view .LVU28
 317:Core/Src/main.c ****   int len, i;
 157              		.loc 1 317 3 view .LVU29
 318:Core/Src/main.c ****   va_list args;
 158              		.loc 1 318 3 view .LVU30
 319:Core/Src/main.c ****   va_start (args, fmt);
 159              		.loc 1 319 3 view .LVU31
 160 0010 0192     		str	r2, [sp, #4]
 320:Core/Src/main.c **** 
 321:Core/Src/main.c ****   len = vsprintf(buf, fmt, args);
 161              		.loc 1 321 3 view .LVU32
 162              		.loc 1 321 9 is_stmt 0 view .LVU33
 163 0012 02A8     		add	r0, sp, #8
 164 0014 FFF7FEFF 		bl	vsprintf
 165              	.LVL3:
 166 0018 0546     		mov	r5, r0
 167              	.LVL4:
 322:Core/Src/main.c ****   for (i=0; i<len; i++)
 168              		.loc 1 322 3 is_stmt 1 view .LVU34
 169              		.loc 1 322 9 is_stmt 0 view .LVU35
 170 001a 0024     		movs	r4, #0
 171              		.loc 1 322 3 view .LVU36
 172 001c 07E0     		b	.L6
 173              	.LVL5:
 174              	.L7:
 323:Core/Src/main.c ****   {
 324:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, &buf[i], sizeof(char), 10);
 175              		.loc 1 324 5 is_stmt 1 discriminator 3 view .LVU37
 176 001e 0A23     		movs	r3, #10
 177 0020 0122     		movs	r2, #1
 178 0022 02A9     		add	r1, sp, #8
 179 0024 2144     		add	r1, r1, r4
 180 0026 0648     		ldr	r0, .L9
 181 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 182              	.LVL6:
 322:Core/Src/main.c ****   for (i=0; i<len; i++)
 183              		.loc 1 322 20 discriminator 3 view .LVU38
 322:Core/Src/main.c ****   for (i=0; i<len; i++)
 184              		.loc 1 322 21 is_stmt 0 discriminator 3 view .LVU39
 185 002c 0134     		adds	r4, r4, #1
 186              	.LVL7:
 187              	.L6:
 322:Core/Src/main.c ****   for (i=0; i<len; i++)
 188              		.loc 1 322 13 is_stmt 1 discriminator 1 view .LVU40
 322:Core/Src/main.c ****   for (i=0; i<len; i++)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 10


 189              		.loc 1 322 3 is_stmt 0 discriminator 1 view .LVU41
 190 002e AC42     		cmp	r4, r5
 191 0030 F5DB     		blt	.L7
 325:Core/Src/main.c ****   }
 326:Core/Src/main.c ****   va_end(args);
 192              		.loc 1 326 3 is_stmt 1 view .LVU42
 327:Core/Src/main.c ****   return len;
 193              		.loc 1 327 3 view .LVU43
 328:Core/Src/main.c **** }
 194              		.loc 1 328 1 is_stmt 0 view .LVU44
 195 0032 2846     		mov	r0, r5
 196 0034 0DF20C4D 		addw	sp, sp, #1036
 197              	.LCFI6:
 198              		.cfi_def_cfa_offset 28
 199              		@ sp needed
 200 0038 BDE83040 		pop	{r4, r5, lr}
 201              	.LCFI7:
 202              		.cfi_restore 14
 203              		.cfi_restore 5
 204              		.cfi_restore 4
 205              		.cfi_def_cfa_offset 16
 206              	.LVL8:
 207              		.loc 1 328 1 view .LVU45
 208 003c 04B0     		add	sp, sp, #16
 209              	.LCFI8:
 210              		.cfi_restore 3
 211              		.cfi_restore 2
 212              		.cfi_restore 1
 213              		.cfi_restore 0
 214              		.cfi_def_cfa_offset 0
 215 003e 7047     		bx	lr
 216              	.L10:
 217              		.align	2
 218              	.L9:
 219 0040 00000000 		.word	.LANCHOR0
 220              		.cfi_endproc
 221              	.LFE142:
 223              		.section	.text.uart_sendchar,"ax",%progbits
 224              		.align	1
 225              		.global	uart_sendchar
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu fpv4-sp-d16
 231              	uart_sendchar:
 232              	.LVL9:
 233              	.LFB143:
 329:Core/Src/main.c **** 
 330:Core/Src/main.c **** void uart_sendchar(const char pdata)
 331:Core/Src/main.c **** {
 234              		.loc 1 331 1 is_stmt 1 view -0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 8
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		.loc 1 331 1 is_stmt 0 view .LVU47
 239 0000 00B5     		push	{lr}
 240              	.LCFI9:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 11


 241              		.cfi_def_cfa_offset 4
 242              		.cfi_offset 14, -4
 243 0002 83B0     		sub	sp, sp, #12
 244              	.LCFI10:
 245              		.cfi_def_cfa_offset 16
 332:Core/Src/main.c ****   char temp = pdata;
 246              		.loc 1 332 3 is_stmt 1 view .LVU48
 247              		.loc 1 332 8 is_stmt 0 view .LVU49
 248 0004 8DF80700 		strb	r0, [sp, #7]
 333:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, &temp, sizeof(char), 10);
 249              		.loc 1 333 3 is_stmt 1 view .LVU50
 250 0008 0A23     		movs	r3, #10
 251 000a 0122     		movs	r2, #1
 252 000c 0DF10701 		add	r1, sp, #7
 253 0010 0248     		ldr	r0, .L13
 254              	.LVL10:
 255              		.loc 1 333 3 is_stmt 0 view .LVU51
 256 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 257              	.LVL11:
 334:Core/Src/main.c ****   // if ('\n' == pdata)
 335:Core/Src/main.c ****   // {
 336:Core/Src/main.c ****   //   temp = '\r';
 337:Core/Src/main.c ****   //   HAL_UART_Transmit(&huart1, &temp, sizeof(char), 10);
 338:Core/Src/main.c ****   // }
 339:Core/Src/main.c **** }
 258              		.loc 1 339 1 view .LVU52
 259 0016 03B0     		add	sp, sp, #12
 260              	.LCFI11:
 261              		.cfi_def_cfa_offset 4
 262              		@ sp needed
 263 0018 5DF804FB 		ldr	pc, [sp], #4
 264              	.L14:
 265              		.align	2
 266              	.L13:
 267 001c 00000000 		.word	.LANCHOR0
 268              		.cfi_endproc
 269              	.LFE143:
 271              		.section	.text.debug_printf,"ax",%progbits
 272              		.align	1
 273              		.global	debug_printf
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 277              		.fpu fpv4-sp-d16
 279              	debug_printf:
 280              	.LVL12:
 281              	.LFB144:
 340:Core/Src/main.c **** 
 341:Core/Src/main.c **** int debug_printf(const char *fmt, ...)
 342:Core/Src/main.c **** {
 282              		.loc 1 342 1 is_stmt 1 view -0
 283              		.cfi_startproc
 284              		@ args = 4, pretend = 16, frame = 1032
 285              		@ frame_needed = 0, uses_anonymous_args = 1
 286              		.loc 1 342 1 is_stmt 0 view .LVU54
 287 0000 0FB4     		push	{r0, r1, r2, r3}
 288              	.LCFI12:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 12


 289              		.cfi_def_cfa_offset 16
 290              		.cfi_offset 0, -16
 291              		.cfi_offset 1, -12
 292              		.cfi_offset 2, -8
 293              		.cfi_offset 3, -4
 294 0002 30B5     		push	{r4, r5, lr}
 295              	.LCFI13:
 296              		.cfi_def_cfa_offset 28
 297              		.cfi_offset 4, -28
 298              		.cfi_offset 5, -24
 299              		.cfi_offset 14, -20
 300 0004 ADF20C4D 		subw	sp, sp, #1036
 301              	.LCFI14:
 302              		.cfi_def_cfa_offset 1064
 303 0008 0DF58362 		add	r2, sp, #1048
 304 000c 52F8041B 		ldr	r1, [r2], #4
 343:Core/Src/main.c ****   char buf[1024];
 305              		.loc 1 343 3 is_stmt 1 view .LVU55
 344:Core/Src/main.c ****   int len, i;
 306              		.loc 1 344 3 view .LVU56
 345:Core/Src/main.c ****   va_list args;
 307              		.loc 1 345 3 view .LVU57
 346:Core/Src/main.c ****   va_start (args, fmt);
 308              		.loc 1 346 3 view .LVU58
 309 0010 0192     		str	r2, [sp, #4]
 347:Core/Src/main.c **** 
 348:Core/Src/main.c ****   len = vsprintf(buf, fmt, args);
 310              		.loc 1 348 3 view .LVU59
 311              		.loc 1 348 9 is_stmt 0 view .LVU60
 312 0012 02A8     		add	r0, sp, #8
 313 0014 FFF7FEFF 		bl	vsprintf
 314              	.LVL13:
 315 0018 0546     		mov	r5, r0
 316              	.LVL14:
 349:Core/Src/main.c ****   for (i=0; i<len; i++)
 317              		.loc 1 349 3 is_stmt 1 view .LVU61
 318              		.loc 1 349 9 is_stmt 0 view .LVU62
 319 001a 0024     		movs	r4, #0
 320              		.loc 1 349 3 view .LVU63
 321 001c 07E0     		b	.L16
 322              	.LVL15:
 323              	.L17:
 350:Core/Src/main.c ****   {
 351:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, &buf[i], sizeof(char), 10);
 324              		.loc 1 351 5 is_stmt 1 discriminator 3 view .LVU64
 325 001e 0A23     		movs	r3, #10
 326 0020 0122     		movs	r2, #1
 327 0022 02A9     		add	r1, sp, #8
 328 0024 2144     		add	r1, r1, r4
 329 0026 0648     		ldr	r0, .L19
 330 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 331              	.LVL16:
 349:Core/Src/main.c ****   for (i=0; i<len; i++)
 332              		.loc 1 349 20 discriminator 3 view .LVU65
 349:Core/Src/main.c ****   for (i=0; i<len; i++)
 333              		.loc 1 349 21 is_stmt 0 discriminator 3 view .LVU66
 334 002c 0134     		adds	r4, r4, #1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 13


 335              	.LVL17:
 336              	.L16:
 349:Core/Src/main.c ****   for (i=0; i<len; i++)
 337              		.loc 1 349 13 is_stmt 1 discriminator 1 view .LVU67
 349:Core/Src/main.c ****   for (i=0; i<len; i++)
 338              		.loc 1 349 3 is_stmt 0 discriminator 1 view .LVU68
 339 002e AC42     		cmp	r4, r5
 340 0030 F5DB     		blt	.L17
 352:Core/Src/main.c ****   }
 353:Core/Src/main.c ****   va_end(args);
 341              		.loc 1 353 3 is_stmt 1 view .LVU69
 354:Core/Src/main.c ****   return len;
 342              		.loc 1 354 3 view .LVU70
 355:Core/Src/main.c **** }
 343              		.loc 1 355 1 is_stmt 0 view .LVU71
 344 0032 2846     		mov	r0, r5
 345 0034 0DF20C4D 		addw	sp, sp, #1036
 346              	.LCFI15:
 347              		.cfi_def_cfa_offset 28
 348              		@ sp needed
 349 0038 BDE83040 		pop	{r4, r5, lr}
 350              	.LCFI16:
 351              		.cfi_restore 14
 352              		.cfi_restore 5
 353              		.cfi_restore 4
 354              		.cfi_def_cfa_offset 16
 355              	.LVL18:
 356              		.loc 1 355 1 view .LVU72
 357 003c 04B0     		add	sp, sp, #16
 358              	.LCFI17:
 359              		.cfi_restore 3
 360              		.cfi_restore 2
 361              		.cfi_restore 1
 362              		.cfi_restore 0
 363              		.cfi_def_cfa_offset 0
 364 003e 7047     		bx	lr
 365              	.L20:
 366              		.align	2
 367              	.L19:
 368 0040 00000000 		.word	.LANCHOR1
 369              		.cfi_endproc
 370              	.LFE144:
 372              		.section	.text.debug_sendchar,"ax",%progbits
 373              		.align	1
 374              		.global	debug_sendchar
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu fpv4-sp-d16
 380              	debug_sendchar:
 381              	.LVL19:
 382              	.LFB145:
 356:Core/Src/main.c **** 
 357:Core/Src/main.c **** void debug_sendchar(const char pdata)
 358:Core/Src/main.c **** {
 383              		.loc 1 358 1 is_stmt 1 view -0
 384              		.cfi_startproc
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 14


 385              		@ args = 0, pretend = 0, frame = 8
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387              		.loc 1 358 1 is_stmt 0 view .LVU74
 388 0000 00B5     		push	{lr}
 389              	.LCFI18:
 390              		.cfi_def_cfa_offset 4
 391              		.cfi_offset 14, -4
 392 0002 83B0     		sub	sp, sp, #12
 393              	.LCFI19:
 394              		.cfi_def_cfa_offset 16
 359:Core/Src/main.c ****   char temp = pdata;
 395              		.loc 1 359 3 is_stmt 1 view .LVU75
 396              		.loc 1 359 8 is_stmt 0 view .LVU76
 397 0004 8DF80700 		strb	r0, [sp, #7]
 360:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, &temp, sizeof(char), 10);
 398              		.loc 1 360 3 is_stmt 1 view .LVU77
 399 0008 0A23     		movs	r3, #10
 400 000a 0122     		movs	r2, #1
 401 000c 0DF10701 		add	r1, sp, #7
 402 0010 0248     		ldr	r0, .L23
 403              	.LVL20:
 404              		.loc 1 360 3 is_stmt 0 view .LVU78
 405 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 406              	.LVL21:
 361:Core/Src/main.c ****   // if ('\n' == pdata)
 362:Core/Src/main.c ****   // {
 363:Core/Src/main.c ****   //   temp = '\r';
 364:Core/Src/main.c ****   //   HAL_UART_Transmit(&huart1, &temp, sizeof(char), 10);
 365:Core/Src/main.c ****   // }
 366:Core/Src/main.c **** }
 407              		.loc 1 366 1 view .LVU79
 408 0016 03B0     		add	sp, sp, #12
 409              	.LCFI20:
 410              		.cfi_def_cfa_offset 4
 411              		@ sp needed
 412 0018 5DF804FB 		ldr	pc, [sp], #4
 413              	.L24:
 414              		.align	2
 415              	.L23:
 416 001c 00000000 		.word	.LANCHOR1
 417              		.cfi_endproc
 418              	.LFE145:
 420              		.section	.text.append_char_to_buffer,"ax",%progbits
 421              		.align	1
 422              		.global	append_char_to_buffer
 423              		.syntax unified
 424              		.thumb
 425              		.thumb_func
 426              		.fpu fpv4-sp-d16
 428              	append_char_to_buffer:
 429              	.LVL22:
 430              	.LFB146:
 367:Core/Src/main.c **** 
 368:Core/Src/main.c **** void append_char_to_buffer(char *buffer, size_t buffer_size, char c) {
 431              		.loc 1 368 70 is_stmt 1 view -0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 15


 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435              		.loc 1 368 70 is_stmt 0 view .LVU81
 436 0000 70B5     		push	{r4, r5, r6, lr}
 437              	.LCFI21:
 438              		.cfi_def_cfa_offset 16
 439              		.cfi_offset 4, -16
 440              		.cfi_offset 5, -12
 441              		.cfi_offset 6, -8
 442              		.cfi_offset 14, -4
 443 0002 0446     		mov	r4, r0
 444 0004 0D46     		mov	r5, r1
 445 0006 1646     		mov	r6, r2
 369:Core/Src/main.c ****     size_t len = strlen(buffer);
 446              		.loc 1 369 5 is_stmt 1 view .LVU82
 447              		.loc 1 369 18 is_stmt 0 view .LVU83
 448 0008 FFF7FEFF 		bl	strlen
 449              	.LVL23:
 370:Core/Src/main.c ****     if (len + 1 < buffer_size) {
 450              		.loc 1 370 5 is_stmt 1 view .LVU84
 451              		.loc 1 370 13 is_stmt 0 view .LVU85
 452 000c 431C     		adds	r3, r0, #1
 453              		.loc 1 370 8 view .LVU86
 454 000e AB42     		cmp	r3, r5
 455 0010 02D2     		bcs	.L25
 371:Core/Src/main.c ****         buffer[len] = c;
 456              		.loc 1 371 9 is_stmt 1 view .LVU87
 457              		.loc 1 371 21 is_stmt 0 view .LVU88
 458 0012 2654     		strb	r6, [r4, r0]
 372:Core/Src/main.c ****         buffer[len + 1] = '\0';
 459              		.loc 1 372 9 is_stmt 1 view .LVU89
 460              		.loc 1 372 25 is_stmt 0 view .LVU90
 461 0014 0022     		movs	r2, #0
 462 0016 E254     		strb	r2, [r4, r3]
 463              	.L25:
 373:Core/Src/main.c ****     } else {
 374:Core/Src/main.c ****         return;
 375:Core/Src/main.c ****     }
 376:Core/Src/main.c **** }
 464              		.loc 1 376 1 view .LVU91
 465 0018 70BD     		pop	{r4, r5, r6, pc}
 466              		.loc 1 376 1 view .LVU92
 467              		.cfi_endproc
 468              	.LFE146:
 470              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 471              		.align	1
 472              		.global	HAL_UART_RxCpltCallback
 473              		.syntax unified
 474              		.thumb
 475              		.thumb_func
 476              		.fpu fpv4-sp-d16
 478              	HAL_UART_RxCpltCallback:
 479              	.LVL24:
 480              	.LFB147:
 377:Core/Src/main.c **** 
 378:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 379:Core/Src/main.c **** {
 481              		.loc 1 379 1 is_stmt 1 view -0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 16


 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 0, uses_anonymous_args = 0
 485              		.loc 1 379 1 is_stmt 0 view .LVU94
 486 0000 08B5     		push	{r3, lr}
 487              	.LCFI22:
 488              		.cfi_def_cfa_offset 8
 489              		.cfi_offset 3, -8
 490              		.cfi_offset 14, -4
 380:Core/Src/main.c ****   timeoutReceive = 70;
 491              		.loc 1 380 3 is_stmt 1 view .LVU95
 492              		.loc 1 380 18 is_stmt 0 view .LVU96
 493 0002 0C4B     		ldr	r3, .L31
 494 0004 4622     		movs	r2, #70
 495 0006 1A80     		strh	r2, [r3]	@ movhi
 381:Core/Src/main.c ****   // debug_sendchar(data_rx[0]);
 382:Core/Src/main.c ****   memcpy(buf_rx+t, data_rx, 1);
 496              		.loc 1 382 3 is_stmt 1 view .LVU97
 497 0008 0B4B     		ldr	r3, .L31+4
 498 000a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 499              	.LVL25:
 500              		.loc 1 382 3 is_stmt 0 view .LVU98
 501 000c 0B4A     		ldr	r2, .L31+8
 502 000e 1388     		ldrh	r3, [r2]
 503 0010 0B49     		ldr	r1, .L31+12
 504 0012 C854     		strb	r0, [r1, r3]
 383:Core/Src/main.c ****   if (++t >= BUF_SIZE) t = 0;
 505              		.loc 1 383 3 is_stmt 1 view .LVU99
 506              		.loc 1 383 7 is_stmt 0 view .LVU100
 507 0014 1388     		ldrh	r3, [r2]
 508 0016 0133     		adds	r3, r3, #1
 509 0018 9BB2     		uxth	r3, r3
 510              		.loc 1 383 6 view .LVU101
 511 001a 1380     		strh	r3, [r2]	@ movhi
 512 001c B3F5806F 		cmp	r3, #1024
 513 0020 02D3     		bcc	.L29
 514              		.loc 1 383 24 is_stmt 1 discriminator 1 view .LVU102
 515              		.loc 1 383 26 is_stmt 0 discriminator 1 view .LVU103
 516 0022 1346     		mov	r3, r2
 517 0024 0022     		movs	r2, #0
 518 0026 1A80     		strh	r2, [r3]	@ movhi
 519              	.L29:
 384:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1, data_rx, 1);
 520              		.loc 1 384 3 is_stmt 1 view .LVU104
 521 0028 0122     		movs	r2, #1
 522 002a 0349     		ldr	r1, .L31+4
 523 002c 0548     		ldr	r0, .L31+16
 524 002e FFF7FEFF 		bl	HAL_UART_Receive_IT
 525              	.LVL26:
 385:Core/Src/main.c **** }
 526              		.loc 1 385 1 is_stmt 0 view .LVU105
 527 0032 08BD     		pop	{r3, pc}
 528              	.L32:
 529              		.align	2
 530              	.L31:
 531 0034 00000000 		.word	.LANCHOR2
 532 0038 00000000 		.word	.LANCHOR3
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 17


 533 003c 00000000 		.word	.LANCHOR5
 534 0040 00000000 		.word	.LANCHOR4
 535 0044 00000000 		.word	.LANCHOR0
 536              		.cfi_endproc
 537              	.LFE147:
 539              		.section	.rodata.ProcessDataFromUART.str1.4,"aMS",%progbits,1
 540              		.align	2
 541              	.LC0:
 542 0000 0D0A636F 		.ascii	"\015\012control field: frame = %d, seq_no = %d\015\012"
 542      6E74726F 
 542      6C206669 
 542      656C643A 
 542      20667261 
 543 002a 00       		.ascii	"\000"
 544 002b 00       		.align	2
 545              	.LC1:
 546 002c 52656365 		.ascii	"Received data: \015\012\000"
 546      69766564 
 546      20646174 
 546      613A200D 
 546      0A00
 547 003e 0000     		.align	2
 548              	.LC2:
 549 0040 74635F00 		.ascii	"tc_\000"
 550              		.align	2
 551              	.LC3:
 552 0044 74635F61 		.ascii	"tc_add\000"
 552      646400
 553 004b 00       		.align	2
 554              	.LC4:
 555 004c 74635F73 		.ascii	"tc_subtract\000"
 555      75627472 
 555      61637400 
 556              		.align	2
 557              	.LC5:
 558 0058 74635F6D 		.ascii	"tc_multiply\000"
 558      756C7469 
 558      706C7900 
 559              		.align	2
 560              	.LC6:
 561 0064 74635F64 		.ascii	"tc_divide\000"
 561      69766964 
 561      6500
 562 006e 0000     		.align	2
 563              	.LC7:
 564 0070 0A3D3D3D 		.ascii	"\012======\012%s\012 - length = %d\012\000"
 564      3D3D3D0A 
 564      25730A20 
 564      2D206C65 
 564      6E677468 
 565              		.section	.text.ProcessDataFromUART,"ax",%progbits
 566              		.align	1
 567              		.global	ProcessDataFromUART
 568              		.syntax unified
 569              		.thumb
 570              		.thumb_func
 571              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 18


 573              	ProcessDataFromUART:
 574              	.LFB148:
 386:Core/Src/main.c **** 
 387:Core/Src/main.c **** void ProcessDataFromUART(void)
 388:Core/Src/main.c **** {
 575              		.loc 1 388 1 is_stmt 1 view -0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 2064
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 389:Core/Src/main.c **** 	/* Neu khong co du lieu thi khong xu ly */
 390:Core/Src/main.c **** 	if(newReceive == 0)
 579              		.loc 1 390 2 view .LVU107
 580              		.loc 1 390 16 is_stmt 0 view .LVU108
 581 0000 724B     		ldr	r3, .L56
 582 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 583              		.loc 1 390 4 view .LVU109
 584 0004 03B9     		cbnz	r3, .L55
 585 0006 7047     		bx	lr
 586              	.L55:
 388:Core/Src/main.c **** 	/* Neu khong co du lieu thi khong xu ly */
 587              		.loc 1 388 1 view .LVU110
 588 0008 70B5     		push	{r4, r5, r6, lr}
 589              	.LCFI23:
 590              		.cfi_def_cfa_offset 16
 591              		.cfi_offset 4, -16
 592              		.cfi_offset 5, -12
 593              		.cfi_offset 6, -8
 594              		.cfi_offset 14, -4
 595 000a ADF6180D 		subw	sp, sp, #2072
 596              	.LCFI24:
 597              		.cfi_def_cfa_offset 2088
 391:Core/Src/main.c **** 		return;
 392:Core/Src/main.c **** 	
 393:Core/Src/main.c **** 	/* Xoa co bao co du lieu */
 394:Core/Src/main.c **** 	newReceive = 0;
 598              		.loc 1 394 2 is_stmt 1 view .LVU111
 599              		.loc 1 394 13 is_stmt 0 view .LVU112
 600 000e 0021     		movs	r1, #0
 601 0010 6E4B     		ldr	r3, .L56
 602 0012 1970     		strb	r1, [r3]
 395:Core/Src/main.c **** 	/* Xu ly lenh */
 396:Core/Src/main.c ****   int ret;
 603              		.loc 1 396 3 is_stmt 1 view .LVU113
 397:Core/Src/main.c ****   uint8_t received_data[BUF_SIZE] = {0};
 604              		.loc 1 397 3 view .LVU114
 605              		.loc 1 397 11 is_stmt 0 view .LVU115
 606 0014 CDF81814 		str	r1, [sp, #1048]
 607 0018 4FF47F72 		mov	r2, #1020
 608 001c 0DF21C40 		addw	r0, sp, #1052
 609 0020 FFF7FEFF 		bl	memset
 610              	.LVL27:
 398:Core/Src/main.c ****   int received_len = t;
 611              		.loc 1 398 3 is_stmt 1 view .LVU116
 612              		.loc 1 398 7 is_stmt 0 view .LVU117
 613 0024 6A4B     		ldr	r3, .L56+4
 614 0026 1A88     		ldrh	r2, [r3]
 615 0028 0DF21443 		addw	r3, sp, #1044
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 19


 616 002c CDF81424 		str	r2, [sp, #1044]
 399:Core/Src/main.c ****   ret = yahdlc_get_data(&control, buf_rx, t, received_data, &received_len);
 617              		.loc 1 399 3 is_stmt 1 view .LVU118
 618              		.loc 1 399 9 is_stmt 0 view .LVU119
 619 0030 0093     		str	r3, [sp]
 620 0032 0DF58363 		add	r3, sp, #1048
 621 0036 6749     		ldr	r1, .L56+8
 622 0038 6748     		ldr	r0, .L56+12
 623 003a FFF7FEFF 		bl	yahdlc_get_data
 624              	.LVL28:
 400:Core/Src/main.c ****   if (ret == 0) {
 625              		.loc 1 400 3 is_stmt 1 view .LVU120
 626              		.loc 1 400 6 is_stmt 0 view .LVU121
 627 003e 0446     		mov	r4, r0
 628 0040 0028     		cmp	r0, #0
 629 0042 40F09D80 		bne	.L36
 401:Core/Src/main.c ****     if (control.frame == YAHDLC_FRAME_ACK)
 630              		.loc 1 401 5 is_stmt 1 view .LVU122
 631              		.loc 1 401 16 is_stmt 0 view .LVU123
 632 0046 644B     		ldr	r3, .L56+12
 633 0048 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 634              		.loc 1 401 8 view .LVU124
 635 004a 0129     		cmp	r1, #1
 636 004c 00F0B380 		beq	.L37
 402:Core/Src/main.c ****     {
 403:Core/Src/main.c ****       ; // Do nothing
 404:Core/Src/main.c ****     }
 405:Core/Src/main.c ****     else if (control.frame == YAHDLC_FRAME_NACK)
 637              		.loc 1 405 10 is_stmt 1 view .LVU125
 638              		.loc 1 405 13 is_stmt 0 view .LVU126
 639 0050 0229     		cmp	r1, #2
 640 0052 00F0B080 		beq	.L37
 406:Core/Src/main.c ****     {
 407:Core/Src/main.c ****       ; // Do nothing
 408:Core/Src/main.c ****     }
 409:Core/Src/main.c ****     else if (control.frame == YAHDLC_FRAME_DATA)
 641              		.loc 1 409 10 is_stmt 1 view .LVU127
 642              		.loc 1 409 13 is_stmt 0 view .LVU128
 643 0056 0029     		cmp	r1, #0
 644 0058 40F0AD80 		bne	.L37
 645              	.LBB6:
 410:Core/Src/main.c ****     {
 411:Core/Src/main.c ****       debug_printf("\r\ncontrol field: frame = %d, seq_no = %d\r\n", control.frame, control.seq_no)
 646              		.loc 1 411 7 is_stmt 1 view .LVU129
 647              		.loc 1 411 92 is_stmt 0 view .LVU130
 648 005c 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 649              		.loc 1 411 7 view .LVU131
 650 005e 02F00702 		and	r2, r2, #7
 651 0062 5E48     		ldr	r0, .L56+16
 652              	.LVL29:
 653              		.loc 1 411 7 view .LVU132
 654 0064 FFF7FEFF 		bl	debug_printf
 655              	.LVL30:
 412:Core/Src/main.c ****       debug_printf("Received data: \r\n");
 656              		.loc 1 412 7 is_stmt 1 view .LVU133
 657 0068 5D48     		ldr	r0, .L56+20
 658 006a FFF7FEFF 		bl	debug_printf
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 20


 659              	.LVL31:
 413:Core/Src/main.c ****       for(int i=0; i<received_len; i++)
 660              		.loc 1 413 7 view .LVU134
 661              	.LBB7:
 662              		.loc 1 413 11 view .LVU135
 663              		.loc 1 413 7 is_stmt 0 view .LVU136
 664 006e 05E0     		b	.L38
 665              	.LVL32:
 666              	.L39:
 414:Core/Src/main.c ****       {
 415:Core/Src/main.c ****         debug_sendchar(received_data[i]);
 667              		.loc 1 415 9 is_stmt 1 discriminator 3 view .LVU137
 668 0070 0DF58363 		add	r3, sp, #1048
 669 0074 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 670 0076 FFF7FEFF 		bl	debug_sendchar
 671              	.LVL33:
 413:Core/Src/main.c ****       for(int i=0; i<received_len; i++)
 672              		.loc 1 413 36 discriminator 3 view .LVU138
 413:Core/Src/main.c ****       for(int i=0; i<received_len; i++)
 673              		.loc 1 413 37 is_stmt 0 discriminator 3 view .LVU139
 674 007a 0134     		adds	r4, r4, #1
 675              	.LVL34:
 676              	.L38:
 413:Core/Src/main.c ****       for(int i=0; i<received_len; i++)
 677              		.loc 1 413 20 is_stmt 1 discriminator 1 view .LVU140
 413:Core/Src/main.c ****       for(int i=0; i<received_len; i++)
 678              		.loc 1 413 21 is_stmt 0 discriminator 1 view .LVU141
 679 007c DDF81434 		ldr	r3, [sp, #1044]
 413:Core/Src/main.c ****       for(int i=0; i<received_len; i++)
 680              		.loc 1 413 7 discriminator 1 view .LVU142
 681 0080 A342     		cmp	r3, r4
 682 0082 F5DC     		bgt	.L39
 683              	.LBE7:
 416:Core/Src/main.c ****       }
 417:Core/Src/main.c ****       control.frame = YAHDLC_FRAME_ACK;
 684              		.loc 1 417 7 is_stmt 1 view .LVU143
 685              		.loc 1 417 21 is_stmt 0 view .LVU144
 686 0084 5448     		ldr	r0, .L56+12
 687 0086 0123     		movs	r3, #1
 688 0088 0370     		strb	r3, [r0]
 418:Core/Src/main.c ****       control.seq_no += 1;
 689              		.loc 1 418 7 is_stmt 1 view .LVU145
 690              		.loc 1 418 22 is_stmt 0 view .LVU146
 691 008a 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 692 008c C3F30202 		ubfx	r2, r3, #0, #3
 693 0090 0132     		adds	r2, r2, #1
 694 0092 62F30203 		bfi	r3, r2, #0, #3
 695 0096 4370     		strb	r3, [r0, #1]
 419:Core/Src/main.c ****       // Generate the ACK frame
 420:Core/Src/main.c ****       char frame[BUF_SIZE];
 696              		.loc 1 420 7 is_stmt 1 view .LVU147
 421:Core/Src/main.c ****       unsigned int frame_len;
 697              		.loc 1 421 7 view .LVU148
 422:Core/Src/main.c ****       yahdlc_frame_data(&control, NULL, 0, frame, &frame_len);
 698              		.loc 1 422 7 view .LVU149
 699 0098 04AB     		add	r3, sp, #16
 700 009a 0093     		str	r3, [sp]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 21


 701 009c 05AB     		add	r3, sp, #20
 702 009e 0022     		movs	r2, #0
 703 00a0 1146     		mov	r1, r2
 704 00a2 FFF7FEFF 		bl	yahdlc_frame_data
 705              	.LVL35:
 423:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 706              		.loc 1 423 7 view .LVU150
 707              	.LBB8:
 708              		.loc 1 423 12 view .LVU151
 709              		.loc 1 423 25 is_stmt 0 view .LVU152
 710 00a6 0024     		movs	r4, #0
 711              	.LVL36:
 712              		.loc 1 423 7 view .LVU153
 713 00a8 04E0     		b	.L40
 714              	.LVL37:
 715              	.L41:
 424:Core/Src/main.c ****         uart_sendchar(frame[i]);
 716              		.loc 1 424 9 is_stmt 1 discriminator 3 view .LVU154
 717 00aa 05AB     		add	r3, sp, #20
 718 00ac 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 719 00ae FFF7FEFF 		bl	uart_sendchar
 720              	.LVL38:
 423:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 721              		.loc 1 423 47 discriminator 3 view .LVU155
 423:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 722              		.loc 1 423 48 is_stmt 0 discriminator 3 view .LVU156
 723 00b2 0134     		adds	r4, r4, #1
 724              	.LVL39:
 725              	.L40:
 423:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 726              		.loc 1 423 32 is_stmt 1 discriminator 1 view .LVU157
 423:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 727              		.loc 1 423 34 is_stmt 0 discriminator 1 view .LVU158
 728 00b4 049B     		ldr	r3, [sp, #16]
 423:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 729              		.loc 1 423 7 discriminator 1 view .LVU159
 730 00b6 A342     		cmp	r3, r4
 731 00b8 F7D8     		bhi	.L41
 732              	.LBE8:
 425:Core/Src/main.c ****       }
 426:Core/Src/main.c **** 
 427:Core/Src/main.c ****       // Process receive data buffer
 428:Core/Src/main.c ****       if((strstr((char*)received_data, "tc_")))
 733              		.loc 1 428 7 is_stmt 1 view .LVU160
 734              		.loc 1 428 11 is_stmt 0 view .LVU161
 735 00ba 4A49     		ldr	r1, .L56+24
 736 00bc 0DF58360 		add	r0, sp, #1048
 737 00c0 FFF7FEFF 		bl	strstr
 738              	.LVL40:
 739              		.loc 1 428 9 view .LVU162
 740 00c4 0028     		cmp	r0, #0
 741 00c6 76D0     		beq	.L37
 429:Core/Src/main.c ****       {
 430:Core/Src/main.c ****         memset(yahdlc_send_frame, 0, BUF_SIZE);
 742              		.loc 1 430 9 is_stmt 1 view .LVU163
 743 00c8 4FF48062 		mov	r2, #1024
 744 00cc 0021     		movs	r1, #0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 22


 745 00ce 4648     		ldr	r0, .L56+28
 746 00d0 FFF7FEFF 		bl	memset
 747              	.LVL41:
 431:Core/Src/main.c ****         if((strstr((char*)received_data, "tc_add")))
 748              		.loc 1 431 9 view .LVU164
 749              		.loc 1 431 13 is_stmt 0 view .LVU165
 750 00d4 4549     		ldr	r1, .L56+32
 751 00d6 0DF58360 		add	r0, sp, #1048
 752 00da FFF7FEFF 		bl	strstr
 753              	.LVL42:
 754              		.loc 1 431 11 view .LVU166
 755 00de 50B3     		cbz	r0, .L43
 432:Core/Src/main.c ****         {
 433:Core/Src/main.c ****           tc_add();
 756              		.loc 1 433 11 is_stmt 1 view .LVU167
 757 00e0 FFF7FEFF 		bl	tc_add
 758              	.LVL43:
 759              	.L44:
 434:Core/Src/main.c ****         }
 435:Core/Src/main.c ****         else if((strstr((char*)received_data, "tc_subtract")))
 436:Core/Src/main.c ****         {
 437:Core/Src/main.c ****           tc_subtract();
 438:Core/Src/main.c ****         }
 439:Core/Src/main.c ****         else if((strstr((char*)received_data, "tc_multiply")))
 440:Core/Src/main.c ****         {
 441:Core/Src/main.c ****           tc_multiply();
 442:Core/Src/main.c ****         }
 443:Core/Src/main.c ****         else if((strstr((char*)received_data, "tc_divide")))
 444:Core/Src/main.c ****         {
 445:Core/Src/main.c ****           tc_divide();
 446:Core/Src/main.c ****         }
 447:Core/Src/main.c **** 
 448:Core/Src/main.c ****         debug_printf("\n======\n%s\n - length = %d\n",yahdlc_send_frame, strlen(yahdlc_send_frame))
 760              		.loc 1 448 9 view .LVU168
 761 00e4 404E     		ldr	r6, .L56+28
 762 00e6 3046     		mov	r0, r6
 763 00e8 FFF7FEFF 		bl	strlen
 764              	.LVL44:
 765 00ec 0246     		mov	r2, r0
 766 00ee 3146     		mov	r1, r6
 767 00f0 3F48     		ldr	r0, .L56+36
 768 00f2 FFF7FEFF 		bl	debug_printf
 769              	.LVL45:
 449:Core/Src/main.c **** 
 450:Core/Src/main.c ****         HAL_Delay(1000);
 770              		.loc 1 450 9 view .LVU169
 771 00f6 4FF47A70 		mov	r0, #1000
 772 00fa FFF7FEFF 		bl	HAL_Delay
 773              	.LVL46:
 451:Core/Src/main.c ****         control.frame = YAHDLC_FRAME_DATA;
 774              		.loc 1 451 9 view .LVU170
 775              		.loc 1 451 23 is_stmt 0 view .LVU171
 776 00fe 364D     		ldr	r5, .L56+12
 777 0100 0024     		movs	r4, #0
 778              	.LVL47:
 779              		.loc 1 451 23 view .LVU172
 780 0102 2C70     		strb	r4, [r5]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 23


 452:Core/Src/main.c ****         control.seq_no += 1;
 781              		.loc 1 452 9 is_stmt 1 view .LVU173
 782              		.loc 1 452 24 is_stmt 0 view .LVU174
 783 0104 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 784 0106 C3F30202 		ubfx	r2, r3, #0, #3
 785 010a 0132     		adds	r2, r2, #1
 786 010c 62F30203 		bfi	r3, r2, #0, #3
 787 0110 6B70     		strb	r3, [r5, #1]
 453:Core/Src/main.c ****         memset(frame, 0, BUF_SIZE);
 788              		.loc 1 453 9 is_stmt 1 view .LVU175
 789 0112 4FF48062 		mov	r2, #1024
 790 0116 2146     		mov	r1, r4
 791 0118 05A8     		add	r0, sp, #20
 792 011a FFF7FEFF 		bl	memset
 793              	.LVL48:
 454:Core/Src/main.c ****         yahdlc_frame_data(&control, yahdlc_send_frame, strlen(yahdlc_send_frame), frame, &frame_len
 794              		.loc 1 454 9 view .LVU176
 795 011e 3046     		mov	r0, r6
 796 0120 FFF7FEFF 		bl	strlen
 797              	.LVL49:
 798 0124 0246     		mov	r2, r0
 799 0126 04AB     		add	r3, sp, #16
 800 0128 0093     		str	r3, [sp]
 801 012a 05AB     		add	r3, sp, #20
 802 012c 3146     		mov	r1, r6
 803 012e 2846     		mov	r0, r5
 804 0130 FFF7FEFF 		bl	yahdlc_frame_data
 805              	.LVL50:
 455:Core/Src/main.c ****         // debug_printf("%s\n - length = %d\n", frame, frame_len);
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****         for (unsigned int i = 0; i < frame_len; i++) {
 806              		.loc 1 457 9 view .LVU177
 807              	.LBB9:
 808              		.loc 1 457 14 view .LVU178
 809              		.loc 1 457 9 is_stmt 0 view .LVU179
 810 0134 20E0     		b	.L47
 811              	.LVL51:
 812              	.L43:
 813              		.loc 1 457 9 view .LVU180
 814              	.LBE9:
 435:Core/Src/main.c ****         {
 815              		.loc 1 435 14 is_stmt 1 view .LVU181
 435:Core/Src/main.c ****         {
 816              		.loc 1 435 18 is_stmt 0 view .LVU182
 817 0136 2F49     		ldr	r1, .L56+40
 818 0138 0DF58360 		add	r0, sp, #1048
 819 013c FFF7FEFF 		bl	strstr
 820              	.LVL52:
 435:Core/Src/main.c ****         {
 821              		.loc 1 435 16 view .LVU183
 822 0140 10B1     		cbz	r0, .L45
 437:Core/Src/main.c ****         }
 823              		.loc 1 437 11 is_stmt 1 view .LVU184
 824 0142 FFF7FEFF 		bl	tc_subtract
 825              	.LVL53:
 826 0146 CDE7     		b	.L44
 827              	.L45:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 24


 439:Core/Src/main.c ****         {
 828              		.loc 1 439 14 view .LVU185
 439:Core/Src/main.c ****         {
 829              		.loc 1 439 18 is_stmt 0 view .LVU186
 830 0148 2B49     		ldr	r1, .L56+44
 831 014a 0DF58360 		add	r0, sp, #1048
 832 014e FFF7FEFF 		bl	strstr
 833              	.LVL54:
 439:Core/Src/main.c ****         {
 834              		.loc 1 439 16 view .LVU187
 835 0152 10B1     		cbz	r0, .L46
 441:Core/Src/main.c ****         }
 836              		.loc 1 441 11 is_stmt 1 view .LVU188
 837 0154 FFF7FEFF 		bl	tc_multiply
 838              	.LVL55:
 839 0158 C4E7     		b	.L44
 840              	.L46:
 443:Core/Src/main.c ****         {
 841              		.loc 1 443 14 view .LVU189
 443:Core/Src/main.c ****         {
 842              		.loc 1 443 18 is_stmt 0 view .LVU190
 843 015a 2849     		ldr	r1, .L56+48
 844 015c 0DF58360 		add	r0, sp, #1048
 845 0160 FFF7FEFF 		bl	strstr
 846              	.LVL56:
 443:Core/Src/main.c ****         {
 847              		.loc 1 443 16 view .LVU191
 848 0164 0028     		cmp	r0, #0
 849 0166 BDD0     		beq	.L44
 445:Core/Src/main.c ****         }
 850              		.loc 1 445 11 is_stmt 1 view .LVU192
 851 0168 FFF7FEFF 		bl	tc_divide
 852              	.LVL57:
 853 016c BAE7     		b	.L44
 854              	.LVL58:
 855              	.L48:
 856              	.LBB10:
 458:Core/Src/main.c ****           uart_sendchar(frame[i]);
 857              		.loc 1 458 11 discriminator 3 view .LVU193
 858 016e 05AB     		add	r3, sp, #20
 859 0170 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 860 0172 FFF7FEFF 		bl	uart_sendchar
 861              	.LVL59:
 457:Core/Src/main.c ****           uart_sendchar(frame[i]);
 862              		.loc 1 457 49 discriminator 3 view .LVU194
 457:Core/Src/main.c ****           uart_sendchar(frame[i]);
 863              		.loc 1 457 50 is_stmt 0 discriminator 3 view .LVU195
 864 0176 0134     		adds	r4, r4, #1
 865              	.LVL60:
 866              	.L47:
 457:Core/Src/main.c ****           uart_sendchar(frame[i]);
 867              		.loc 1 457 34 is_stmt 1 discriminator 1 view .LVU196
 457:Core/Src/main.c ****           uart_sendchar(frame[i]);
 868              		.loc 1 457 36 is_stmt 0 discriminator 1 view .LVU197
 869 0178 049B     		ldr	r3, [sp, #16]
 457:Core/Src/main.c ****           uart_sendchar(frame[i]);
 870              		.loc 1 457 9 discriminator 1 view .LVU198
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 25


 871 017a A342     		cmp	r3, r4
 872 017c F7D8     		bhi	.L48
 873 017e 1AE0     		b	.L37
 874              	.LVL61:
 875              	.L36:
 457:Core/Src/main.c ****           uart_sendchar(frame[i]);
 876              		.loc 1 457 9 discriminator 1 view .LVU199
 877              	.LBE10:
 878              	.LBE6:
 879              	.LBB11:
 459:Core/Src/main.c ****         }
 460:Core/Src/main.c ****       }
 461:Core/Src/main.c ****     }
 462:Core/Src/main.c ****     else
 463:Core/Src/main.c ****     {
 464:Core/Src/main.c ****       ; // Do nothing
 465:Core/Src/main.c ****     }
 466:Core/Src/main.c ****   } else {
 467:Core/Src/main.c ****       // debug_printf("Error decoding frame %d\r\n", ret);
 468:Core/Src/main.c ****       // debug_printf("t = %d buf_rx:\r\n", t);
 469:Core/Src/main.c ****       // for(int i=0; i<t; i++)
 470:Core/Src/main.c ****       // {
 471:Core/Src/main.c ****       //   debug_printf("0x%02x, ", buf_rx[i]);
 472:Core/Src/main.c ****       // }
 473:Core/Src/main.c ****       // debug_printf("\r\nreceived_len = %d received_data:\r\n", received_len);
 474:Core/Src/main.c ****       // for(int i=0; i<received_len; i++)
 475:Core/Src/main.c ****       // {
 476:Core/Src/main.c ****       //   debug_printf("0x%02x, ", received_data[i]);
 477:Core/Src/main.c ****       // }
 478:Core/Src/main.c ****       yahdlc_control_t control;
 880              		.loc 1 478 7 is_stmt 1 view .LVU200
 479:Core/Src/main.c ****       control.frame = YAHDLC_FRAME_NACK;
 881              		.loc 1 479 7 view .LVU201
 882              		.loc 1 479 21 is_stmt 0 view .LVU202
 883 0180 0223     		movs	r3, #2
 884 0182 8DF80C30 		strb	r3, [sp, #12]
 480:Core/Src/main.c ****       control.seq_no = 0;
 885              		.loc 1 480 7 is_stmt 1 view .LVU203
 886              		.loc 1 480 22 is_stmt 0 view .LVU204
 887 0186 9DF80D30 		ldrb	r3, [sp, #13]	@ zero_extendqisi2
 888 018a 6FF30203 		bfc	r3, #0, #3
 889 018e 8DF80D30 		strb	r3, [sp, #13]
 481:Core/Src/main.c ****       // Generate the ACK frame
 482:Core/Src/main.c ****       char frame[BUF_SIZE];
 890              		.loc 1 482 7 is_stmt 1 view .LVU205
 483:Core/Src/main.c ****       unsigned int frame_len;
 891              		.loc 1 483 7 view .LVU206
 484:Core/Src/main.c ****       yahdlc_frame_data(&control, NULL, 0, frame, &frame_len);
 892              		.loc 1 484 7 view .LVU207
 893 0192 04AB     		add	r3, sp, #16
 894 0194 0093     		str	r3, [sp]
 895 0196 05AB     		add	r3, sp, #20
 896 0198 0022     		movs	r2, #0
 897 019a 1146     		mov	r1, r2
 898 019c 03A8     		add	r0, sp, #12
 899              	.LVL62:
 900              		.loc 1 484 7 is_stmt 0 view .LVU208
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 26


 901 019e FFF7FEFF 		bl	yahdlc_frame_data
 902              	.LVL63:
 485:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 903              		.loc 1 485 7 is_stmt 1 view .LVU209
 904              	.LBB12:
 905              		.loc 1 485 12 view .LVU210
 906              		.loc 1 485 25 is_stmt 0 view .LVU211
 907 01a2 0024     		movs	r4, #0
 908              	.LVL64:
 909              		.loc 1 485 7 view .LVU212
 910 01a4 04E0     		b	.L49
 911              	.LVL65:
 912              	.L50:
 486:Core/Src/main.c ****         uart_sendchar(frame[i]);
 913              		.loc 1 486 9 is_stmt 1 discriminator 3 view .LVU213
 914 01a6 05AB     		add	r3, sp, #20
 915 01a8 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 916 01aa FFF7FEFF 		bl	uart_sendchar
 917              	.LVL66:
 485:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 918              		.loc 1 485 47 discriminator 3 view .LVU214
 485:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 919              		.loc 1 485 48 is_stmt 0 discriminator 3 view .LVU215
 920 01ae 0134     		adds	r4, r4, #1
 921              	.LVL67:
 922              	.L49:
 485:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 923              		.loc 1 485 32 is_stmt 1 discriminator 1 view .LVU216
 485:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 924              		.loc 1 485 34 is_stmt 0 discriminator 1 view .LVU217
 925 01b0 049B     		ldr	r3, [sp, #16]
 485:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 926              		.loc 1 485 7 discriminator 1 view .LVU218
 927 01b2 A342     		cmp	r3, r4
 928 01b4 F7D8     		bhi	.L50
 929              	.LVL68:
 930              	.L37:
 485:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 931              		.loc 1 485 7 discriminator 1 view .LVU219
 932              	.LBE12:
 933              	.LBE11:
 487:Core/Src/main.c ****       }
 488:Core/Src/main.c ****   }
 489:Core/Src/main.c **** 	/* Xoa bo dem nhan */
 490:Core/Src/main.c **** 	t = 0;
 934              		.loc 1 490 2 is_stmt 1 discriminator 4 view .LVU220
 935              		.loc 1 490 4 is_stmt 0 discriminator 4 view .LVU221
 936 01b6 0021     		movs	r1, #0
 937 01b8 054B     		ldr	r3, .L56+4
 938 01ba 1980     		strh	r1, [r3]	@ movhi
 491:Core/Src/main.c **** 	memset(buf_rx, 0, BUF_SIZE);
 939              		.loc 1 491 2 is_stmt 1 discriminator 4 view .LVU222
 940 01bc 4FF48062 		mov	r2, #1024
 941 01c0 0448     		ldr	r0, .L56+8
 942 01c2 FFF7FEFF 		bl	memset
 943              	.LVL69:
 492:Core/Src/main.c **** }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 27


 944              		.loc 1 492 1 is_stmt 0 discriminator 4 view .LVU223
 945 01c6 0DF6180D 		addw	sp, sp, #2072
 946              	.LCFI25:
 947              		.cfi_def_cfa_offset 16
 948              		@ sp needed
 949 01ca 70BD     		pop	{r4, r5, r6, pc}
 950              	.L57:
 951              		.align	2
 952              	.L56:
 953 01cc 00000000 		.word	.LANCHOR6
 954 01d0 00000000 		.word	.LANCHOR5
 955 01d4 00000000 		.word	.LANCHOR4
 956 01d8 00000000 		.word	.LANCHOR7
 957 01dc 00000000 		.word	.LC0
 958 01e0 2C000000 		.word	.LC1
 959 01e4 40000000 		.word	.LC2
 960 01e8 00000000 		.word	.LANCHOR8
 961 01ec 44000000 		.word	.LC3
 962 01f0 70000000 		.word	.LC7
 963 01f4 4C000000 		.word	.LC4
 964 01f8 58000000 		.word	.LC5
 965 01fc 64000000 		.word	.LC6
 966              		.cfi_endproc
 967              	.LFE148:
 969              		.section	.text.Error_Handler,"ax",%progbits
 970              		.align	1
 971              		.global	Error_Handler
 972              		.syntax unified
 973              		.thumb
 974              		.thumb_func
 975              		.fpu fpv4-sp-d16
 977              	Error_Handler:
 978              	.LFB149:
 493:Core/Src/main.c **** 
 494:Core/Src/main.c **** /* USER CODE END 4 */
 495:Core/Src/main.c **** 
 496:Core/Src/main.c **** /**
 497:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 498:Core/Src/main.c ****   * @retval None
 499:Core/Src/main.c ****   */
 500:Core/Src/main.c **** void Error_Handler(void)
 501:Core/Src/main.c **** {
 979              		.loc 1 501 1 is_stmt 1 view -0
 980              		.cfi_startproc
 981              		@ Volatile: function does not return.
 982              		@ args = 0, pretend = 0, frame = 0
 983              		@ frame_needed = 0, uses_anonymous_args = 0
 984              		@ link register save eliminated.
 502:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 503:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 504:Core/Src/main.c ****   __disable_irq();
 985              		.loc 1 504 3 view .LVU225
 986              	.LBB13:
 987              	.LBI13:
 988              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 28


   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 29


  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 30


 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 31


 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 32


 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 33


 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 34


 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 35


 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 36


 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 37


 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 38


 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 39


 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 40


 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 41


 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 42


 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 43


 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 44


 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 989              		.loc 2 960 27 view .LVU226
 990              	.LBB14:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 991              		.loc 2 962 3 view .LVU227
 992              		.syntax unified
 993              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 994 0000 72B6     		cpsid i
 995              	@ 0 "" 2
 996              		.thumb
 997              		.syntax unified
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 45


 998              	.L59:
 999              	.LBE14:
 1000              	.LBE13:
 505:Core/Src/main.c ****   while (1)
 1001              		.loc 1 505 3 discriminator 1 view .LVU228
 506:Core/Src/main.c ****   {
 507:Core/Src/main.c ****   }
 1002              		.loc 1 507 3 discriminator 1 view .LVU229
 505:Core/Src/main.c ****   while (1)
 1003              		.loc 1 505 9 discriminator 1 view .LVU230
 1004 0002 FEE7     		b	.L59
 1005              		.cfi_endproc
 1006              	.LFE149:
 1008              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 1009              		.align	1
 1010              		.syntax unified
 1011              		.thumb
 1012              		.thumb_func
 1013              		.fpu fpv4-sp-d16
 1015              	MX_USART1_UART_Init:
 1016              	.LFB139:
 224:Core/Src/main.c **** 
 1017              		.loc 1 224 1 view -0
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 0
 1020              		@ frame_needed = 0, uses_anonymous_args = 0
 1021 0000 08B5     		push	{r3, lr}
 1022              	.LCFI26:
 1023              		.cfi_def_cfa_offset 8
 1024              		.cfi_offset 3, -8
 1025              		.cfi_offset 14, -4
 233:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 1026              		.loc 1 233 3 view .LVU232
 233:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 1027              		.loc 1 233 19 is_stmt 0 view .LVU233
 1028 0002 0A48     		ldr	r0, .L64
 1029 0004 0A4B     		ldr	r3, .L64+4
 1030 0006 0360     		str	r3, [r0]
 234:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1031              		.loc 1 234 3 is_stmt 1 view .LVU234
 234:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1032              		.loc 1 234 24 is_stmt 0 view .LVU235
 1033 0008 4FF4E133 		mov	r3, #115200
 1034 000c 4360     		str	r3, [r0, #4]
 235:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1035              		.loc 1 235 3 is_stmt 1 view .LVU236
 235:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1036              		.loc 1 235 26 is_stmt 0 view .LVU237
 1037 000e 0023     		movs	r3, #0
 1038 0010 8360     		str	r3, [r0, #8]
 236:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1039              		.loc 1 236 3 is_stmt 1 view .LVU238
 236:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1040              		.loc 1 236 24 is_stmt 0 view .LVU239
 1041 0012 C360     		str	r3, [r0, #12]
 237:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1042              		.loc 1 237 3 is_stmt 1 view .LVU240
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 46


 237:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1043              		.loc 1 237 22 is_stmt 0 view .LVU241
 1044 0014 0361     		str	r3, [r0, #16]
 238:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1045              		.loc 1 238 3 is_stmt 1 view .LVU242
 238:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1046              		.loc 1 238 20 is_stmt 0 view .LVU243
 1047 0016 0C22     		movs	r2, #12
 1048 0018 4261     		str	r2, [r0, #20]
 239:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1049              		.loc 1 239 3 is_stmt 1 view .LVU244
 239:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1050              		.loc 1 239 25 is_stmt 0 view .LVU245
 1051 001a 8361     		str	r3, [r0, #24]
 240:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1052              		.loc 1 240 3 is_stmt 1 view .LVU246
 240:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1053              		.loc 1 240 28 is_stmt 0 view .LVU247
 1054 001c C361     		str	r3, [r0, #28]
 241:Core/Src/main.c ****   {
 1055              		.loc 1 241 3 is_stmt 1 view .LVU248
 241:Core/Src/main.c ****   {
 1056              		.loc 1 241 7 is_stmt 0 view .LVU249
 1057 001e FFF7FEFF 		bl	HAL_UART_Init
 1058              	.LVL70:
 241:Core/Src/main.c ****   {
 1059              		.loc 1 241 6 view .LVU250
 1060 0022 00B9     		cbnz	r0, .L63
 249:Core/Src/main.c **** 
 1061              		.loc 1 249 1 view .LVU251
 1062 0024 08BD     		pop	{r3, pc}
 1063              	.L63:
 243:Core/Src/main.c ****   }
 1064              		.loc 1 243 5 is_stmt 1 view .LVU252
 1065 0026 FFF7FEFF 		bl	Error_Handler
 1066              	.LVL71:
 1067              	.L65:
 1068 002a 00BF     		.align	2
 1069              	.L64:
 1070 002c 00000000 		.word	.LANCHOR0
 1071 0030 00100140 		.word	1073811456
 1072              		.cfi_endproc
 1073              	.LFE139:
 1075              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 1076              		.align	1
 1077              		.syntax unified
 1078              		.thumb
 1079              		.thumb_func
 1080              		.fpu fpv4-sp-d16
 1082              	MX_USART2_UART_Init:
 1083              	.LFB140:
 257:Core/Src/main.c **** 
 1084              		.loc 1 257 1 view -0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 0
 1087              		@ frame_needed = 0, uses_anonymous_args = 0
 1088 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 47


 1089              	.LCFI27:
 1090              		.cfi_def_cfa_offset 8
 1091              		.cfi_offset 3, -8
 1092              		.cfi_offset 14, -4
 266:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1093              		.loc 1 266 3 view .LVU254
 266:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1094              		.loc 1 266 19 is_stmt 0 view .LVU255
 1095 0002 0A48     		ldr	r0, .L70
 1096 0004 0A4B     		ldr	r3, .L70+4
 1097 0006 0360     		str	r3, [r0]
 267:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1098              		.loc 1 267 3 is_stmt 1 view .LVU256
 267:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1099              		.loc 1 267 24 is_stmt 0 view .LVU257
 1100 0008 4FF4E133 		mov	r3, #115200
 1101 000c 4360     		str	r3, [r0, #4]
 268:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1102              		.loc 1 268 3 is_stmt 1 view .LVU258
 268:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1103              		.loc 1 268 26 is_stmt 0 view .LVU259
 1104 000e 0023     		movs	r3, #0
 1105 0010 8360     		str	r3, [r0, #8]
 269:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1106              		.loc 1 269 3 is_stmt 1 view .LVU260
 269:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1107              		.loc 1 269 24 is_stmt 0 view .LVU261
 1108 0012 C360     		str	r3, [r0, #12]
 270:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1109              		.loc 1 270 3 is_stmt 1 view .LVU262
 270:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1110              		.loc 1 270 22 is_stmt 0 view .LVU263
 1111 0014 0361     		str	r3, [r0, #16]
 271:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1112              		.loc 1 271 3 is_stmt 1 view .LVU264
 271:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1113              		.loc 1 271 20 is_stmt 0 view .LVU265
 1114 0016 0C22     		movs	r2, #12
 1115 0018 4261     		str	r2, [r0, #20]
 272:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1116              		.loc 1 272 3 is_stmt 1 view .LVU266
 272:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1117              		.loc 1 272 25 is_stmt 0 view .LVU267
 1118 001a 8361     		str	r3, [r0, #24]
 273:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1119              		.loc 1 273 3 is_stmt 1 view .LVU268
 273:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1120              		.loc 1 273 28 is_stmt 0 view .LVU269
 1121 001c C361     		str	r3, [r0, #28]
 274:Core/Src/main.c ****   {
 1122              		.loc 1 274 3 is_stmt 1 view .LVU270
 274:Core/Src/main.c ****   {
 1123              		.loc 1 274 7 is_stmt 0 view .LVU271
 1124 001e FFF7FEFF 		bl	HAL_UART_Init
 1125              	.LVL72:
 274:Core/Src/main.c ****   {
 1126              		.loc 1 274 6 view .LVU272
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 48


 1127 0022 00B9     		cbnz	r0, .L69
 282:Core/Src/main.c **** 
 1128              		.loc 1 282 1 view .LVU273
 1129 0024 08BD     		pop	{r3, pc}
 1130              	.L69:
 276:Core/Src/main.c ****   }
 1131              		.loc 1 276 5 is_stmt 1 view .LVU274
 1132 0026 FFF7FEFF 		bl	Error_Handler
 1133              	.LVL73:
 1134              	.L71:
 1135 002a 00BF     		.align	2
 1136              	.L70:
 1137 002c 00000000 		.word	.LANCHOR1
 1138 0030 00440040 		.word	1073759232
 1139              		.cfi_endproc
 1140              	.LFE140:
 1142              		.section	.text.SystemClock_Config,"ax",%progbits
 1143              		.align	1
 1144              		.global	SystemClock_Config
 1145              		.syntax unified
 1146              		.thumb
 1147              		.thumb_func
 1148              		.fpu fpv4-sp-d16
 1150              	SystemClock_Config:
 1151              	.LFB138:
 178:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1152              		.loc 1 178 1 view -0
 1153              		.cfi_startproc
 1154              		@ args = 0, pretend = 0, frame = 80
 1155              		@ frame_needed = 0, uses_anonymous_args = 0
 1156 0000 00B5     		push	{lr}
 1157              	.LCFI28:
 1158              		.cfi_def_cfa_offset 4
 1159              		.cfi_offset 14, -4
 1160 0002 95B0     		sub	sp, sp, #84
 1161              	.LCFI29:
 1162              		.cfi_def_cfa_offset 88
 179:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1163              		.loc 1 179 3 view .LVU276
 179:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1164              		.loc 1 179 22 is_stmt 0 view .LVU277
 1165 0004 3022     		movs	r2, #48
 1166 0006 0021     		movs	r1, #0
 1167 0008 08A8     		add	r0, sp, #32
 1168 000a FFF7FEFF 		bl	memset
 1169              	.LVL74:
 180:Core/Src/main.c **** 
 1170              		.loc 1 180 3 is_stmt 1 view .LVU278
 180:Core/Src/main.c **** 
 1171              		.loc 1 180 22 is_stmt 0 view .LVU279
 1172 000e 0023     		movs	r3, #0
 1173 0010 0393     		str	r3, [sp, #12]
 1174 0012 0493     		str	r3, [sp, #16]
 1175 0014 0593     		str	r3, [sp, #20]
 1176 0016 0693     		str	r3, [sp, #24]
 1177 0018 0793     		str	r3, [sp, #28]
 184:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 49


 1178              		.loc 1 184 3 is_stmt 1 view .LVU280
 1179              	.LBB15:
 184:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1180              		.loc 1 184 3 view .LVU281
 1181 001a 0193     		str	r3, [sp, #4]
 184:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1182              		.loc 1 184 3 view .LVU282
 1183 001c 1E4A     		ldr	r2, .L78
 1184 001e 116C     		ldr	r1, [r2, #64]
 1185 0020 41F08051 		orr	r1, r1, #268435456
 1186 0024 1164     		str	r1, [r2, #64]
 184:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1187              		.loc 1 184 3 view .LVU283
 1188 0026 126C     		ldr	r2, [r2, #64]
 1189 0028 02F08052 		and	r2, r2, #268435456
 1190 002c 0192     		str	r2, [sp, #4]
 184:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1191              		.loc 1 184 3 view .LVU284
 1192 002e 019A     		ldr	r2, [sp, #4]
 1193              	.LBE15:
 184:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1194              		.loc 1 184 3 view .LVU285
 185:Core/Src/main.c **** 
 1195              		.loc 1 185 3 view .LVU286
 1196              	.LBB16:
 185:Core/Src/main.c **** 
 1197              		.loc 1 185 3 view .LVU287
 1198 0030 0293     		str	r3, [sp, #8]
 185:Core/Src/main.c **** 
 1199              		.loc 1 185 3 view .LVU288
 1200 0032 1A4B     		ldr	r3, .L78+4
 1201 0034 1A68     		ldr	r2, [r3]
 1202 0036 42F48042 		orr	r2, r2, #16384
 1203 003a 1A60     		str	r2, [r3]
 185:Core/Src/main.c **** 
 1204              		.loc 1 185 3 view .LVU289
 1205 003c 1B68     		ldr	r3, [r3]
 1206 003e 03F48043 		and	r3, r3, #16384
 1207 0042 0293     		str	r3, [sp, #8]
 185:Core/Src/main.c **** 
 1208              		.loc 1 185 3 view .LVU290
 1209 0044 029B     		ldr	r3, [sp, #8]
 1210              	.LBE16:
 185:Core/Src/main.c **** 
 1211              		.loc 1 185 3 view .LVU291
 190:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1212              		.loc 1 190 3 view .LVU292
 190:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1213              		.loc 1 190 36 is_stmt 0 view .LVU293
 1214 0046 0123     		movs	r3, #1
 1215 0048 0893     		str	r3, [sp, #32]
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1216              		.loc 1 191 3 is_stmt 1 view .LVU294
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1217              		.loc 1 191 30 is_stmt 0 view .LVU295
 1218 004a 4FF48033 		mov	r3, #65536
 1219 004e 0993     		str	r3, [sp, #36]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 50


 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1220              		.loc 1 192 3 is_stmt 1 view .LVU296
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1221              		.loc 1 192 34 is_stmt 0 view .LVU297
 1222 0050 0223     		movs	r3, #2
 1223 0052 0E93     		str	r3, [sp, #56]
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1224              		.loc 1 193 3 is_stmt 1 view .LVU298
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1225              		.loc 1 193 35 is_stmt 0 view .LVU299
 1226 0054 4FF48003 		mov	r3, #4194304
 1227 0058 0F93     		str	r3, [sp, #60]
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1228              		.loc 1 194 3 is_stmt 1 view .LVU300
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1229              		.loc 1 194 30 is_stmt 0 view .LVU301
 1230 005a 0423     		movs	r3, #4
 1231 005c 1093     		str	r3, [sp, #64]
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1232              		.loc 1 195 3 is_stmt 1 view .LVU302
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1233              		.loc 1 195 30 is_stmt 0 view .LVU303
 1234 005e 9022     		movs	r2, #144
 1235 0060 1192     		str	r2, [sp, #68]
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1236              		.loc 1 196 3 is_stmt 1 view .LVU304
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1237              		.loc 1 196 30 is_stmt 0 view .LVU305
 1238 0062 1293     		str	r3, [sp, #72]
 197:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1239              		.loc 1 197 3 is_stmt 1 view .LVU306
 197:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1240              		.loc 1 197 30 is_stmt 0 view .LVU307
 1241 0064 1393     		str	r3, [sp, #76]
 198:Core/Src/main.c ****   {
 1242              		.loc 1 198 3 is_stmt 1 view .LVU308
 198:Core/Src/main.c ****   {
 1243              		.loc 1 198 7 is_stmt 0 view .LVU309
 1244 0066 08A8     		add	r0, sp, #32
 1245 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1246              	.LVL75:
 198:Core/Src/main.c ****   {
 1247              		.loc 1 198 6 view .LVU310
 1248 006c 80B9     		cbnz	r0, .L76
 205:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1249              		.loc 1 205 3 is_stmt 1 view .LVU311
 205:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1250              		.loc 1 205 31 is_stmt 0 view .LVU312
 1251 006e 0F23     		movs	r3, #15
 1252 0070 0393     		str	r3, [sp, #12]
 207:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1253              		.loc 1 207 3 is_stmt 1 view .LVU313
 207:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1254              		.loc 1 207 34 is_stmt 0 view .LVU314
 1255 0072 0221     		movs	r1, #2
 1256 0074 0491     		str	r1, [sp, #16]
 208:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 51


 1257              		.loc 1 208 3 is_stmt 1 view .LVU315
 208:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1258              		.loc 1 208 35 is_stmt 0 view .LVU316
 1259 0076 0023     		movs	r3, #0
 1260 0078 0593     		str	r3, [sp, #20]
 209:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1261              		.loc 1 209 3 is_stmt 1 view .LVU317
 209:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1262              		.loc 1 209 36 is_stmt 0 view .LVU318
 1263 007a 4FF48052 		mov	r2, #4096
 1264 007e 0692     		str	r2, [sp, #24]
 210:Core/Src/main.c **** 
 1265              		.loc 1 210 3 is_stmt 1 view .LVU319
 210:Core/Src/main.c **** 
 1266              		.loc 1 210 36 is_stmt 0 view .LVU320
 1267 0080 0793     		str	r3, [sp, #28]
 212:Core/Src/main.c ****   {
 1268              		.loc 1 212 3 is_stmt 1 view .LVU321
 212:Core/Src/main.c ****   {
 1269              		.loc 1 212 7 is_stmt 0 view .LVU322
 1270 0082 03A8     		add	r0, sp, #12
 1271 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1272              	.LVL76:
 212:Core/Src/main.c ****   {
 1273              		.loc 1 212 6 view .LVU323
 1274 0088 20B9     		cbnz	r0, .L77
 216:Core/Src/main.c **** 
 1275              		.loc 1 216 1 view .LVU324
 1276 008a 15B0     		add	sp, sp, #84
 1277              	.LCFI30:
 1278              		.cfi_remember_state
 1279              		.cfi_def_cfa_offset 4
 1280              		@ sp needed
 1281 008c 5DF804FB 		ldr	pc, [sp], #4
 1282              	.L76:
 1283              	.LCFI31:
 1284              		.cfi_restore_state
 200:Core/Src/main.c ****   }
 1285              		.loc 1 200 5 is_stmt 1 view .LVU325
 1286 0090 FFF7FEFF 		bl	Error_Handler
 1287              	.LVL77:
 1288              	.L77:
 214:Core/Src/main.c ****   }
 1289              		.loc 1 214 5 view .LVU326
 1290 0094 FFF7FEFF 		bl	Error_Handler
 1291              	.LVL78:
 1292              	.L79:
 1293              		.align	2
 1294              	.L78:
 1295 0098 00380240 		.word	1073887232
 1296 009c 00700040 		.word	1073770496
 1297              		.cfi_endproc
 1298              	.LFE138:
 1300              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1301              		.align	2
 1302              	.LC8:
 1303 0000 25730A00 		.ascii	"%s\012\000"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 52


 1304              		.align	2
 1305              	.LC9:
 1306 0004 31323334 		.ascii	"1234567\015\012\000"
 1306      3536370D 
 1306      0A00
 1307              		.section	.text.main,"ax",%progbits
 1308              		.align	1
 1309              		.global	main
 1310              		.syntax unified
 1311              		.thumb
 1312              		.thumb_func
 1313              		.fpu fpv4-sp-d16
 1315              	main:
 1316              	.LFB137:
  92:Core/Src/main.c **** 
 1317              		.loc 1 92 1 view -0
 1318              		.cfi_startproc
 1319              		@ args = 0, pretend = 0, frame = 16
 1320              		@ frame_needed = 0, uses_anonymous_args = 0
 1321 0000 70B5     		push	{r4, r5, r6, lr}
 1322              	.LCFI32:
 1323              		.cfi_def_cfa_offset 16
 1324              		.cfi_offset 4, -16
 1325              		.cfi_offset 5, -12
 1326              		.cfi_offset 6, -8
 1327              		.cfi_offset 14, -4
 1328 0002 86B0     		sub	sp, sp, #24
 1329              	.LCFI33:
 1330              		.cfi_def_cfa_offset 40
 101:Core/Src/main.c **** 
 1331              		.loc 1 101 3 view .LVU328
 1332 0004 FFF7FEFF 		bl	HAL_Init
 1333              	.LVL79:
 108:Core/Src/main.c **** 
 1334              		.loc 1 108 3 view .LVU329
 1335 0008 FFF7FEFF 		bl	SystemClock_Config
 1336              	.LVL80:
 115:Core/Src/main.c ****   MX_USART1_UART_Init();
 1337              		.loc 1 115 3 view .LVU330
 1338 000c FFF7FEFF 		bl	MX_GPIO_Init
 1339              	.LVL81:
 116:Core/Src/main.c ****   MX_USART2_UART_Init();
 1340              		.loc 1 116 3 view .LVU331
 1341 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 1342              	.LVL82:
 117:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1343              		.loc 1 117 3 view .LVU332
 1344 0014 FFF7FEFF 		bl	MX_USART2_UART_Init
 1345              	.LVL83:
 120:Core/Src/main.c ****   memset(yahdlc_send_frame, 0, BUF_SIZE);
 1346              		.loc 1 120 3 view .LVU333
 1347 0018 0122     		movs	r2, #1
 1348 001a 3249     		ldr	r1, .L87
 1349 001c 3248     		ldr	r0, .L87+4
 1350 001e FFF7FEFF 		bl	HAL_UART_Receive_IT
 1351              	.LVL84:
 121:Core/Src/main.c ****   tc_add();
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 53


 1352              		.loc 1 121 3 view .LVU334
 1353 0022 324D     		ldr	r5, .L87+8
 1354 0024 4FF48066 		mov	r6, #1024
 1355 0028 3246     		mov	r2, r6
 1356 002a 0021     		movs	r1, #0
 1357 002c 2846     		mov	r0, r5
 1358 002e FFF7FEFF 		bl	memset
 1359              	.LVL85:
 122:Core/Src/main.c ****   debug_printf("%s\n",yahdlc_send_frame);
 1360              		.loc 1 122 3 view .LVU335
 1361 0032 FFF7FEFF 		bl	tc_add
 1362              	.LVL86:
 123:Core/Src/main.c ****   memset(yahdlc_send_frame, 0, BUF_SIZE);
 1363              		.loc 1 123 3 view .LVU336
 1364 0036 2E4C     		ldr	r4, .L87+12
 1365 0038 2946     		mov	r1, r5
 1366 003a 2046     		mov	r0, r4
 1367 003c FFF7FEFF 		bl	debug_printf
 1368              	.LVL87:
 124:Core/Src/main.c ****   tc_subtract();
 1369              		.loc 1 124 3 view .LVU337
 1370 0040 3246     		mov	r2, r6
 1371 0042 0021     		movs	r1, #0
 1372 0044 2846     		mov	r0, r5
 1373 0046 FFF7FEFF 		bl	memset
 1374              	.LVL88:
 125:Core/Src/main.c ****   debug_printf("%s\n",yahdlc_send_frame);
 1375              		.loc 1 125 3 view .LVU338
 1376 004a FFF7FEFF 		bl	tc_subtract
 1377              	.LVL89:
 126:Core/Src/main.c ****   memset(yahdlc_send_frame, 0, BUF_SIZE);
 1378              		.loc 1 126 3 view .LVU339
 1379 004e 2946     		mov	r1, r5
 1380 0050 2046     		mov	r0, r4
 1381 0052 FFF7FEFF 		bl	debug_printf
 1382              	.LVL90:
 127:Core/Src/main.c ****   tc_multiply();
 1383              		.loc 1 127 3 view .LVU340
 1384 0056 3246     		mov	r2, r6
 1385 0058 0021     		movs	r1, #0
 1386 005a 2846     		mov	r0, r5
 1387 005c FFF7FEFF 		bl	memset
 1388              	.LVL91:
 128:Core/Src/main.c ****   debug_printf("%s\n",yahdlc_send_frame);
 1389              		.loc 1 128 3 view .LVU341
 1390 0060 FFF7FEFF 		bl	tc_multiply
 1391              	.LVL92:
 129:Core/Src/main.c ****   memset(yahdlc_send_frame, 0, BUF_SIZE);
 1392              		.loc 1 129 3 view .LVU342
 1393 0064 2946     		mov	r1, r5
 1394 0066 2046     		mov	r0, r4
 1395 0068 FFF7FEFF 		bl	debug_printf
 1396              	.LVL93:
 130:Core/Src/main.c ****   tc_divide();
 1397              		.loc 1 130 3 view .LVU343
 1398 006c 3246     		mov	r2, r6
 1399 006e 0021     		movs	r1, #0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 54


 1400 0070 2846     		mov	r0, r5
 1401 0072 FFF7FEFF 		bl	memset
 1402              	.LVL94:
 131:Core/Src/main.c ****   debug_printf("%s\n",yahdlc_send_frame);
 1403              		.loc 1 131 3 view .LVU344
 1404 0076 FFF7FEFF 		bl	tc_divide
 1405              	.LVL95:
 132:Core/Src/main.c **** 
 1406              		.loc 1 132 3 view .LVU345
 1407 007a 2946     		mov	r1, r5
 1408 007c 2046     		mov	r0, r4
 1409 007e FFF7FEFF 		bl	debug_printf
 1410              	.LVL96:
 134:Core/Src/main.c **** 
 1411              		.loc 1 134 3 view .LVU346
 1412 0082 1C48     		ldr	r0, .L87+16
 1413 0084 FFF7FEFF 		bl	yahdlc_set_state
 1414              	.LVL97:
 136:Core/Src/main.c ****   control.seq_no = 0;
 1415              		.loc 1 136 3 view .LVU347
 136:Core/Src/main.c ****   control.seq_no = 0;
 1416              		.loc 1 136 17 is_stmt 0 view .LVU348
 1417 0088 1B4E     		ldr	r6, .L87+20
 1418 008a 0024     		movs	r4, #0
 1419 008c 3470     		strb	r4, [r6]
 137:Core/Src/main.c **** 
 1420              		.loc 1 137 3 is_stmt 1 view .LVU349
 137:Core/Src/main.c **** 
 1421              		.loc 1 137 18 is_stmt 0 view .LVU350
 1422 008e 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 1423 0090 64F30203 		bfi	r3, r4, #0, #3
 1424 0094 7370     		strb	r3, [r6, #1]
 139:Core/Src/main.c ****   int frame_len;
 1425              		.loc 1 139 3 is_stmt 1 view .LVU351
 139:Core/Src/main.c ****   int frame_len;
 1426              		.loc 1 139 11 is_stmt 0 view .LVU352
 1427 0096 194A     		ldr	r2, .L87+24
 1428 0098 03AB     		add	r3, sp, #12
 1429 009a 07CA     		ldm	r2, {r0, r1, r2}
 1430 009c 03C3     		stmia	r3!, {r0, r1}
 1431 009e 1A80     		strh	r2, [r3]	@ movhi
 140:Core/Src/main.c **** 
 1432              		.loc 1 140 3 is_stmt 1 view .LVU353
 142:Core/Src/main.c ****   for(int i=0; i<frame_len; i++)
 1433              		.loc 1 142 3 view .LVU354
 1434 00a0 02AB     		add	r3, sp, #8
 1435 00a2 0093     		str	r3, [sp]
 1436 00a4 2B46     		mov	r3, r5
 1437 00a6 0922     		movs	r2, #9
 1438 00a8 03A9     		add	r1, sp, #12
 1439 00aa 3046     		mov	r0, r6
 1440 00ac FFF7FEFF 		bl	yahdlc_frame_data
 1441              	.LVL98:
 143:Core/Src/main.c ****   {
 1442              		.loc 1 143 3 view .LVU355
 1443              	.LBB17:
 143:Core/Src/main.c ****   {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 55


 1444              		.loc 1 143 7 view .LVU356
 143:Core/Src/main.c ****   {
 1445              		.loc 1 143 3 is_stmt 0 view .LVU357
 1446 00b0 04E0     		b	.L81
 1447              	.LVL99:
 1448              	.L82:
 146:Core/Src/main.c ****   }
 1449              		.loc 1 146 5 is_stmt 1 discriminator 3 view .LVU358
 1450 00b2 0E4B     		ldr	r3, .L87+8
 1451 00b4 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 1452 00b6 FFF7FEFF 		bl	uart_sendchar
 1453              	.LVL100:
 143:Core/Src/main.c ****   {
 1454              		.loc 1 143 29 discriminator 3 view .LVU359
 143:Core/Src/main.c ****   {
 1455              		.loc 1 143 30 is_stmt 0 discriminator 3 view .LVU360
 1456 00ba 0134     		adds	r4, r4, #1
 1457              	.LVL101:
 1458              	.L81:
 143:Core/Src/main.c ****   {
 1459              		.loc 1 143 16 is_stmt 1 discriminator 1 view .LVU361
 143:Core/Src/main.c ****   {
 1460              		.loc 1 143 17 is_stmt 0 discriminator 1 view .LVU362
 1461 00bc 029B     		ldr	r3, [sp, #8]
 143:Core/Src/main.c ****   {
 1462              		.loc 1 143 3 discriminator 1 view .LVU363
 1463 00be A342     		cmp	r3, r4
 1464 00c0 F7DC     		bgt	.L82
 1465 00c2 09E0     		b	.L84
 1466              	.L86:
 1467              	.LBE17:
 159:Core/Src/main.c ****       delaytimer = 1000;
 1468              		.loc 1 159 7 is_stmt 1 view .LVU364
 1469 00c4 4021     		movs	r1, #64
 1470 00c6 0E48     		ldr	r0, .L87+28
 1471 00c8 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1472              	.LVL102:
 160:Core/Src/main.c ****       // for(int i=0; i<frame_len; i++)
 1473              		.loc 1 160 7 view .LVU365
 160:Core/Src/main.c ****       // for(int i=0; i<frame_len; i++)
 1474              		.loc 1 160 18 is_stmt 0 view .LVU366
 1475 00cc 0D4B     		ldr	r3, .L87+32
 1476 00ce 4FF47A72 		mov	r2, #1000
 1477 00d2 1A80     		strh	r2, [r3]	@ movhi
 1478              	.L83:
 167:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 1479              		.loc 1 167 5 is_stmt 1 view .LVU367
 1480 00d4 FFF7FEFF 		bl	ProcessDataFromUART
 1481              	.LVL103:
 154:Core/Src/main.c ****   {
 1482              		.loc 1 154 9 view .LVU368
 1483              	.L84:
 154:Core/Src/main.c ****   {
 1484              		.loc 1 154 3 view .LVU369
 157:Core/Src/main.c ****     {
 1485              		.loc 1 157 5 view .LVU370
 157:Core/Src/main.c ****     {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 56


 1486              		.loc 1 157 19 is_stmt 0 view .LVU371
 1487 00d8 0A4B     		ldr	r3, .L87+32
 1488 00da 1B88     		ldrh	r3, [r3]
 157:Core/Src/main.c ****     {
 1489              		.loc 1 157 7 view .LVU372
 1490 00dc 002B     		cmp	r3, #0
 1491 00de F1D0     		beq	.L86
 1492 00e0 F8E7     		b	.L83
 1493              	.L88:
 1494 00e2 00BF     		.align	2
 1495              	.L87:
 1496 00e4 00000000 		.word	.LANCHOR3
 1497 00e8 00000000 		.word	.LANCHOR0
 1498 00ec 00000000 		.word	.LANCHOR8
 1499 00f0 00000000 		.word	.LC8
 1500 00f4 00000000 		.word	.LANCHOR9
 1501 00f8 00000000 		.word	.LANCHOR7
 1502 00fc 04000000 		.word	.LC9
 1503 0100 00000240 		.word	1073872896
 1504 0104 00000000 		.word	.LANCHOR10
 1505              		.cfi_endproc
 1506              	.LFE137:
 1508              		.global	state
 1509              		.global	t
 1510              		.global	buf_rx
 1511              		.global	data_rx
 1512              		.global	yahdlc_send_frame
 1513              		.global	control
 1514              		.global	newReceive
 1515              		.global	delaytimer
 1516              		.global	timeoutReceive
 1517              		.global	huart2
 1518              		.global	huart1
 1519              		.section	.bss.buf_rx,"aw",%nobits
 1520              		.align	2
 1521              		.set	.LANCHOR4,. + 0
 1524              	buf_rx:
 1525 0000 00000000 		.space	1024
 1525      00000000 
 1525      00000000 
 1525      00000000 
 1525      00000000 
 1526              		.section	.bss.control,"aw",%nobits
 1527              		.align	2
 1528              		.set	.LANCHOR7,. + 0
 1531              	control:
 1532 0000 0000     		.space	2
 1533              		.section	.bss.data_rx,"aw",%nobits
 1534              		.align	2
 1535              		.set	.LANCHOR3,. + 0
 1538              	data_rx:
 1539 0000 0000     		.space	2
 1540              		.section	.bss.huart1,"aw",%nobits
 1541              		.align	2
 1542              		.set	.LANCHOR0,. + 0
 1545              	huart1:
 1546 0000 00000000 		.space	72
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 57


 1546      00000000 
 1546      00000000 
 1546      00000000 
 1546      00000000 
 1547              		.section	.bss.huart2,"aw",%nobits
 1548              		.align	2
 1549              		.set	.LANCHOR1,. + 0
 1552              	huart2:
 1553 0000 00000000 		.space	72
 1553      00000000 
 1553      00000000 
 1553      00000000 
 1553      00000000 
 1554              		.section	.bss.newReceive,"aw",%nobits
 1555              		.set	.LANCHOR6,. + 0
 1558              	newReceive:
 1559 0000 00       		.space	1
 1560              		.section	.bss.state,"aw",%nobits
 1561              		.align	2
 1562              		.set	.LANCHOR9,. + 0
 1565              	state:
 1566 0000 00000000 		.space	20
 1566      00000000 
 1566      00000000 
 1566      00000000 
 1566      00000000 
 1567              		.section	.bss.t,"aw",%nobits
 1568              		.align	1
 1569              		.set	.LANCHOR5,. + 0
 1572              	t:
 1573 0000 0000     		.space	2
 1574              		.section	.bss.yahdlc_send_frame,"aw",%nobits
 1575              		.align	2
 1576              		.set	.LANCHOR8,. + 0
 1579              	yahdlc_send_frame:
 1580 0000 00000000 		.space	1024
 1580      00000000 
 1580      00000000 
 1580      00000000 
 1580      00000000 
 1581              		.section	.data.delaytimer,"aw"
 1582              		.align	1
 1583              		.set	.LANCHOR10,. + 0
 1586              	delaytimer:
 1587 0000 E803     		.short	1000
 1588              		.section	.data.timeoutReceive,"aw"
 1589              		.align	1
 1590              		.set	.LANCHOR2,. + 0
 1593              	timeoutReceive:
 1594 0000 4600     		.short	70
 1595              		.text
 1596              	.Letext0:
 1597              		.file 3 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\includ
 1598              		.file 4 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\includ
 1599              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1600              		.file 6 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\lib\\gcc\\arm-none-ea
 1601              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 58


 1602              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1603              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1604              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1605              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1606              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1607              		.file 13 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\lib\\gcc\\arm-none-e
 1608              		.file 14 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\inclu
 1609              		.file 15 "Core/test/yahdlc.h"
 1610              		.file 16 "Core/Inc/main.h"
 1611              		.file 17 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\inclu
 1612              		.file 18 "Core/Inc/function_test.h"
 1613              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1614              		.file 20 "<built-in>"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 59


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:25     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:117    .text.MX_GPIO_Init:00000060 $d
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:123    .text.uart_printf:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:130    .text.uart_printf:00000000 uart_printf
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:219    .text.uart_printf:00000040 $d
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:224    .text.uart_sendchar:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:231    .text.uart_sendchar:00000000 uart_sendchar
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:267    .text.uart_sendchar:0000001c $d
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:272    .text.debug_printf:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:279    .text.debug_printf:00000000 debug_printf
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:368    .text.debug_printf:00000040 $d
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:373    .text.debug_sendchar:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:380    .text.debug_sendchar:00000000 debug_sendchar
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:416    .text.debug_sendchar:0000001c $d
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:421    .text.append_char_to_buffer:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:428    .text.append_char_to_buffer:00000000 append_char_to_buffer
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:471    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:478    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:531    .text.HAL_UART_RxCpltCallback:00000034 $d
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:540    .rodata.ProcessDataFromUART.str1.4:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:566    .text.ProcessDataFromUART:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:573    .text.ProcessDataFromUART:00000000 ProcessDataFromUART
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:953    .text.ProcessDataFromUART:000001cc $d
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:970    .text.Error_Handler:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:977    .text.Error_Handler:00000000 Error_Handler
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1009   .text.MX_USART1_UART_Init:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1015   .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1070   .text.MX_USART1_UART_Init:0000002c $d
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1076   .text.MX_USART2_UART_Init:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1082   .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1137   .text.MX_USART2_UART_Init:0000002c $d
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1143   .text.SystemClock_Config:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1150   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1295   .text.SystemClock_Config:00000098 $d
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1301   .rodata.main.str1.4:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1308   .text.main:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1315   .text.main:00000000 main
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1496   .text.main:000000e4 $d
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1565   .bss.state:00000000 state
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1572   .bss.t:00000000 t
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1524   .bss.buf_rx:00000000 buf_rx
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1538   .bss.data_rx:00000000 data_rx
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1579   .bss.yahdlc_send_frame:00000000 yahdlc_send_frame
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1531   .bss.control:00000000 control
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1558   .bss.newReceive:00000000 newReceive
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1586   .data.delaytimer:00000000 delaytimer
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1593   .data.timeoutReceive:00000000 timeoutReceive
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1552   .bss.huart2:00000000 huart2
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1545   .bss.huart1:00000000 huart1
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1520   .bss.buf_rx:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1527   .bss.control:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1534   .bss.data_rx:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1541   .bss.huart1:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1548   .bss.huart2:00000000 $d
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s 			page 60


C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1559   .bss.newReceive:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1561   .bss.state:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1568   .bss.t:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1575   .bss.yahdlc_send_frame:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1582   .data.delaytimer:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccbi33jA.s:1589   .data.timeoutReceive:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
vsprintf
HAL_UART_Transmit
strlen
HAL_UART_Receive_IT
memset
yahdlc_get_data
yahdlc_frame_data
strstr
tc_add
HAL_Delay
tc_subtract
tc_multiply
tc_divide
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
yahdlc_set_state
HAL_GPIO_TogglePin
