ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB141:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** #include <stdarg.h>
  26:Core/Src/main.c **** #include <string.h>
  27:Core/Src/main.c **** #include <assert.h>
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** #include "unity.h"
  30:Core/Src/main.c **** #include "yahdlc.h"
  31:Core/Src/main.c **** #include "function.h"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 2


  32:Core/Src/main.c **** #include "function_test.h"
  33:Core/Src/main.c **** /* USER CODE END Includes */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PTD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PD */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  46:Core/Src/main.c **** /* USER CODE BEGIN PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PM */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  51:Core/Src/main.c **** UART_HandleTypeDef huart1;
  52:Core/Src/main.c **** UART_HandleTypeDef huart2;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE BEGIN PV */
  55:Core/Src/main.c **** extern uint16_t timeoutReceive = 70;
  56:Core/Src/main.c **** extern uint16_t delaytimer = 1000;
  57:Core/Src/main.c **** extern uint8_t newReceive = 0;
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** yahdlc_control_t control ={0};
  60:Core/Src/main.c **** uint8_t yahdlc_send_frame[256] = {0};
  61:Core/Src/main.c **** /* USER CODE END PV */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  64:Core/Src/main.c **** void SystemClock_Config(void);
  65:Core/Src/main.c **** static void MX_GPIO_Init(void);
  66:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  67:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  68:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  69:Core/Src/main.c **** int uart_printf(const char *fmt, ...);
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart);
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** extern int debug_printf(const char *fmt, ...);
  74:Core/Src/main.c **** void debug_sendchar(const char pdata);
  75:Core/Src/main.c **** void append_char_to_buffer(char *buffer, size_t buffer_size, char c);
  76:Core/Src/main.c **** void ProcessDataFromUART(void);
  77:Core/Src/main.c **** /* USER CODE END PFP */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  80:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  81:Core/Src/main.c **** uint8_t data_rx[2];
  82:Core/Src/main.c **** uint8_t buf_rx[256];
  83:Core/Src/main.c **** uint16_t t = 0;
  84:Core/Src/main.c **** yahdlc_state_t state;
  85:Core/Src/main.c **** /* USER CODE END 0 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /**
  88:Core/Src/main.c ****   * @brief  The application entry point.
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 3


  89:Core/Src/main.c ****   * @retval int
  90:Core/Src/main.c ****   */
  91:Core/Src/main.c **** int main(void)
  92:Core/Src/main.c **** {
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE END 1 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 101:Core/Src/main.c ****   HAL_Init();
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* USER CODE END Init */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* Configure the system clock */
 108:Core/Src/main.c ****   SystemClock_Config();
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE END SysInit */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* Initialize all configured peripherals */
 115:Core/Src/main.c ****   MX_GPIO_Init();
 116:Core/Src/main.c ****   MX_USART1_UART_Init();
 117:Core/Src/main.c ****   MX_USART2_UART_Init();
 118:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 119:Core/Src/main.c ****   // debug_printf("HELLO WORLD!!!\r\n");
 120:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1, data_rx, 1);
 121:Core/Src/main.c ****   memset(yahdlc_send_frame, 0, 256);
 122:Core/Src/main.c ****   tc_add();
 123:Core/Src/main.c ****   debug_printf("%s\n",yahdlc_send_frame);
 124:Core/Src/main.c ****   memset(yahdlc_send_frame, 0, 256);
 125:Core/Src/main.c ****   tc_subtract();
 126:Core/Src/main.c ****   debug_printf("%s\n",yahdlc_send_frame);
 127:Core/Src/main.c ****   memset(yahdlc_send_frame, 0, 256);
 128:Core/Src/main.c ****   tc_multiply();
 129:Core/Src/main.c ****   debug_printf("%s\n",yahdlc_send_frame);
 130:Core/Src/main.c ****   memset(yahdlc_send_frame, 0, 256);
 131:Core/Src/main.c ****   tc_divide();
 132:Core/Src/main.c ****   debug_printf("%s\n",yahdlc_send_frame);
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   char string_buffer[256];
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   yahdlc_set_state(&state);
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   control.frame = YAHDLC_FRAME_DATA;
 139:Core/Src/main.c ****   control.seq_no = 0;
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   uint8_t input_data[] = "1234567\r\n";
 142:Core/Src/main.c ****   int frame_len;
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   yahdlc_frame_data(&control, input_data, sizeof(input_data)-1, yahdlc_send_frame, &frame_len);
 145:Core/Src/main.c ****   for(int i=0; i<frame_len; i++)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 4


 146:Core/Src/main.c ****   {
 147:Core/Src/main.c ****     // debug_sendchar(yahdlc_send_frame[i]);
 148:Core/Src/main.c ****     uart_sendchar(yahdlc_send_frame[i]);
 149:Core/Src/main.c ****   }
 150:Core/Src/main.c **** 
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /* USER CODE END 2 */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /* Infinite loop */
 155:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 156:Core/Src/main.c ****   while (1)
 157:Core/Src/main.c ****   {
 158:Core/Src/main.c ****     /* USER CODE END WHILE */
 159:Core/Src/main.c ****     if(delaytimer == 0)
 160:Core/Src/main.c ****     {
 161:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_6);
 162:Core/Src/main.c ****       delaytimer = 1000;
 163:Core/Src/main.c ****       // for(int i=0; i<frame_len; i++)
 164:Core/Src/main.c ****       // {
 165:Core/Src/main.c ****       //   uart_sendchar(yahdlc_send_frame[i]);
 166:Core/Src/main.c ****       // }
 167:Core/Src/main.c ****     }
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****     ProcessDataFromUART();
 170:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 171:Core/Src/main.c ****   }
 172:Core/Src/main.c ****   /* USER CODE END 3 */
 173:Core/Src/main.c **** }
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** /**
 176:Core/Src/main.c ****   * @brief System Clock Configuration
 177:Core/Src/main.c ****   * @retval None
 178:Core/Src/main.c ****   */
 179:Core/Src/main.c **** void SystemClock_Config(void)
 180:Core/Src/main.c **** {
 181:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 182:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 185:Core/Src/main.c ****   */
 186:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 187:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 190:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 191:Core/Src/main.c ****   */
 192:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 193:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 200:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 201:Core/Src/main.c ****   {
 202:Core/Src/main.c ****     Error_Handler();
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 5


 203:Core/Src/main.c ****   }
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 206:Core/Src/main.c ****   */
 207:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 208:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 209:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 210:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 211:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 212:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 215:Core/Src/main.c ****   {
 216:Core/Src/main.c ****     Error_Handler();
 217:Core/Src/main.c ****   }
 218:Core/Src/main.c **** }
 219:Core/Src/main.c **** 
 220:Core/Src/main.c **** /**
 221:Core/Src/main.c ****   * @brief USART1 Initialization Function
 222:Core/Src/main.c ****   * @param None
 223:Core/Src/main.c ****   * @retval None
 224:Core/Src/main.c ****   */
 225:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 226:Core/Src/main.c **** {
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 235:Core/Src/main.c ****   huart1.Instance = USART1;
 236:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 237:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 238:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 239:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 240:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 241:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 242:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 243:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 244:Core/Src/main.c ****   {
 245:Core/Src/main.c ****     Error_Handler();
 246:Core/Src/main.c ****   }
 247:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 250:Core/Src/main.c **** 
 251:Core/Src/main.c **** }
 252:Core/Src/main.c **** 
 253:Core/Src/main.c **** /**
 254:Core/Src/main.c ****   * @brief USART2 Initialization Function
 255:Core/Src/main.c ****   * @param None
 256:Core/Src/main.c ****   * @retval None
 257:Core/Src/main.c ****   */
 258:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 259:Core/Src/main.c **** {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 6


 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 268:Core/Src/main.c ****   huart2.Instance = USART2;
 269:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 270:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 271:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 272:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 273:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 274:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 275:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 276:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 277:Core/Src/main.c ****   {
 278:Core/Src/main.c ****     Error_Handler();
 279:Core/Src/main.c ****   }
 280:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 283:Core/Src/main.c **** 
 284:Core/Src/main.c **** }
 285:Core/Src/main.c **** 
 286:Core/Src/main.c **** /**
 287:Core/Src/main.c ****   * @brief GPIO Initialization Function
 288:Core/Src/main.c ****   * @param None
 289:Core/Src/main.c ****   * @retval None
 290:Core/Src/main.c ****   */
 291:Core/Src/main.c **** static void MX_GPIO_Init(void)
 292:Core/Src/main.c **** {
  28              		.loc 1 292 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 293:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 293 3 view .LVU1
  42              		.loc 1 293 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 294:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 295:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 7


 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 298:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  49              		.loc 1 298 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 298 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
  53              		.loc 1 298 3 view .LVU5
  54 0012 134B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F08002 		orr	r2, r2, #128
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 298 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F08002 		and	r2, r2, #128
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 298 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 298 3 view .LVU8
 299:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  66              		.loc 1 299 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 299 3 view .LVU10
  69 0026 0294     		str	r4, [sp, #8]
  70              		.loc 1 299 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F00102 		orr	r2, r2, #1
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 299 3 view .LVU12
  75 0030 1B6B     		ldr	r3, [r3, #48]
  76 0032 03F00103 		and	r3, r3, #1
  77 0036 0293     		str	r3, [sp, #8]
  78              		.loc 1 299 3 view .LVU13
  79 0038 029B     		ldr	r3, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 299 3 view .LVU14
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 302:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, GPIO_PIN_RESET);
  82              		.loc 1 302 3 view .LVU15
  83 003a 0A4D     		ldr	r5, .L3+4
  84 003c 2246     		mov	r2, r4
  85 003e 4021     		movs	r1, #64
  86 0040 2846     		mov	r0, r5
  87 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL0:
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****   /*Configure GPIO pin : PA6 */
 305:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_6;
  89              		.loc 1 305 3 view .LVU16
  90              		.loc 1 305 23 is_stmt 0 view .LVU17
  91 0046 4023     		movs	r3, #64
  92 0048 0393     		str	r3, [sp, #12]
 306:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  93              		.loc 1 306 3 is_stmt 1 view .LVU18
  94              		.loc 1 306 24 is_stmt 0 view .LVU19
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 8


  95 004a 0123     		movs	r3, #1
  96 004c 0493     		str	r3, [sp, #16]
 307:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  97              		.loc 1 307 3 is_stmt 1 view .LVU20
  98              		.loc 1 307 24 is_stmt 0 view .LVU21
  99 004e 0594     		str	r4, [sp, #20]
 308:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 100              		.loc 1 308 3 is_stmt 1 view .LVU22
 101              		.loc 1 308 25 is_stmt 0 view .LVU23
 102 0050 0694     		str	r4, [sp, #24]
 309:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 103              		.loc 1 309 3 is_stmt 1 view .LVU24
 104 0052 03A9     		add	r1, sp, #12
 105 0054 2846     		mov	r0, r5
 106 0056 FFF7FEFF 		bl	HAL_GPIO_Init
 107              	.LVL1:
 310:Core/Src/main.c **** 
 311:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 312:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 313:Core/Src/main.c **** }
 108              		.loc 1 313 1 is_stmt 0 view .LVU25
 109 005a 09B0     		add	sp, sp, #36
 110              	.LCFI2:
 111              		.cfi_def_cfa_offset 12
 112              		@ sp needed
 113 005c 30BD     		pop	{r4, r5, pc}
 114              	.L4:
 115 005e 00BF     		.align	2
 116              	.L3:
 117 0060 00380240 		.word	1073887232
 118 0064 00000240 		.word	1073872896
 119              		.cfi_endproc
 120              	.LFE141:
 122              		.section	.text.uart_printf,"ax",%progbits
 123              		.align	1
 124              		.global	uart_printf
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu fpv4-sp-d16
 130              	uart_printf:
 131              	.LVL2:
 132              	.LFB142:
 314:Core/Src/main.c **** 
 315:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 316:Core/Src/main.c **** int uart_printf(const char *fmt, ...)
 317:Core/Src/main.c **** {
 133              		.loc 1 317 1 is_stmt 1 view -0
 134              		.cfi_startproc
 135              		@ args = 4, pretend = 16, frame = 1032
 136              		@ frame_needed = 0, uses_anonymous_args = 1
 137              		.loc 1 317 1 is_stmt 0 view .LVU27
 138 0000 0FB4     		push	{r0, r1, r2, r3}
 139              	.LCFI3:
 140              		.cfi_def_cfa_offset 16
 141              		.cfi_offset 0, -16
 142              		.cfi_offset 1, -12
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 9


 143              		.cfi_offset 2, -8
 144              		.cfi_offset 3, -4
 145 0002 30B5     		push	{r4, r5, lr}
 146              	.LCFI4:
 147              		.cfi_def_cfa_offset 28
 148              		.cfi_offset 4, -28
 149              		.cfi_offset 5, -24
 150              		.cfi_offset 14, -20
 151 0004 ADF20C4D 		subw	sp, sp, #1036
 152              	.LCFI5:
 153              		.cfi_def_cfa_offset 1064
 154 0008 0DF58362 		add	r2, sp, #1048
 155 000c 52F8041B 		ldr	r1, [r2], #4
 318:Core/Src/main.c ****   char buf[1024];
 156              		.loc 1 318 3 is_stmt 1 view .LVU28
 319:Core/Src/main.c ****   int len, i;
 157              		.loc 1 319 3 view .LVU29
 320:Core/Src/main.c ****   va_list args;
 158              		.loc 1 320 3 view .LVU30
 321:Core/Src/main.c ****   va_start (args, fmt);
 159              		.loc 1 321 3 view .LVU31
 160 0010 0192     		str	r2, [sp, #4]
 322:Core/Src/main.c **** 
 323:Core/Src/main.c ****   len = vsprintf(buf, fmt, args);
 161              		.loc 1 323 3 view .LVU32
 162              		.loc 1 323 9 is_stmt 0 view .LVU33
 163 0012 02A8     		add	r0, sp, #8
 164 0014 FFF7FEFF 		bl	vsprintf
 165              	.LVL3:
 166 0018 0546     		mov	r5, r0
 167              	.LVL4:
 324:Core/Src/main.c ****   for (i=0; i<len; i++)
 168              		.loc 1 324 3 is_stmt 1 view .LVU34
 169              		.loc 1 324 9 is_stmt 0 view .LVU35
 170 001a 0024     		movs	r4, #0
 171              		.loc 1 324 3 view .LVU36
 172 001c 07E0     		b	.L6
 173              	.LVL5:
 174              	.L7:
 325:Core/Src/main.c ****   {
 326:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, &buf[i], sizeof(char), 10);
 175              		.loc 1 326 5 is_stmt 1 discriminator 3 view .LVU37
 176 001e 0A23     		movs	r3, #10
 177 0020 0122     		movs	r2, #1
 178 0022 02A9     		add	r1, sp, #8
 179 0024 2144     		add	r1, r1, r4
 180 0026 0648     		ldr	r0, .L9
 181 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 182              	.LVL6:
 324:Core/Src/main.c ****   for (i=0; i<len; i++)
 183              		.loc 1 324 20 discriminator 3 view .LVU38
 324:Core/Src/main.c ****   for (i=0; i<len; i++)
 184              		.loc 1 324 21 is_stmt 0 discriminator 3 view .LVU39
 185 002c 0134     		adds	r4, r4, #1
 186              	.LVL7:
 187              	.L6:
 324:Core/Src/main.c ****   for (i=0; i<len; i++)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 10


 188              		.loc 1 324 13 is_stmt 1 discriminator 1 view .LVU40
 324:Core/Src/main.c ****   for (i=0; i<len; i++)
 189              		.loc 1 324 3 is_stmt 0 discriminator 1 view .LVU41
 190 002e AC42     		cmp	r4, r5
 191 0030 F5DB     		blt	.L7
 327:Core/Src/main.c ****   }
 328:Core/Src/main.c ****   va_end(args);
 192              		.loc 1 328 3 is_stmt 1 view .LVU42
 329:Core/Src/main.c ****   return len;
 193              		.loc 1 329 3 view .LVU43
 330:Core/Src/main.c **** }
 194              		.loc 1 330 1 is_stmt 0 view .LVU44
 195 0032 2846     		mov	r0, r5
 196 0034 0DF20C4D 		addw	sp, sp, #1036
 197              	.LCFI6:
 198              		.cfi_def_cfa_offset 28
 199              		@ sp needed
 200 0038 BDE83040 		pop	{r4, r5, lr}
 201              	.LCFI7:
 202              		.cfi_restore 14
 203              		.cfi_restore 5
 204              		.cfi_restore 4
 205              		.cfi_def_cfa_offset 16
 206              	.LVL8:
 207              		.loc 1 330 1 view .LVU45
 208 003c 04B0     		add	sp, sp, #16
 209              	.LCFI8:
 210              		.cfi_restore 3
 211              		.cfi_restore 2
 212              		.cfi_restore 1
 213              		.cfi_restore 0
 214              		.cfi_def_cfa_offset 0
 215 003e 7047     		bx	lr
 216              	.L10:
 217              		.align	2
 218              	.L9:
 219 0040 00000000 		.word	.LANCHOR0
 220              		.cfi_endproc
 221              	.LFE142:
 223              		.section	.text.uart_sendchar,"ax",%progbits
 224              		.align	1
 225              		.global	uart_sendchar
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu fpv4-sp-d16
 231              	uart_sendchar:
 232              	.LVL9:
 233              	.LFB143:
 331:Core/Src/main.c **** 
 332:Core/Src/main.c **** void uart_sendchar(const char pdata)
 333:Core/Src/main.c **** {
 234              		.loc 1 333 1 is_stmt 1 view -0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 8
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		.loc 1 333 1 is_stmt 0 view .LVU47
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 11


 239 0000 00B5     		push	{lr}
 240              	.LCFI9:
 241              		.cfi_def_cfa_offset 4
 242              		.cfi_offset 14, -4
 243 0002 83B0     		sub	sp, sp, #12
 244              	.LCFI10:
 245              		.cfi_def_cfa_offset 16
 334:Core/Src/main.c ****   char temp = pdata;
 246              		.loc 1 334 3 is_stmt 1 view .LVU48
 247              		.loc 1 334 8 is_stmt 0 view .LVU49
 248 0004 8DF80700 		strb	r0, [sp, #7]
 335:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, &temp, sizeof(char), 10);
 249              		.loc 1 335 3 is_stmt 1 view .LVU50
 250 0008 0A23     		movs	r3, #10
 251 000a 0122     		movs	r2, #1
 252 000c 0DF10701 		add	r1, sp, #7
 253 0010 0248     		ldr	r0, .L13
 254              	.LVL10:
 255              		.loc 1 335 3 is_stmt 0 view .LVU51
 256 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 257              	.LVL11:
 336:Core/Src/main.c ****   // if ('\n' == pdata)
 337:Core/Src/main.c ****   // {
 338:Core/Src/main.c ****   //   temp = '\r';
 339:Core/Src/main.c ****   //   HAL_UART_Transmit(&huart1, &temp, sizeof(char), 10);
 340:Core/Src/main.c ****   // }
 341:Core/Src/main.c **** }
 258              		.loc 1 341 1 view .LVU52
 259 0016 03B0     		add	sp, sp, #12
 260              	.LCFI11:
 261              		.cfi_def_cfa_offset 4
 262              		@ sp needed
 263 0018 5DF804FB 		ldr	pc, [sp], #4
 264              	.L14:
 265              		.align	2
 266              	.L13:
 267 001c 00000000 		.word	.LANCHOR0
 268              		.cfi_endproc
 269              	.LFE143:
 271              		.section	.text.debug_printf,"ax",%progbits
 272              		.align	1
 273              		.global	debug_printf
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 277              		.fpu fpv4-sp-d16
 279              	debug_printf:
 280              	.LVL12:
 281              	.LFB144:
 342:Core/Src/main.c **** 
 343:Core/Src/main.c **** int debug_printf(const char *fmt, ...)
 344:Core/Src/main.c **** {
 282              		.loc 1 344 1 is_stmt 1 view -0
 283              		.cfi_startproc
 284              		@ args = 4, pretend = 16, frame = 1032
 285              		@ frame_needed = 0, uses_anonymous_args = 1
 286              		.loc 1 344 1 is_stmt 0 view .LVU54
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 12


 287 0000 0FB4     		push	{r0, r1, r2, r3}
 288              	.LCFI12:
 289              		.cfi_def_cfa_offset 16
 290              		.cfi_offset 0, -16
 291              		.cfi_offset 1, -12
 292              		.cfi_offset 2, -8
 293              		.cfi_offset 3, -4
 294 0002 30B5     		push	{r4, r5, lr}
 295              	.LCFI13:
 296              		.cfi_def_cfa_offset 28
 297              		.cfi_offset 4, -28
 298              		.cfi_offset 5, -24
 299              		.cfi_offset 14, -20
 300 0004 ADF20C4D 		subw	sp, sp, #1036
 301              	.LCFI14:
 302              		.cfi_def_cfa_offset 1064
 303 0008 0DF58362 		add	r2, sp, #1048
 304 000c 52F8041B 		ldr	r1, [r2], #4
 345:Core/Src/main.c ****   char buf[1024];
 305              		.loc 1 345 3 is_stmt 1 view .LVU55
 346:Core/Src/main.c ****   int len, i;
 306              		.loc 1 346 3 view .LVU56
 347:Core/Src/main.c ****   va_list args;
 307              		.loc 1 347 3 view .LVU57
 348:Core/Src/main.c ****   va_start (args, fmt);
 308              		.loc 1 348 3 view .LVU58
 309 0010 0192     		str	r2, [sp, #4]
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****   len = vsprintf(buf, fmt, args);
 310              		.loc 1 350 3 view .LVU59
 311              		.loc 1 350 9 is_stmt 0 view .LVU60
 312 0012 02A8     		add	r0, sp, #8
 313 0014 FFF7FEFF 		bl	vsprintf
 314              	.LVL13:
 315 0018 0546     		mov	r5, r0
 316              	.LVL14:
 351:Core/Src/main.c ****   for (i=0; i<len; i++)
 317              		.loc 1 351 3 is_stmt 1 view .LVU61
 318              		.loc 1 351 9 is_stmt 0 view .LVU62
 319 001a 0024     		movs	r4, #0
 320              		.loc 1 351 3 view .LVU63
 321 001c 07E0     		b	.L16
 322              	.LVL15:
 323              	.L17:
 352:Core/Src/main.c ****   {
 353:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, &buf[i], sizeof(char), 10);
 324              		.loc 1 353 5 is_stmt 1 discriminator 3 view .LVU64
 325 001e 0A23     		movs	r3, #10
 326 0020 0122     		movs	r2, #1
 327 0022 02A9     		add	r1, sp, #8
 328 0024 2144     		add	r1, r1, r4
 329 0026 0648     		ldr	r0, .L19
 330 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 331              	.LVL16:
 351:Core/Src/main.c ****   for (i=0; i<len; i++)
 332              		.loc 1 351 20 discriminator 3 view .LVU65
 351:Core/Src/main.c ****   for (i=0; i<len; i++)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 13


 333              		.loc 1 351 21 is_stmt 0 discriminator 3 view .LVU66
 334 002c 0134     		adds	r4, r4, #1
 335              	.LVL17:
 336              	.L16:
 351:Core/Src/main.c ****   for (i=0; i<len; i++)
 337              		.loc 1 351 13 is_stmt 1 discriminator 1 view .LVU67
 351:Core/Src/main.c ****   for (i=0; i<len; i++)
 338              		.loc 1 351 3 is_stmt 0 discriminator 1 view .LVU68
 339 002e AC42     		cmp	r4, r5
 340 0030 F5DB     		blt	.L17
 354:Core/Src/main.c ****   }
 355:Core/Src/main.c ****   va_end(args);
 341              		.loc 1 355 3 is_stmt 1 view .LVU69
 356:Core/Src/main.c ****   return len;
 342              		.loc 1 356 3 view .LVU70
 357:Core/Src/main.c **** }
 343              		.loc 1 357 1 is_stmt 0 view .LVU71
 344 0032 2846     		mov	r0, r5
 345 0034 0DF20C4D 		addw	sp, sp, #1036
 346              	.LCFI15:
 347              		.cfi_def_cfa_offset 28
 348              		@ sp needed
 349 0038 BDE83040 		pop	{r4, r5, lr}
 350              	.LCFI16:
 351              		.cfi_restore 14
 352              		.cfi_restore 5
 353              		.cfi_restore 4
 354              		.cfi_def_cfa_offset 16
 355              	.LVL18:
 356              		.loc 1 357 1 view .LVU72
 357 003c 04B0     		add	sp, sp, #16
 358              	.LCFI17:
 359              		.cfi_restore 3
 360              		.cfi_restore 2
 361              		.cfi_restore 1
 362              		.cfi_restore 0
 363              		.cfi_def_cfa_offset 0
 364 003e 7047     		bx	lr
 365              	.L20:
 366              		.align	2
 367              	.L19:
 368 0040 00000000 		.word	.LANCHOR1
 369              		.cfi_endproc
 370              	.LFE144:
 372              		.section	.text.debug_sendchar,"ax",%progbits
 373              		.align	1
 374              		.global	debug_sendchar
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu fpv4-sp-d16
 380              	debug_sendchar:
 381              	.LVL19:
 382              	.LFB145:
 358:Core/Src/main.c **** 
 359:Core/Src/main.c **** void debug_sendchar(const char pdata)
 360:Core/Src/main.c **** {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 14


 383              		.loc 1 360 1 is_stmt 1 view -0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 8
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387              		.loc 1 360 1 is_stmt 0 view .LVU74
 388 0000 00B5     		push	{lr}
 389              	.LCFI18:
 390              		.cfi_def_cfa_offset 4
 391              		.cfi_offset 14, -4
 392 0002 83B0     		sub	sp, sp, #12
 393              	.LCFI19:
 394              		.cfi_def_cfa_offset 16
 361:Core/Src/main.c ****   char temp = pdata;
 395              		.loc 1 361 3 is_stmt 1 view .LVU75
 396              		.loc 1 361 8 is_stmt 0 view .LVU76
 397 0004 8DF80700 		strb	r0, [sp, #7]
 362:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, &temp, sizeof(char), 10);
 398              		.loc 1 362 3 is_stmt 1 view .LVU77
 399 0008 0A23     		movs	r3, #10
 400 000a 0122     		movs	r2, #1
 401 000c 0DF10701 		add	r1, sp, #7
 402 0010 0248     		ldr	r0, .L23
 403              	.LVL20:
 404              		.loc 1 362 3 is_stmt 0 view .LVU78
 405 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 406              	.LVL21:
 363:Core/Src/main.c ****   // if ('\n' == pdata)
 364:Core/Src/main.c ****   // {
 365:Core/Src/main.c ****   //   temp = '\r';
 366:Core/Src/main.c ****   //   HAL_UART_Transmit(&huart1, &temp, sizeof(char), 10);
 367:Core/Src/main.c ****   // }
 368:Core/Src/main.c **** }
 407              		.loc 1 368 1 view .LVU79
 408 0016 03B0     		add	sp, sp, #12
 409              	.LCFI20:
 410              		.cfi_def_cfa_offset 4
 411              		@ sp needed
 412 0018 5DF804FB 		ldr	pc, [sp], #4
 413              	.L24:
 414              		.align	2
 415              	.L23:
 416 001c 00000000 		.word	.LANCHOR1
 417              		.cfi_endproc
 418              	.LFE145:
 420              		.section	.text.append_char_to_buffer,"ax",%progbits
 421              		.align	1
 422              		.global	append_char_to_buffer
 423              		.syntax unified
 424              		.thumb
 425              		.thumb_func
 426              		.fpu fpv4-sp-d16
 428              	append_char_to_buffer:
 429              	.LVL22:
 430              	.LFB146:
 369:Core/Src/main.c **** 
 370:Core/Src/main.c **** void append_char_to_buffer(char *buffer, size_t buffer_size, char c) {
 431              		.loc 1 370 70 is_stmt 1 view -0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 15


 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435              		.loc 1 370 70 is_stmt 0 view .LVU81
 436 0000 70B5     		push	{r4, r5, r6, lr}
 437              	.LCFI21:
 438              		.cfi_def_cfa_offset 16
 439              		.cfi_offset 4, -16
 440              		.cfi_offset 5, -12
 441              		.cfi_offset 6, -8
 442              		.cfi_offset 14, -4
 443 0002 0446     		mov	r4, r0
 444 0004 0D46     		mov	r5, r1
 445 0006 1646     		mov	r6, r2
 371:Core/Src/main.c ****     size_t len = strlen(buffer);
 446              		.loc 1 371 5 is_stmt 1 view .LVU82
 447              		.loc 1 371 18 is_stmt 0 view .LVU83
 448 0008 FFF7FEFF 		bl	strlen
 449              	.LVL23:
 372:Core/Src/main.c ****     if (len + 1 < buffer_size) {
 450              		.loc 1 372 5 is_stmt 1 view .LVU84
 451              		.loc 1 372 13 is_stmt 0 view .LVU85
 452 000c 431C     		adds	r3, r0, #1
 453              		.loc 1 372 8 view .LVU86
 454 000e AB42     		cmp	r3, r5
 455 0010 02D2     		bcs	.L25
 373:Core/Src/main.c ****         buffer[len] = c;
 456              		.loc 1 373 9 is_stmt 1 view .LVU87
 457              		.loc 1 373 21 is_stmt 0 view .LVU88
 458 0012 2654     		strb	r6, [r4, r0]
 374:Core/Src/main.c ****         buffer[len + 1] = '\0';
 459              		.loc 1 374 9 is_stmt 1 view .LVU89
 460              		.loc 1 374 25 is_stmt 0 view .LVU90
 461 0014 0022     		movs	r2, #0
 462 0016 E254     		strb	r2, [r4, r3]
 463              	.L25:
 375:Core/Src/main.c ****     } else {
 376:Core/Src/main.c ****         return;
 377:Core/Src/main.c ****     }
 378:Core/Src/main.c **** }
 464              		.loc 1 378 1 view .LVU91
 465 0018 70BD     		pop	{r4, r5, r6, pc}
 466              		.loc 1 378 1 view .LVU92
 467              		.cfi_endproc
 468              	.LFE146:
 470              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 471              		.align	1
 472              		.global	HAL_UART_RxCpltCallback
 473              		.syntax unified
 474              		.thumb
 475              		.thumb_func
 476              		.fpu fpv4-sp-d16
 478              	HAL_UART_RxCpltCallback:
 479              	.LVL24:
 480              	.LFB147:
 379:Core/Src/main.c **** 
 380:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 16


 381:Core/Src/main.c **** {
 481              		.loc 1 381 1 is_stmt 1 view -0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 0, uses_anonymous_args = 0
 485              		.loc 1 381 1 is_stmt 0 view .LVU94
 486 0000 08B5     		push	{r3, lr}
 487              	.LCFI22:
 488              		.cfi_def_cfa_offset 8
 489              		.cfi_offset 3, -8
 490              		.cfi_offset 14, -4
 382:Core/Src/main.c ****   timeoutReceive = 70;
 491              		.loc 1 382 3 is_stmt 1 view .LVU95
 492              		.loc 1 382 18 is_stmt 0 view .LVU96
 493 0002 0C4B     		ldr	r3, .L31
 494 0004 4622     		movs	r2, #70
 495 0006 1A80     		strh	r2, [r3]	@ movhi
 383:Core/Src/main.c ****   // debug_sendchar(data_rx[0]);
 384:Core/Src/main.c ****   memcpy(buf_rx+t, data_rx, 1);
 496              		.loc 1 384 3 is_stmt 1 view .LVU97
 497 0008 0B4B     		ldr	r3, .L31+4
 498 000a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 499              	.LVL25:
 500              		.loc 1 384 3 is_stmt 0 view .LVU98
 501 000c 0B4A     		ldr	r2, .L31+8
 502 000e 1388     		ldrh	r3, [r2]
 503 0010 0B49     		ldr	r1, .L31+12
 504 0012 C854     		strb	r0, [r1, r3]
 385:Core/Src/main.c ****   if (++t >= 256) t = 0;
 505              		.loc 1 385 3 is_stmt 1 view .LVU99
 506              		.loc 1 385 7 is_stmt 0 view .LVU100
 507 0014 1388     		ldrh	r3, [r2]
 508 0016 0133     		adds	r3, r3, #1
 509 0018 9BB2     		uxth	r3, r3
 510              		.loc 1 385 6 view .LVU101
 511 001a 1380     		strh	r3, [r2]	@ movhi
 512 001c FF2B     		cmp	r3, #255
 513 001e 02D9     		bls	.L29
 514              		.loc 1 385 19 is_stmt 1 discriminator 1 view .LVU102
 515              		.loc 1 385 21 is_stmt 0 discriminator 1 view .LVU103
 516 0020 1346     		mov	r3, r2
 517 0022 0022     		movs	r2, #0
 518 0024 1A80     		strh	r2, [r3]	@ movhi
 519              	.L29:
 386:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1, data_rx, 1);
 520              		.loc 1 386 3 is_stmt 1 view .LVU104
 521 0026 0122     		movs	r2, #1
 522 0028 0349     		ldr	r1, .L31+4
 523 002a 0648     		ldr	r0, .L31+16
 524 002c FFF7FEFF 		bl	HAL_UART_Receive_IT
 525              	.LVL26:
 387:Core/Src/main.c **** }
 526              		.loc 1 387 1 is_stmt 0 view .LVU105
 527 0030 08BD     		pop	{r3, pc}
 528              	.L32:
 529 0032 00BF     		.align	2
 530              	.L31:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 17


 531 0034 00000000 		.word	.LANCHOR2
 532 0038 00000000 		.word	.LANCHOR3
 533 003c 00000000 		.word	.LANCHOR5
 534 0040 00000000 		.word	.LANCHOR4
 535 0044 00000000 		.word	.LANCHOR0
 536              		.cfi_endproc
 537              	.LFE147:
 539              		.section	.rodata.ProcessDataFromUART.str1.4,"aMS",%progbits,1
 540              		.align	2
 541              	.LC0:
 542 0000 0D0A636F 		.ascii	"\015\012control field: frame = %d, seq_no = %d\015\012"
 542      6E74726F 
 542      6C206669 
 542      656C643A 
 542      20667261 
 543 002a 00       		.ascii	"\000"
 544 002b 00       		.align	2
 545              	.LC1:
 546 002c 52656365 		.ascii	"Received data: \015\012\000"
 546      69766564 
 546      20646174 
 546      613A200D 
 546      0A00
 547 003e 0000     		.align	2
 548              	.LC2:
 549 0040 74635F61 		.ascii	"tc_add\000"
 549      646400
 550 0047 00       		.align	2
 551              	.LC3:
 552 0048 0A3D3D3D 		.ascii	"\012======\012%s\012 - length = %d\012\000"
 552      3D3D3D0A 
 552      25730A20 
 552      2D206C65 
 552      6E677468 
 553 0063 00       		.align	2
 554              	.LC4:
 555 0064 25730A20 		.ascii	"%s\012 - length = %d\012\000"
 555      2D206C65 
 555      6E677468 
 555      203D2025 
 555      640A00
 556              		.section	.text.ProcessDataFromUART,"ax",%progbits
 557              		.align	1
 558              		.global	ProcessDataFromUART
 559              		.syntax unified
 560              		.thumb
 561              		.thumb_func
 562              		.fpu fpv4-sp-d16
 564              	ProcessDataFromUART:
 565              	.LFB148:
 388:Core/Src/main.c **** 
 389:Core/Src/main.c **** void ProcessDataFromUART(void)
 390:Core/Src/main.c **** {
 566              		.loc 1 390 1 is_stmt 1 view -0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 528
 569              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 18


 391:Core/Src/main.c **** 	/* Neu khong co du lieu thi khong xu ly */
 392:Core/Src/main.c **** 	if(newReceive == 0)
 570              		.loc 1 392 2 view .LVU107
 571              		.loc 1 392 16 is_stmt 0 view .LVU108
 572 0000 5A4B     		ldr	r3, .L52
 573 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 574              		.loc 1 392 4 view .LVU109
 575 0004 03B9     		cbnz	r3, .L51
 576 0006 7047     		bx	lr
 577              	.L51:
 390:Core/Src/main.c **** 	/* Neu khong co du lieu thi khong xu ly */
 578              		.loc 1 390 1 view .LVU110
 579 0008 F0B5     		push	{r4, r5, r6, r7, lr}
 580              	.LCFI23:
 581              		.cfi_def_cfa_offset 20
 582              		.cfi_offset 4, -20
 583              		.cfi_offset 5, -16
 584              		.cfi_offset 6, -12
 585              		.cfi_offset 7, -8
 586              		.cfi_offset 14, -4
 587 000a ADF5077D 		sub	sp, sp, #540
 588              	.LCFI24:
 589              		.cfi_def_cfa_offset 560
 393:Core/Src/main.c **** 		return;
 394:Core/Src/main.c **** 	
 395:Core/Src/main.c **** 	/* Xoa co bao co du lieu */
 396:Core/Src/main.c **** 	newReceive = 0;
 590              		.loc 1 396 2 is_stmt 1 view .LVU111
 591              		.loc 1 396 13 is_stmt 0 view .LVU112
 592 000e 0021     		movs	r1, #0
 593 0010 564B     		ldr	r3, .L52
 594 0012 1970     		strb	r1, [r3]
 397:Core/Src/main.c **** 	/* Xu ly lenh */
 398:Core/Src/main.c ****   int ret;
 595              		.loc 1 398 3 is_stmt 1 view .LVU113
 399:Core/Src/main.c ****   uint8_t received_data[256] = {0};
 596              		.loc 1 399 3 view .LVU114
 597              		.loc 1 399 11 is_stmt 0 view .LVU115
 598 0014 4691     		str	r1, [sp, #280]
 599 0016 FC22     		movs	r2, #252
 600 0018 47A8     		add	r0, sp, #284
 601 001a FFF7FEFF 		bl	memset
 602              	.LVL27:
 400:Core/Src/main.c ****   int received_len = t;
 603              		.loc 1 400 3 is_stmt 1 view .LVU116
 604              		.loc 1 400 7 is_stmt 0 view .LVU117
 605 001e 544B     		ldr	r3, .L52+4
 606 0020 1A88     		ldrh	r2, [r3]
 607 0022 45AB     		add	r3, sp, #276
 608 0024 4592     		str	r2, [sp, #276]
 401:Core/Src/main.c ****   ret = yahdlc_get_data(&control, buf_rx, t, received_data, &received_len);
 609              		.loc 1 401 3 is_stmt 1 view .LVU118
 610              		.loc 1 401 9 is_stmt 0 view .LVU119
 611 0026 0093     		str	r3, [sp]
 612 0028 46AB     		add	r3, sp, #280
 613 002a 5249     		ldr	r1, .L52+8
 614 002c 5248     		ldr	r0, .L52+12
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 19


 615 002e FFF7FEFF 		bl	yahdlc_get_data
 616              	.LVL28:
 402:Core/Src/main.c ****   if (ret == 0) {
 617              		.loc 1 402 3 is_stmt 1 view .LVU120
 618              		.loc 1 402 6 is_stmt 0 view .LVU121
 619 0032 0446     		mov	r4, r0
 620 0034 0028     		cmp	r0, #0
 621 0036 72D1     		bne	.L36
 622              	.LBB6:
 403:Core/Src/main.c ****     debug_printf("\r\ncontrol field: frame = %d, seq_no = %d\r\n", control.frame, control.seq_no);
 623              		.loc 1 403 5 is_stmt 1 view .LVU122
 624              		.loc 1 403 75 is_stmt 0 view .LVU123
 625 0038 4F4B     		ldr	r3, .L52+12
 626              		.loc 1 403 90 view .LVU124
 627 003a 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 628              		.loc 1 403 5 view .LVU125
 629 003c 02F00702 		and	r2, r2, #7
 630 0040 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 631 0042 4E48     		ldr	r0, .L52+16
 632              	.LVL29:
 633              		.loc 1 403 5 view .LVU126
 634 0044 FFF7FEFF 		bl	debug_printf
 635              	.LVL30:
 404:Core/Src/main.c ****     debug_printf("Received data: \r\n");
 636              		.loc 1 404 5 is_stmt 1 view .LVU127
 637 0048 4D48     		ldr	r0, .L52+20
 638 004a FFF7FEFF 		bl	debug_printf
 639              	.LVL31:
 405:Core/Src/main.c ****     for(int i=0; i<received_len; i++)
 640              		.loc 1 405 5 view .LVU128
 641              	.LBB7:
 642              		.loc 1 405 9 view .LVU129
 643              		.loc 1 405 5 is_stmt 0 view .LVU130
 644 004e 04E0     		b	.L37
 645              	.LVL32:
 646              	.L38:
 406:Core/Src/main.c ****     {
 407:Core/Src/main.c ****       debug_sendchar(received_data[i]);
 647              		.loc 1 407 7 is_stmt 1 discriminator 3 view .LVU131
 648 0050 46AB     		add	r3, sp, #280
 649 0052 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 650 0054 FFF7FEFF 		bl	debug_sendchar
 651              	.LVL33:
 405:Core/Src/main.c ****     for(int i=0; i<received_len; i++)
 652              		.loc 1 405 34 discriminator 3 view .LVU132
 405:Core/Src/main.c ****     for(int i=0; i<received_len; i++)
 653              		.loc 1 405 35 is_stmt 0 discriminator 3 view .LVU133
 654 0058 0134     		adds	r4, r4, #1
 655              	.LVL34:
 656              	.L37:
 405:Core/Src/main.c ****     for(int i=0; i<received_len; i++)
 657              		.loc 1 405 18 is_stmt 1 discriminator 1 view .LVU134
 405:Core/Src/main.c ****     for(int i=0; i<received_len; i++)
 658              		.loc 1 405 19 is_stmt 0 discriminator 1 view .LVU135
 659 005a 459B     		ldr	r3, [sp, #276]
 405:Core/Src/main.c ****     for(int i=0; i<received_len; i++)
 660              		.loc 1 405 5 discriminator 1 view .LVU136
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 20


 661 005c A342     		cmp	r3, r4
 662 005e F7DC     		bgt	.L38
 663              	.LBE7:
 408:Core/Src/main.c ****     }
 409:Core/Src/main.c ****     control.frame = YAHDLC_FRAME_ACK;
 664              		.loc 1 409 5 is_stmt 1 view .LVU137
 665              		.loc 1 409 19 is_stmt 0 view .LVU138
 666 0060 4548     		ldr	r0, .L52+12
 667 0062 0123     		movs	r3, #1
 668 0064 0370     		strb	r3, [r0]
 410:Core/Src/main.c ****     control.seq_no += 1;
 669              		.loc 1 410 5 is_stmt 1 view .LVU139
 670              		.loc 1 410 20 is_stmt 0 view .LVU140
 671 0066 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 672 0068 C3F30202 		ubfx	r2, r3, #0, #3
 673 006c 0132     		adds	r2, r2, #1
 674 006e 62F30203 		bfi	r3, r2, #0, #3
 675 0072 4370     		strb	r3, [r0, #1]
 411:Core/Src/main.c ****     // Generate the ACK frame
 412:Core/Src/main.c ****     char frame[256];
 676              		.loc 1 412 5 is_stmt 1 view .LVU141
 413:Core/Src/main.c ****     unsigned int frame_len;
 677              		.loc 1 413 5 view .LVU142
 414:Core/Src/main.c ****     yahdlc_frame_data(&control, NULL, 0, frame, &frame_len);
 678              		.loc 1 414 5 view .LVU143
 679 0074 04AB     		add	r3, sp, #16
 680 0076 0093     		str	r3, [sp]
 681 0078 05AB     		add	r3, sp, #20
 682 007a 0022     		movs	r2, #0
 683 007c 1146     		mov	r1, r2
 684 007e FFF7FEFF 		bl	yahdlc_frame_data
 685              	.LVL35:
 415:Core/Src/main.c ****     for (unsigned int i = 0; i < frame_len; i++) {
 686              		.loc 1 415 5 view .LVU144
 687              	.LBB8:
 688              		.loc 1 415 10 view .LVU145
 689              		.loc 1 415 23 is_stmt 0 view .LVU146
 690 0082 0024     		movs	r4, #0
 691              	.LVL36:
 692              		.loc 1 415 5 view .LVU147
 693 0084 04E0     		b	.L39
 694              	.LVL37:
 695              	.L40:
 416:Core/Src/main.c ****       uart_sendchar(frame[i]);
 696              		.loc 1 416 7 is_stmt 1 discriminator 3 view .LVU148
 697 0086 05AB     		add	r3, sp, #20
 698 0088 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 699 008a FFF7FEFF 		bl	uart_sendchar
 700              	.LVL38:
 415:Core/Src/main.c ****     for (unsigned int i = 0; i < frame_len; i++) {
 701              		.loc 1 415 45 discriminator 3 view .LVU149
 415:Core/Src/main.c ****     for (unsigned int i = 0; i < frame_len; i++) {
 702              		.loc 1 415 46 is_stmt 0 discriminator 3 view .LVU150
 703 008e 0134     		adds	r4, r4, #1
 704              	.LVL39:
 705              	.L39:
 415:Core/Src/main.c ****     for (unsigned int i = 0; i < frame_len; i++) {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 21


 706              		.loc 1 415 30 is_stmt 1 discriminator 1 view .LVU151
 415:Core/Src/main.c ****     for (unsigned int i = 0; i < frame_len; i++) {
 707              		.loc 1 415 32 is_stmt 0 discriminator 1 view .LVU152
 708 0090 049B     		ldr	r3, [sp, #16]
 415:Core/Src/main.c ****     for (unsigned int i = 0; i < frame_len; i++) {
 709              		.loc 1 415 5 discriminator 1 view .LVU153
 710 0092 A342     		cmp	r3, r4
 711 0094 F7D8     		bhi	.L40
 712              	.LBE8:
 417:Core/Src/main.c ****     }
 418:Core/Src/main.c **** 
 419:Core/Src/main.c ****     // Process receive data buffer
 420:Core/Src/main.c ****     if((strstr((char*)received_data, "tc_add")))
 713              		.loc 1 420 5 is_stmt 1 view .LVU154
 714              		.loc 1 420 9 is_stmt 0 view .LVU155
 715 0096 3B49     		ldr	r1, .L52+24
 716 0098 46A8     		add	r0, sp, #280
 717 009a FFF7FEFF 		bl	strstr
 718              	.LVL40:
 719              		.loc 1 420 7 view .LVU156
 720 009e 0028     		cmp	r0, #0
 721 00a0 58D0     		beq	.L44
 421:Core/Src/main.c ****     {
 422:Core/Src/main.c ****       memset(yahdlc_send_frame, 0, 256);
 722              		.loc 1 422 7 is_stmt 1 view .LVU157
 723 00a2 394D     		ldr	r5, .L52+28
 724 00a4 4FF48077 		mov	r7, #256
 725 00a8 3A46     		mov	r2, r7
 726 00aa 0021     		movs	r1, #0
 727 00ac 2846     		mov	r0, r5
 728 00ae FFF7FEFF 		bl	memset
 729              	.LVL41:
 423:Core/Src/main.c ****       tc_add();
 730              		.loc 1 423 7 view .LVU158
 731 00b2 FFF7FEFF 		bl	tc_add
 732              	.LVL42:
 424:Core/Src/main.c ****       debug_printf("\n======\n%s\n - length = %d\n",yahdlc_send_frame, strlen(yahdlc_send_frame));
 733              		.loc 1 424 7 view .LVU159
 734 00b6 2846     		mov	r0, r5
 735 00b8 FFF7FEFF 		bl	strlen
 736              	.LVL43:
 737 00bc 0246     		mov	r2, r0
 738 00be 2946     		mov	r1, r5
 739 00c0 3248     		ldr	r0, .L52+32
 740 00c2 FFF7FEFF 		bl	debug_printf
 741              	.LVL44:
 425:Core/Src/main.c **** 
 426:Core/Src/main.c ****       HAL_Delay(1000);
 742              		.loc 1 426 7 view .LVU160
 743 00c6 4FF47A70 		mov	r0, #1000
 744 00ca FFF7FEFF 		bl	HAL_Delay
 745              	.LVL45:
 427:Core/Src/main.c ****       control.frame = YAHDLC_FRAME_DATA;
 746              		.loc 1 427 7 view .LVU161
 747              		.loc 1 427 21 is_stmt 0 view .LVU162
 748 00ce 2A4E     		ldr	r6, .L52+12
 749 00d0 0024     		movs	r4, #0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 22


 750              	.LVL46:
 751              		.loc 1 427 21 view .LVU163
 752 00d2 3470     		strb	r4, [r6]
 428:Core/Src/main.c ****       control.seq_no += 1;
 753              		.loc 1 428 7 is_stmt 1 view .LVU164
 754              		.loc 1 428 22 is_stmt 0 view .LVU165
 755 00d4 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 756 00d6 C3F30202 		ubfx	r2, r3, #0, #3
 757 00da 0132     		adds	r2, r2, #1
 758 00dc 62F30203 		bfi	r3, r2, #0, #3
 759 00e0 7370     		strb	r3, [r6, #1]
 429:Core/Src/main.c ****       memset(frame, 0, 256);
 760              		.loc 1 429 7 is_stmt 1 view .LVU166
 761 00e2 3A46     		mov	r2, r7
 762 00e4 2146     		mov	r1, r4
 763 00e6 05A8     		add	r0, sp, #20
 764 00e8 FFF7FEFF 		bl	memset
 765              	.LVL47:
 430:Core/Src/main.c ****       yahdlc_frame_data(&control, yahdlc_send_frame, strlen(yahdlc_send_frame), frame, &frame_len);
 766              		.loc 1 430 7 view .LVU167
 767 00ec 2846     		mov	r0, r5
 768 00ee FFF7FEFF 		bl	strlen
 769              	.LVL48:
 770 00f2 0246     		mov	r2, r0
 771 00f4 04AF     		add	r7, sp, #16
 772 00f6 0097     		str	r7, [sp]
 773 00f8 05AB     		add	r3, sp, #20
 774 00fa 2946     		mov	r1, r5
 775 00fc 3046     		mov	r0, r6
 776 00fe FFF7FEFF 		bl	yahdlc_frame_data
 777              	.LVL49:
 431:Core/Src/main.c ****       debug_printf("%s\n - length = %d\n", frame, frame_len);
 778              		.loc 1 431 7 view .LVU168
 779 0102 049A     		ldr	r2, [sp, #16]
 780 0104 05A9     		add	r1, sp, #20
 781 0106 2248     		ldr	r0, .L52+36
 782 0108 FFF7FEFF 		bl	debug_printf
 783              	.LVL50:
 432:Core/Src/main.c **** 
 433:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 784              		.loc 1 433 7 view .LVU169
 785              	.LBB9:
 786              		.loc 1 433 12 view .LVU170
 787              	.L42:
 788              		.loc 1 433 32 discriminator 1 view .LVU171
 789              		.loc 1 433 34 is_stmt 0 discriminator 1 view .LVU172
 790 010c 049B     		ldr	r3, [sp, #16]
 791              		.loc 1 433 7 discriminator 1 view .LVU173
 792 010e A342     		cmp	r3, r4
 793 0110 20D9     		bls	.L44
 434:Core/Src/main.c ****         uart_sendchar(frame[i]);
 794              		.loc 1 434 9 is_stmt 1 discriminator 3 view .LVU174
 795 0112 05AB     		add	r3, sp, #20
 796 0114 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 797 0116 FFF7FEFF 		bl	uart_sendchar
 798              	.LVL51:
 433:Core/Src/main.c ****         uart_sendchar(frame[i]);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 23


 799              		.loc 1 433 47 discriminator 3 view .LVU175
 433:Core/Src/main.c ****         uart_sendchar(frame[i]);
 800              		.loc 1 433 48 is_stmt 0 discriminator 3 view .LVU176
 801 011a 0134     		adds	r4, r4, #1
 802              	.LVL52:
 433:Core/Src/main.c ****         uart_sendchar(frame[i]);
 803              		.loc 1 433 48 discriminator 3 view .LVU177
 804 011c F6E7     		b	.L42
 805              	.LVL53:
 806              	.L36:
 433:Core/Src/main.c ****         uart_sendchar(frame[i]);
 807              		.loc 1 433 48 discriminator 3 view .LVU178
 808              	.LBE9:
 809              	.LBE6:
 810              	.LBB10:
 435:Core/Src/main.c ****       }
 436:Core/Src/main.c ****     }
 437:Core/Src/main.c ****   } else {
 438:Core/Src/main.c ****       // debug_printf("Error decoding frame %d\r\n", ret);
 439:Core/Src/main.c ****       // debug_printf("t = %d buf_rx:\r\n", t);
 440:Core/Src/main.c ****       // for(int i=0; i<t; i++)
 441:Core/Src/main.c ****       // {
 442:Core/Src/main.c ****       //   debug_printf("0x%02x, ", buf_rx[i]);
 443:Core/Src/main.c ****       // }
 444:Core/Src/main.c ****       // debug_printf("\r\nreceived_len = %d received_data:\r\n", received_len);
 445:Core/Src/main.c ****       // for(int i=0; i<received_len; i++)
 446:Core/Src/main.c ****       // {
 447:Core/Src/main.c ****       //   debug_printf("0x%02x, ", received_data[i]);
 448:Core/Src/main.c ****       // }
 449:Core/Src/main.c ****       yahdlc_control_t control;
 811              		.loc 1 449 7 is_stmt 1 view .LVU179
 450:Core/Src/main.c ****       control.frame = YAHDLC_FRAME_NACK;
 812              		.loc 1 450 7 view .LVU180
 813              		.loc 1 450 21 is_stmt 0 view .LVU181
 814 011e 0223     		movs	r3, #2
 815 0120 8DF80C30 		strb	r3, [sp, #12]
 451:Core/Src/main.c ****       control.seq_no = 0;
 816              		.loc 1 451 7 is_stmt 1 view .LVU182
 817              		.loc 1 451 22 is_stmt 0 view .LVU183
 818 0124 9DF80D30 		ldrb	r3, [sp, #13]	@ zero_extendqisi2
 819 0128 6FF30203 		bfc	r3, #0, #3
 820 012c 8DF80D30 		strb	r3, [sp, #13]
 452:Core/Src/main.c ****       // Generate the ACK frame
 453:Core/Src/main.c ****       char frame[256];
 821              		.loc 1 453 7 is_stmt 1 view .LVU184
 454:Core/Src/main.c ****       unsigned int frame_len;
 822              		.loc 1 454 7 view .LVU185
 455:Core/Src/main.c ****       yahdlc_frame_data(&control, NULL, 0, frame, &frame_len);
 823              		.loc 1 455 7 view .LVU186
 824 0130 04AB     		add	r3, sp, #16
 825 0132 0093     		str	r3, [sp]
 826 0134 05AB     		add	r3, sp, #20
 827 0136 0022     		movs	r2, #0
 828 0138 1146     		mov	r1, r2
 829 013a 03A8     		add	r0, sp, #12
 830              	.LVL54:
 831              		.loc 1 455 7 is_stmt 0 view .LVU187
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 24


 832 013c FFF7FEFF 		bl	yahdlc_frame_data
 833              	.LVL55:
 456:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 834              		.loc 1 456 7 is_stmt 1 view .LVU188
 835              	.LBB11:
 836              		.loc 1 456 12 view .LVU189
 837              		.loc 1 456 25 is_stmt 0 view .LVU190
 838 0140 0024     		movs	r4, #0
 839              	.LVL56:
 840              		.loc 1 456 7 view .LVU191
 841 0142 04E0     		b	.L45
 842              	.LVL57:
 843              	.L46:
 457:Core/Src/main.c ****         uart_sendchar(frame[i]);
 844              		.loc 1 457 9 is_stmt 1 discriminator 3 view .LVU192
 845 0144 05AB     		add	r3, sp, #20
 846 0146 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 847 0148 FFF7FEFF 		bl	uart_sendchar
 848              	.LVL58:
 456:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 849              		.loc 1 456 47 discriminator 3 view .LVU193
 456:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 850              		.loc 1 456 48 is_stmt 0 discriminator 3 view .LVU194
 851 014c 0134     		adds	r4, r4, #1
 852              	.LVL59:
 853              	.L45:
 456:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 854              		.loc 1 456 32 is_stmt 1 discriminator 1 view .LVU195
 456:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 855              		.loc 1 456 34 is_stmt 0 discriminator 1 view .LVU196
 856 014e 049B     		ldr	r3, [sp, #16]
 456:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 857              		.loc 1 456 7 discriminator 1 view .LVU197
 858 0150 A342     		cmp	r3, r4
 859 0152 F7D8     		bhi	.L46
 860              	.LVL60:
 861              	.L44:
 456:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 862              		.loc 1 456 7 discriminator 1 view .LVU198
 863              	.LBE11:
 864              	.LBE10:
 458:Core/Src/main.c ****       }
 459:Core/Src/main.c ****   }
 460:Core/Src/main.c **** 	/* Xoa bo dem nhan */
 461:Core/Src/main.c **** 	t = 0;
 865              		.loc 1 461 2 is_stmt 1 discriminator 1 view .LVU199
 866              		.loc 1 461 4 is_stmt 0 discriminator 1 view .LVU200
 867 0154 0021     		movs	r1, #0
 868 0156 064B     		ldr	r3, .L52+4
 869 0158 1980     		strh	r1, [r3]	@ movhi
 462:Core/Src/main.c **** 	memset(buf_rx, 0, 256);
 870              		.loc 1 462 2 is_stmt 1 discriminator 1 view .LVU201
 871 015a 4FF48072 		mov	r2, #256
 872 015e 0548     		ldr	r0, .L52+8
 873 0160 FFF7FEFF 		bl	memset
 874              	.LVL61:
 463:Core/Src/main.c **** }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 25


 875              		.loc 1 463 1 is_stmt 0 discriminator 1 view .LVU202
 876 0164 0DF5077D 		add	sp, sp, #540
 877              	.LCFI25:
 878              		.cfi_def_cfa_offset 20
 879              		@ sp needed
 880 0168 F0BD     		pop	{r4, r5, r6, r7, pc}
 881              	.L53:
 882 016a 00BF     		.align	2
 883              	.L52:
 884 016c 00000000 		.word	.LANCHOR6
 885 0170 00000000 		.word	.LANCHOR5
 886 0174 00000000 		.word	.LANCHOR4
 887 0178 00000000 		.word	.LANCHOR7
 888 017c 00000000 		.word	.LC0
 889 0180 2C000000 		.word	.LC1
 890 0184 40000000 		.word	.LC2
 891 0188 00000000 		.word	.LANCHOR8
 892 018c 48000000 		.word	.LC3
 893 0190 64000000 		.word	.LC4
 894              		.cfi_endproc
 895              	.LFE148:
 897              		.section	.text.Error_Handler,"ax",%progbits
 898              		.align	1
 899              		.global	Error_Handler
 900              		.syntax unified
 901              		.thumb
 902              		.thumb_func
 903              		.fpu fpv4-sp-d16
 905              	Error_Handler:
 906              	.LFB149:
 464:Core/Src/main.c **** 
 465:Core/Src/main.c **** /* USER CODE END 4 */
 466:Core/Src/main.c **** 
 467:Core/Src/main.c **** /**
 468:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 469:Core/Src/main.c ****   * @retval None
 470:Core/Src/main.c ****   */
 471:Core/Src/main.c **** void Error_Handler(void)
 472:Core/Src/main.c **** {
 907              		.loc 1 472 1 is_stmt 1 view -0
 908              		.cfi_startproc
 909              		@ Volatile: function does not return.
 910              		@ args = 0, pretend = 0, frame = 0
 911              		@ frame_needed = 0, uses_anonymous_args = 0
 912              		@ link register save eliminated.
 473:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 474:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 475:Core/Src/main.c ****   __disable_irq();
 913              		.loc 1 475 3 view .LVU204
 914              	.LBB12:
 915              	.LBI12:
 916              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 26


   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 27


  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 28


 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 29


 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 30


 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 31


 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 32


 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 33


 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 34


 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 35


 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 36


 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 37


 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 38


 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 39


 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 40


 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 41


 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 42


 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 917              		.loc 2 960 27 view .LVU205
 918              	.LBB13:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 919              		.loc 2 962 3 view .LVU206
 920              		.syntax unified
 921              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 922 0000 72B6     		cpsid i
 923              	@ 0 "" 2
 924              		.thumb
 925              		.syntax unified
 926              	.L55:
 927              	.LBE13:
 928              	.LBE12:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 43


 476:Core/Src/main.c ****   while (1)
 929              		.loc 1 476 3 discriminator 1 view .LVU207
 477:Core/Src/main.c ****   {
 478:Core/Src/main.c ****   }
 930              		.loc 1 478 3 discriminator 1 view .LVU208
 476:Core/Src/main.c ****   while (1)
 931              		.loc 1 476 9 discriminator 1 view .LVU209
 932 0002 FEE7     		b	.L55
 933              		.cfi_endproc
 934              	.LFE149:
 936              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 937              		.align	1
 938              		.syntax unified
 939              		.thumb
 940              		.thumb_func
 941              		.fpu fpv4-sp-d16
 943              	MX_USART1_UART_Init:
 944              	.LFB139:
 226:Core/Src/main.c **** 
 945              		.loc 1 226 1 view -0
 946              		.cfi_startproc
 947              		@ args = 0, pretend = 0, frame = 0
 948              		@ frame_needed = 0, uses_anonymous_args = 0
 949 0000 08B5     		push	{r3, lr}
 950              	.LCFI26:
 951              		.cfi_def_cfa_offset 8
 952              		.cfi_offset 3, -8
 953              		.cfi_offset 14, -4
 235:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 954              		.loc 1 235 3 view .LVU211
 235:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 955              		.loc 1 235 19 is_stmt 0 view .LVU212
 956 0002 0A48     		ldr	r0, .L60
 957 0004 0A4B     		ldr	r3, .L60+4
 958 0006 0360     		str	r3, [r0]
 236:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 959              		.loc 1 236 3 is_stmt 1 view .LVU213
 236:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 960              		.loc 1 236 24 is_stmt 0 view .LVU214
 961 0008 4FF4E133 		mov	r3, #115200
 962 000c 4360     		str	r3, [r0, #4]
 237:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 963              		.loc 1 237 3 is_stmt 1 view .LVU215
 237:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 964              		.loc 1 237 26 is_stmt 0 view .LVU216
 965 000e 0023     		movs	r3, #0
 966 0010 8360     		str	r3, [r0, #8]
 238:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 967              		.loc 1 238 3 is_stmt 1 view .LVU217
 238:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 968              		.loc 1 238 24 is_stmt 0 view .LVU218
 969 0012 C360     		str	r3, [r0, #12]
 239:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 970              		.loc 1 239 3 is_stmt 1 view .LVU219
 239:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 971              		.loc 1 239 22 is_stmt 0 view .LVU220
 972 0014 0361     		str	r3, [r0, #16]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 44


 240:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 973              		.loc 1 240 3 is_stmt 1 view .LVU221
 240:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 974              		.loc 1 240 20 is_stmt 0 view .LVU222
 975 0016 0C22     		movs	r2, #12
 976 0018 4261     		str	r2, [r0, #20]
 241:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 977              		.loc 1 241 3 is_stmt 1 view .LVU223
 241:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 978              		.loc 1 241 25 is_stmt 0 view .LVU224
 979 001a 8361     		str	r3, [r0, #24]
 242:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 980              		.loc 1 242 3 is_stmt 1 view .LVU225
 242:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 981              		.loc 1 242 28 is_stmt 0 view .LVU226
 982 001c C361     		str	r3, [r0, #28]
 243:Core/Src/main.c ****   {
 983              		.loc 1 243 3 is_stmt 1 view .LVU227
 243:Core/Src/main.c ****   {
 984              		.loc 1 243 7 is_stmt 0 view .LVU228
 985 001e FFF7FEFF 		bl	HAL_UART_Init
 986              	.LVL62:
 243:Core/Src/main.c ****   {
 987              		.loc 1 243 6 view .LVU229
 988 0022 00B9     		cbnz	r0, .L59
 251:Core/Src/main.c **** 
 989              		.loc 1 251 1 view .LVU230
 990 0024 08BD     		pop	{r3, pc}
 991              	.L59:
 245:Core/Src/main.c ****   }
 992              		.loc 1 245 5 is_stmt 1 view .LVU231
 993 0026 FFF7FEFF 		bl	Error_Handler
 994              	.LVL63:
 995              	.L61:
 996 002a 00BF     		.align	2
 997              	.L60:
 998 002c 00000000 		.word	.LANCHOR0
 999 0030 00100140 		.word	1073811456
 1000              		.cfi_endproc
 1001              	.LFE139:
 1003              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 1004              		.align	1
 1005              		.syntax unified
 1006              		.thumb
 1007              		.thumb_func
 1008              		.fpu fpv4-sp-d16
 1010              	MX_USART2_UART_Init:
 1011              	.LFB140:
 259:Core/Src/main.c **** 
 1012              		.loc 1 259 1 view -0
 1013              		.cfi_startproc
 1014              		@ args = 0, pretend = 0, frame = 0
 1015              		@ frame_needed = 0, uses_anonymous_args = 0
 1016 0000 08B5     		push	{r3, lr}
 1017              	.LCFI27:
 1018              		.cfi_def_cfa_offset 8
 1019              		.cfi_offset 3, -8
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 45


 1020              		.cfi_offset 14, -4
 268:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1021              		.loc 1 268 3 view .LVU233
 268:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1022              		.loc 1 268 19 is_stmt 0 view .LVU234
 1023 0002 0A48     		ldr	r0, .L66
 1024 0004 0A4B     		ldr	r3, .L66+4
 1025 0006 0360     		str	r3, [r0]
 269:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1026              		.loc 1 269 3 is_stmt 1 view .LVU235
 269:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1027              		.loc 1 269 24 is_stmt 0 view .LVU236
 1028 0008 4FF4E133 		mov	r3, #115200
 1029 000c 4360     		str	r3, [r0, #4]
 270:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1030              		.loc 1 270 3 is_stmt 1 view .LVU237
 270:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1031              		.loc 1 270 26 is_stmt 0 view .LVU238
 1032 000e 0023     		movs	r3, #0
 1033 0010 8360     		str	r3, [r0, #8]
 271:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1034              		.loc 1 271 3 is_stmt 1 view .LVU239
 271:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1035              		.loc 1 271 24 is_stmt 0 view .LVU240
 1036 0012 C360     		str	r3, [r0, #12]
 272:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1037              		.loc 1 272 3 is_stmt 1 view .LVU241
 272:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1038              		.loc 1 272 22 is_stmt 0 view .LVU242
 1039 0014 0361     		str	r3, [r0, #16]
 273:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1040              		.loc 1 273 3 is_stmt 1 view .LVU243
 273:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1041              		.loc 1 273 20 is_stmt 0 view .LVU244
 1042 0016 0C22     		movs	r2, #12
 1043 0018 4261     		str	r2, [r0, #20]
 274:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1044              		.loc 1 274 3 is_stmt 1 view .LVU245
 274:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1045              		.loc 1 274 25 is_stmt 0 view .LVU246
 1046 001a 8361     		str	r3, [r0, #24]
 275:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1047              		.loc 1 275 3 is_stmt 1 view .LVU247
 275:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1048              		.loc 1 275 28 is_stmt 0 view .LVU248
 1049 001c C361     		str	r3, [r0, #28]
 276:Core/Src/main.c ****   {
 1050              		.loc 1 276 3 is_stmt 1 view .LVU249
 276:Core/Src/main.c ****   {
 1051              		.loc 1 276 7 is_stmt 0 view .LVU250
 1052 001e FFF7FEFF 		bl	HAL_UART_Init
 1053              	.LVL64:
 276:Core/Src/main.c ****   {
 1054              		.loc 1 276 6 view .LVU251
 1055 0022 00B9     		cbnz	r0, .L65
 284:Core/Src/main.c **** 
 1056              		.loc 1 284 1 view .LVU252
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 46


 1057 0024 08BD     		pop	{r3, pc}
 1058              	.L65:
 278:Core/Src/main.c ****   }
 1059              		.loc 1 278 5 is_stmt 1 view .LVU253
 1060 0026 FFF7FEFF 		bl	Error_Handler
 1061              	.LVL65:
 1062              	.L67:
 1063 002a 00BF     		.align	2
 1064              	.L66:
 1065 002c 00000000 		.word	.LANCHOR1
 1066 0030 00440040 		.word	1073759232
 1067              		.cfi_endproc
 1068              	.LFE140:
 1070              		.section	.text.SystemClock_Config,"ax",%progbits
 1071              		.align	1
 1072              		.global	SystemClock_Config
 1073              		.syntax unified
 1074              		.thumb
 1075              		.thumb_func
 1076              		.fpu fpv4-sp-d16
 1078              	SystemClock_Config:
 1079              	.LFB138:
 180:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1080              		.loc 1 180 1 view -0
 1081              		.cfi_startproc
 1082              		@ args = 0, pretend = 0, frame = 80
 1083              		@ frame_needed = 0, uses_anonymous_args = 0
 1084 0000 00B5     		push	{lr}
 1085              	.LCFI28:
 1086              		.cfi_def_cfa_offset 4
 1087              		.cfi_offset 14, -4
 1088 0002 95B0     		sub	sp, sp, #84
 1089              	.LCFI29:
 1090              		.cfi_def_cfa_offset 88
 181:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1091              		.loc 1 181 3 view .LVU255
 181:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1092              		.loc 1 181 22 is_stmt 0 view .LVU256
 1093 0004 3022     		movs	r2, #48
 1094 0006 0021     		movs	r1, #0
 1095 0008 08A8     		add	r0, sp, #32
 1096 000a FFF7FEFF 		bl	memset
 1097              	.LVL66:
 182:Core/Src/main.c **** 
 1098              		.loc 1 182 3 is_stmt 1 view .LVU257
 182:Core/Src/main.c **** 
 1099              		.loc 1 182 22 is_stmt 0 view .LVU258
 1100 000e 0023     		movs	r3, #0
 1101 0010 0393     		str	r3, [sp, #12]
 1102 0012 0493     		str	r3, [sp, #16]
 1103 0014 0593     		str	r3, [sp, #20]
 1104 0016 0693     		str	r3, [sp, #24]
 1105 0018 0793     		str	r3, [sp, #28]
 186:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1106              		.loc 1 186 3 is_stmt 1 view .LVU259
 1107              	.LBB14:
 186:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 47


 1108              		.loc 1 186 3 view .LVU260
 1109 001a 0193     		str	r3, [sp, #4]
 186:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1110              		.loc 1 186 3 view .LVU261
 1111 001c 1E4A     		ldr	r2, .L74
 1112 001e 116C     		ldr	r1, [r2, #64]
 1113 0020 41F08051 		orr	r1, r1, #268435456
 1114 0024 1164     		str	r1, [r2, #64]
 186:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1115              		.loc 1 186 3 view .LVU262
 1116 0026 126C     		ldr	r2, [r2, #64]
 1117 0028 02F08052 		and	r2, r2, #268435456
 1118 002c 0192     		str	r2, [sp, #4]
 186:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1119              		.loc 1 186 3 view .LVU263
 1120 002e 019A     		ldr	r2, [sp, #4]
 1121              	.LBE14:
 186:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1122              		.loc 1 186 3 view .LVU264
 187:Core/Src/main.c **** 
 1123              		.loc 1 187 3 view .LVU265
 1124              	.LBB15:
 187:Core/Src/main.c **** 
 1125              		.loc 1 187 3 view .LVU266
 1126 0030 0293     		str	r3, [sp, #8]
 187:Core/Src/main.c **** 
 1127              		.loc 1 187 3 view .LVU267
 1128 0032 1A4B     		ldr	r3, .L74+4
 1129 0034 1A68     		ldr	r2, [r3]
 1130 0036 42F48042 		orr	r2, r2, #16384
 1131 003a 1A60     		str	r2, [r3]
 187:Core/Src/main.c **** 
 1132              		.loc 1 187 3 view .LVU268
 1133 003c 1B68     		ldr	r3, [r3]
 1134 003e 03F48043 		and	r3, r3, #16384
 1135 0042 0293     		str	r3, [sp, #8]
 187:Core/Src/main.c **** 
 1136              		.loc 1 187 3 view .LVU269
 1137 0044 029B     		ldr	r3, [sp, #8]
 1138              	.LBE15:
 187:Core/Src/main.c **** 
 1139              		.loc 1 187 3 view .LVU270
 192:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1140              		.loc 1 192 3 view .LVU271
 192:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1141              		.loc 1 192 36 is_stmt 0 view .LVU272
 1142 0046 0123     		movs	r3, #1
 1143 0048 0893     		str	r3, [sp, #32]
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1144              		.loc 1 193 3 is_stmt 1 view .LVU273
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1145              		.loc 1 193 30 is_stmt 0 view .LVU274
 1146 004a 4FF48033 		mov	r3, #65536
 1147 004e 0993     		str	r3, [sp, #36]
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1148              		.loc 1 194 3 is_stmt 1 view .LVU275
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 48


 1149              		.loc 1 194 34 is_stmt 0 view .LVU276
 1150 0050 0223     		movs	r3, #2
 1151 0052 0E93     		str	r3, [sp, #56]
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1152              		.loc 1 195 3 is_stmt 1 view .LVU277
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1153              		.loc 1 195 35 is_stmt 0 view .LVU278
 1154 0054 4FF48003 		mov	r3, #4194304
 1155 0058 0F93     		str	r3, [sp, #60]
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1156              		.loc 1 196 3 is_stmt 1 view .LVU279
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1157              		.loc 1 196 30 is_stmt 0 view .LVU280
 1158 005a 0423     		movs	r3, #4
 1159 005c 1093     		str	r3, [sp, #64]
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1160              		.loc 1 197 3 is_stmt 1 view .LVU281
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1161              		.loc 1 197 30 is_stmt 0 view .LVU282
 1162 005e 9022     		movs	r2, #144
 1163 0060 1192     		str	r2, [sp, #68]
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1164              		.loc 1 198 3 is_stmt 1 view .LVU283
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1165              		.loc 1 198 30 is_stmt 0 view .LVU284
 1166 0062 1293     		str	r3, [sp, #72]
 199:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1167              		.loc 1 199 3 is_stmt 1 view .LVU285
 199:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1168              		.loc 1 199 30 is_stmt 0 view .LVU286
 1169 0064 1393     		str	r3, [sp, #76]
 200:Core/Src/main.c ****   {
 1170              		.loc 1 200 3 is_stmt 1 view .LVU287
 200:Core/Src/main.c ****   {
 1171              		.loc 1 200 7 is_stmt 0 view .LVU288
 1172 0066 08A8     		add	r0, sp, #32
 1173 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1174              	.LVL67:
 200:Core/Src/main.c ****   {
 1175              		.loc 1 200 6 view .LVU289
 1176 006c 80B9     		cbnz	r0, .L72
 207:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1177              		.loc 1 207 3 is_stmt 1 view .LVU290
 207:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1178              		.loc 1 207 31 is_stmt 0 view .LVU291
 1179 006e 0F23     		movs	r3, #15
 1180 0070 0393     		str	r3, [sp, #12]
 209:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1181              		.loc 1 209 3 is_stmt 1 view .LVU292
 209:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1182              		.loc 1 209 34 is_stmt 0 view .LVU293
 1183 0072 0221     		movs	r1, #2
 1184 0074 0491     		str	r1, [sp, #16]
 210:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1185              		.loc 1 210 3 is_stmt 1 view .LVU294
 210:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1186              		.loc 1 210 35 is_stmt 0 view .LVU295
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 49


 1187 0076 0023     		movs	r3, #0
 1188 0078 0593     		str	r3, [sp, #20]
 211:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1189              		.loc 1 211 3 is_stmt 1 view .LVU296
 211:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1190              		.loc 1 211 36 is_stmt 0 view .LVU297
 1191 007a 4FF48052 		mov	r2, #4096
 1192 007e 0692     		str	r2, [sp, #24]
 212:Core/Src/main.c **** 
 1193              		.loc 1 212 3 is_stmt 1 view .LVU298
 212:Core/Src/main.c **** 
 1194              		.loc 1 212 36 is_stmt 0 view .LVU299
 1195 0080 0793     		str	r3, [sp, #28]
 214:Core/Src/main.c ****   {
 1196              		.loc 1 214 3 is_stmt 1 view .LVU300
 214:Core/Src/main.c ****   {
 1197              		.loc 1 214 7 is_stmt 0 view .LVU301
 1198 0082 03A8     		add	r0, sp, #12
 1199 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1200              	.LVL68:
 214:Core/Src/main.c ****   {
 1201              		.loc 1 214 6 view .LVU302
 1202 0088 20B9     		cbnz	r0, .L73
 218:Core/Src/main.c **** 
 1203              		.loc 1 218 1 view .LVU303
 1204 008a 15B0     		add	sp, sp, #84
 1205              	.LCFI30:
 1206              		.cfi_remember_state
 1207              		.cfi_def_cfa_offset 4
 1208              		@ sp needed
 1209 008c 5DF804FB 		ldr	pc, [sp], #4
 1210              	.L72:
 1211              	.LCFI31:
 1212              		.cfi_restore_state
 202:Core/Src/main.c ****   }
 1213              		.loc 1 202 5 is_stmt 1 view .LVU304
 1214 0090 FFF7FEFF 		bl	Error_Handler
 1215              	.LVL69:
 1216              	.L73:
 216:Core/Src/main.c ****   }
 1217              		.loc 1 216 5 view .LVU305
 1218 0094 FFF7FEFF 		bl	Error_Handler
 1219              	.LVL70:
 1220              	.L75:
 1221              		.align	2
 1222              	.L74:
 1223 0098 00380240 		.word	1073887232
 1224 009c 00700040 		.word	1073770496
 1225              		.cfi_endproc
 1226              	.LFE138:
 1228              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1229              		.align	2
 1230              	.LC5:
 1231 0000 25730A00 		.ascii	"%s\012\000"
 1232              		.align	2
 1233              	.LC6:
 1234 0004 31323334 		.ascii	"1234567\015\012\000"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 50


 1234      3536370D 
 1234      0A00
 1235              		.section	.text.main,"ax",%progbits
 1236              		.align	1
 1237              		.global	main
 1238              		.syntax unified
 1239              		.thumb
 1240              		.thumb_func
 1241              		.fpu fpv4-sp-d16
 1243              	main:
 1244              	.LFB137:
  92:Core/Src/main.c **** 
 1245              		.loc 1 92 1 view -0
 1246              		.cfi_startproc
 1247              		@ args = 0, pretend = 0, frame = 16
 1248              		@ frame_needed = 0, uses_anonymous_args = 0
 1249 0000 70B5     		push	{r4, r5, r6, lr}
 1250              	.LCFI32:
 1251              		.cfi_def_cfa_offset 16
 1252              		.cfi_offset 4, -16
 1253              		.cfi_offset 5, -12
 1254              		.cfi_offset 6, -8
 1255              		.cfi_offset 14, -4
 1256 0002 86B0     		sub	sp, sp, #24
 1257              	.LCFI33:
 1258              		.cfi_def_cfa_offset 40
 101:Core/Src/main.c **** 
 1259              		.loc 1 101 3 view .LVU307
 1260 0004 FFF7FEFF 		bl	HAL_Init
 1261              	.LVL71:
 108:Core/Src/main.c **** 
 1262              		.loc 1 108 3 view .LVU308
 1263 0008 FFF7FEFF 		bl	SystemClock_Config
 1264              	.LVL72:
 115:Core/Src/main.c ****   MX_USART1_UART_Init();
 1265              		.loc 1 115 3 view .LVU309
 1266 000c FFF7FEFF 		bl	MX_GPIO_Init
 1267              	.LVL73:
 116:Core/Src/main.c ****   MX_USART2_UART_Init();
 1268              		.loc 1 116 3 view .LVU310
 1269 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 1270              	.LVL74:
 117:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1271              		.loc 1 117 3 view .LVU311
 1272 0014 FFF7FEFF 		bl	MX_USART2_UART_Init
 1273              	.LVL75:
 120:Core/Src/main.c ****   memset(yahdlc_send_frame, 0, 256);
 1274              		.loc 1 120 3 view .LVU312
 1275 0018 0122     		movs	r2, #1
 1276 001a 3249     		ldr	r1, .L83
 1277 001c 3248     		ldr	r0, .L83+4
 1278 001e FFF7FEFF 		bl	HAL_UART_Receive_IT
 1279              	.LVL76:
 121:Core/Src/main.c ****   tc_add();
 1280              		.loc 1 121 3 view .LVU313
 1281 0022 324D     		ldr	r5, .L83+8
 1282 0024 4FF48076 		mov	r6, #256
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 51


 1283 0028 3246     		mov	r2, r6
 1284 002a 0021     		movs	r1, #0
 1285 002c 2846     		mov	r0, r5
 1286 002e FFF7FEFF 		bl	memset
 1287              	.LVL77:
 122:Core/Src/main.c ****   debug_printf("%s\n",yahdlc_send_frame);
 1288              		.loc 1 122 3 view .LVU314
 1289 0032 FFF7FEFF 		bl	tc_add
 1290              	.LVL78:
 123:Core/Src/main.c ****   memset(yahdlc_send_frame, 0, 256);
 1291              		.loc 1 123 3 view .LVU315
 1292 0036 2E4C     		ldr	r4, .L83+12
 1293 0038 2946     		mov	r1, r5
 1294 003a 2046     		mov	r0, r4
 1295 003c FFF7FEFF 		bl	debug_printf
 1296              	.LVL79:
 124:Core/Src/main.c ****   tc_subtract();
 1297              		.loc 1 124 3 view .LVU316
 1298 0040 3246     		mov	r2, r6
 1299 0042 0021     		movs	r1, #0
 1300 0044 2846     		mov	r0, r5
 1301 0046 FFF7FEFF 		bl	memset
 1302              	.LVL80:
 125:Core/Src/main.c ****   debug_printf("%s\n",yahdlc_send_frame);
 1303              		.loc 1 125 3 view .LVU317
 1304 004a FFF7FEFF 		bl	tc_subtract
 1305              	.LVL81:
 126:Core/Src/main.c ****   memset(yahdlc_send_frame, 0, 256);
 1306              		.loc 1 126 3 view .LVU318
 1307 004e 2946     		mov	r1, r5
 1308 0050 2046     		mov	r0, r4
 1309 0052 FFF7FEFF 		bl	debug_printf
 1310              	.LVL82:
 127:Core/Src/main.c ****   tc_multiply();
 1311              		.loc 1 127 3 view .LVU319
 1312 0056 3246     		mov	r2, r6
 1313 0058 0021     		movs	r1, #0
 1314 005a 2846     		mov	r0, r5
 1315 005c FFF7FEFF 		bl	memset
 1316              	.LVL83:
 128:Core/Src/main.c ****   debug_printf("%s\n",yahdlc_send_frame);
 1317              		.loc 1 128 3 view .LVU320
 1318 0060 FFF7FEFF 		bl	tc_multiply
 1319              	.LVL84:
 129:Core/Src/main.c ****   memset(yahdlc_send_frame, 0, 256);
 1320              		.loc 1 129 3 view .LVU321
 1321 0064 2946     		mov	r1, r5
 1322 0066 2046     		mov	r0, r4
 1323 0068 FFF7FEFF 		bl	debug_printf
 1324              	.LVL85:
 130:Core/Src/main.c ****   tc_divide();
 1325              		.loc 1 130 3 view .LVU322
 1326 006c 3246     		mov	r2, r6
 1327 006e 0021     		movs	r1, #0
 1328 0070 2846     		mov	r0, r5
 1329 0072 FFF7FEFF 		bl	memset
 1330              	.LVL86:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 52


 131:Core/Src/main.c ****   debug_printf("%s\n",yahdlc_send_frame);
 1331              		.loc 1 131 3 view .LVU323
 1332 0076 FFF7FEFF 		bl	tc_divide
 1333              	.LVL87:
 132:Core/Src/main.c **** 
 1334              		.loc 1 132 3 view .LVU324
 1335 007a 2946     		mov	r1, r5
 1336 007c 2046     		mov	r0, r4
 1337 007e FFF7FEFF 		bl	debug_printf
 1338              	.LVL88:
 134:Core/Src/main.c **** 
 1339              		.loc 1 134 3 view .LVU325
 136:Core/Src/main.c **** 
 1340              		.loc 1 136 3 view .LVU326
 1341 0082 1C48     		ldr	r0, .L83+16
 1342 0084 FFF7FEFF 		bl	yahdlc_set_state
 1343              	.LVL89:
 138:Core/Src/main.c ****   control.seq_no = 0;
 1344              		.loc 1 138 3 view .LVU327
 138:Core/Src/main.c ****   control.seq_no = 0;
 1345              		.loc 1 138 17 is_stmt 0 view .LVU328
 1346 0088 1B4E     		ldr	r6, .L83+20
 1347 008a 0024     		movs	r4, #0
 1348 008c 3470     		strb	r4, [r6]
 139:Core/Src/main.c **** 
 1349              		.loc 1 139 3 is_stmt 1 view .LVU329
 139:Core/Src/main.c **** 
 1350              		.loc 1 139 18 is_stmt 0 view .LVU330
 1351 008e 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 1352 0090 64F30203 		bfi	r3, r4, #0, #3
 1353 0094 7370     		strb	r3, [r6, #1]
 141:Core/Src/main.c ****   int frame_len;
 1354              		.loc 1 141 3 is_stmt 1 view .LVU331
 141:Core/Src/main.c ****   int frame_len;
 1355              		.loc 1 141 11 is_stmt 0 view .LVU332
 1356 0096 194A     		ldr	r2, .L83+24
 1357 0098 03AB     		add	r3, sp, #12
 1358 009a 07CA     		ldm	r2, {r0, r1, r2}
 1359 009c 03C3     		stmia	r3!, {r0, r1}
 1360 009e 1A80     		strh	r2, [r3]	@ movhi
 142:Core/Src/main.c **** 
 1361              		.loc 1 142 3 is_stmt 1 view .LVU333
 144:Core/Src/main.c ****   for(int i=0; i<frame_len; i++)
 1362              		.loc 1 144 3 view .LVU334
 1363 00a0 02AB     		add	r3, sp, #8
 1364 00a2 0093     		str	r3, [sp]
 1365 00a4 2B46     		mov	r3, r5
 1366 00a6 0922     		movs	r2, #9
 1367 00a8 03A9     		add	r1, sp, #12
 1368 00aa 3046     		mov	r0, r6
 1369 00ac FFF7FEFF 		bl	yahdlc_frame_data
 1370              	.LVL90:
 145:Core/Src/main.c ****   {
 1371              		.loc 1 145 3 view .LVU335
 1372              	.LBB16:
 145:Core/Src/main.c ****   {
 1373              		.loc 1 145 7 view .LVU336
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 53


 145:Core/Src/main.c ****   {
 1374              		.loc 1 145 3 is_stmt 0 view .LVU337
 1375 00b0 04E0     		b	.L77
 1376              	.LVL91:
 1377              	.L78:
 148:Core/Src/main.c ****   }
 1378              		.loc 1 148 5 is_stmt 1 discriminator 3 view .LVU338
 1379 00b2 0E4B     		ldr	r3, .L83+8
 1380 00b4 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 1381 00b6 FFF7FEFF 		bl	uart_sendchar
 1382              	.LVL92:
 145:Core/Src/main.c ****   {
 1383              		.loc 1 145 29 discriminator 3 view .LVU339
 145:Core/Src/main.c ****   {
 1384              		.loc 1 145 30 is_stmt 0 discriminator 3 view .LVU340
 1385 00ba 0134     		adds	r4, r4, #1
 1386              	.LVL93:
 1387              	.L77:
 145:Core/Src/main.c ****   {
 1388              		.loc 1 145 16 is_stmt 1 discriminator 1 view .LVU341
 145:Core/Src/main.c ****   {
 1389              		.loc 1 145 17 is_stmt 0 discriminator 1 view .LVU342
 1390 00bc 029B     		ldr	r3, [sp, #8]
 145:Core/Src/main.c ****   {
 1391              		.loc 1 145 3 discriminator 1 view .LVU343
 1392 00be A342     		cmp	r3, r4
 1393 00c0 F7DC     		bgt	.L78
 1394 00c2 09E0     		b	.L80
 1395              	.L82:
 1396              	.LBE16:
 161:Core/Src/main.c ****       delaytimer = 1000;
 1397              		.loc 1 161 7 is_stmt 1 view .LVU344
 1398 00c4 4021     		movs	r1, #64
 1399 00c6 0E48     		ldr	r0, .L83+28
 1400 00c8 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1401              	.LVL94:
 162:Core/Src/main.c ****       // for(int i=0; i<frame_len; i++)
 1402              		.loc 1 162 7 view .LVU345
 162:Core/Src/main.c ****       // for(int i=0; i<frame_len; i++)
 1403              		.loc 1 162 18 is_stmt 0 view .LVU346
 1404 00cc 0D4B     		ldr	r3, .L83+32
 1405 00ce 4FF47A72 		mov	r2, #1000
 1406 00d2 1A80     		strh	r2, [r3]	@ movhi
 1407              	.L79:
 169:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 1408              		.loc 1 169 5 is_stmt 1 view .LVU347
 1409 00d4 FFF7FEFF 		bl	ProcessDataFromUART
 1410              	.LVL95:
 156:Core/Src/main.c ****   {
 1411              		.loc 1 156 9 view .LVU348
 1412              	.L80:
 156:Core/Src/main.c ****   {
 1413              		.loc 1 156 3 view .LVU349
 159:Core/Src/main.c ****     {
 1414              		.loc 1 159 5 view .LVU350
 159:Core/Src/main.c ****     {
 1415              		.loc 1 159 19 is_stmt 0 view .LVU351
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 54


 1416 00d8 0A4B     		ldr	r3, .L83+32
 1417 00da 1B88     		ldrh	r3, [r3]
 159:Core/Src/main.c ****     {
 1418              		.loc 1 159 7 view .LVU352
 1419 00dc 002B     		cmp	r3, #0
 1420 00de F1D0     		beq	.L82
 1421 00e0 F8E7     		b	.L79
 1422              	.L84:
 1423 00e2 00BF     		.align	2
 1424              	.L83:
 1425 00e4 00000000 		.word	.LANCHOR3
 1426 00e8 00000000 		.word	.LANCHOR0
 1427 00ec 00000000 		.word	.LANCHOR8
 1428 00f0 00000000 		.word	.LC5
 1429 00f4 00000000 		.word	.LANCHOR9
 1430 00f8 00000000 		.word	.LANCHOR7
 1431 00fc 04000000 		.word	.LC6
 1432 0100 00000240 		.word	1073872896
 1433 0104 00000000 		.word	.LANCHOR10
 1434              		.cfi_endproc
 1435              	.LFE137:
 1437              		.global	state
 1438              		.global	t
 1439              		.global	buf_rx
 1440              		.global	data_rx
 1441              		.global	yahdlc_send_frame
 1442              		.global	control
 1443              		.global	newReceive
 1444              		.global	delaytimer
 1445              		.global	timeoutReceive
 1446              		.global	huart2
 1447              		.global	huart1
 1448              		.section	.bss.buf_rx,"aw",%nobits
 1449              		.align	2
 1450              		.set	.LANCHOR4,. + 0
 1453              	buf_rx:
 1454 0000 00000000 		.space	256
 1454      00000000 
 1454      00000000 
 1454      00000000 
 1454      00000000 
 1455              		.section	.bss.control,"aw",%nobits
 1456              		.align	2
 1457              		.set	.LANCHOR7,. + 0
 1460              	control:
 1461 0000 0000     		.space	2
 1462              		.section	.bss.data_rx,"aw",%nobits
 1463              		.align	2
 1464              		.set	.LANCHOR3,. + 0
 1467              	data_rx:
 1468 0000 0000     		.space	2
 1469              		.section	.bss.huart1,"aw",%nobits
 1470              		.align	2
 1471              		.set	.LANCHOR0,. + 0
 1474              	huart1:
 1475 0000 00000000 		.space	72
 1475      00000000 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 55


 1475      00000000 
 1475      00000000 
 1475      00000000 
 1476              		.section	.bss.huart2,"aw",%nobits
 1477              		.align	2
 1478              		.set	.LANCHOR1,. + 0
 1481              	huart2:
 1482 0000 00000000 		.space	72
 1482      00000000 
 1482      00000000 
 1482      00000000 
 1482      00000000 
 1483              		.section	.bss.newReceive,"aw",%nobits
 1484              		.set	.LANCHOR6,. + 0
 1487              	newReceive:
 1488 0000 00       		.space	1
 1489              		.section	.bss.state,"aw",%nobits
 1490              		.align	2
 1491              		.set	.LANCHOR9,. + 0
 1494              	state:
 1495 0000 00000000 		.space	20
 1495      00000000 
 1495      00000000 
 1495      00000000 
 1495      00000000 
 1496              		.section	.bss.t,"aw",%nobits
 1497              		.align	1
 1498              		.set	.LANCHOR5,. + 0
 1501              	t:
 1502 0000 0000     		.space	2
 1503              		.section	.bss.yahdlc_send_frame,"aw",%nobits
 1504              		.align	2
 1505              		.set	.LANCHOR8,. + 0
 1508              	yahdlc_send_frame:
 1509 0000 00000000 		.space	256
 1509      00000000 
 1509      00000000 
 1509      00000000 
 1509      00000000 
 1510              		.section	.data.delaytimer,"aw"
 1511              		.align	1
 1512              		.set	.LANCHOR10,. + 0
 1515              	delaytimer:
 1516 0000 E803     		.short	1000
 1517              		.section	.data.timeoutReceive,"aw"
 1518              		.align	1
 1519              		.set	.LANCHOR2,. + 0
 1522              	timeoutReceive:
 1523 0000 4600     		.short	70
 1524              		.text
 1525              	.Letext0:
 1526              		.file 3 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\includ
 1527              		.file 4 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\includ
 1528              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1529              		.file 6 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\lib\\gcc\\arm-none-ea
 1530              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1531              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 56


 1532              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1533              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1534              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1535              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1536              		.file 13 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\lib\\gcc\\arm-none-e
 1537              		.file 14 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\inclu
 1538              		.file 15 "Core/test/yahdlc.h"
 1539              		.file 16 "Core/Inc/main.h"
 1540              		.file 17 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\inclu
 1541              		.file 18 "Core/Inc/function_test.h"
 1542              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1543              		.file 20 "<built-in>"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 57


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:25     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:117    .text.MX_GPIO_Init:00000060 $d
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:123    .text.uart_printf:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:130    .text.uart_printf:00000000 uart_printf
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:219    .text.uart_printf:00000040 $d
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:224    .text.uart_sendchar:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:231    .text.uart_sendchar:00000000 uart_sendchar
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:267    .text.uart_sendchar:0000001c $d
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:272    .text.debug_printf:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:279    .text.debug_printf:00000000 debug_printf
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:368    .text.debug_printf:00000040 $d
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:373    .text.debug_sendchar:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:380    .text.debug_sendchar:00000000 debug_sendchar
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:416    .text.debug_sendchar:0000001c $d
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:421    .text.append_char_to_buffer:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:428    .text.append_char_to_buffer:00000000 append_char_to_buffer
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:471    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:478    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:531    .text.HAL_UART_RxCpltCallback:00000034 $d
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:540    .rodata.ProcessDataFromUART.str1.4:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:557    .text.ProcessDataFromUART:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:564    .text.ProcessDataFromUART:00000000 ProcessDataFromUART
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:884    .text.ProcessDataFromUART:0000016c $d
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:898    .text.Error_Handler:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:905    .text.Error_Handler:00000000 Error_Handler
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:937    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:943    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:998    .text.MX_USART1_UART_Init:0000002c $d
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1004   .text.MX_USART2_UART_Init:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1010   .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1065   .text.MX_USART2_UART_Init:0000002c $d
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1071   .text.SystemClock_Config:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1078   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1223   .text.SystemClock_Config:00000098 $d
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1229   .rodata.main.str1.4:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1236   .text.main:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1243   .text.main:00000000 main
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1425   .text.main:000000e4 $d
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1494   .bss.state:00000000 state
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1501   .bss.t:00000000 t
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1453   .bss.buf_rx:00000000 buf_rx
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1467   .bss.data_rx:00000000 data_rx
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1508   .bss.yahdlc_send_frame:00000000 yahdlc_send_frame
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1460   .bss.control:00000000 control
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1487   .bss.newReceive:00000000 newReceive
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1515   .data.delaytimer:00000000 delaytimer
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1522   .data.timeoutReceive:00000000 timeoutReceive
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1481   .bss.huart2:00000000 huart2
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1474   .bss.huart1:00000000 huart1
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1449   .bss.buf_rx:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1456   .bss.control:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1463   .bss.data_rx:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1470   .bss.huart1:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1477   .bss.huart2:00000000 $d
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s 			page 58


C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1488   .bss.newReceive:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1490   .bss.state:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1497   .bss.t:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1504   .bss.yahdlc_send_frame:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1511   .data.delaytimer:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccD1H09Y.s:1518   .data.timeoutReceive:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
vsprintf
HAL_UART_Transmit
strlen
HAL_UART_Receive_IT
memset
yahdlc_get_data
yahdlc_frame_data
strstr
tc_add
HAL_Delay
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
tc_subtract
tc_multiply
tc_divide
yahdlc_set_state
HAL_GPIO_TogglePin
