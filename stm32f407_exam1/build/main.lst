ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB141:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** #include <stdarg.h>
  26:Core/Src/main.c **** #include <string.h>
  27:Core/Src/main.c **** #include <assert.h>
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** #include "unity.h"
  30:Core/Src/main.c **** #include "yahdlc.h"
  31:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** UART_HandleTypeDef huart1;
  50:Core/Src/main.c **** UART_HandleTypeDef huart2;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE BEGIN PV */
  53:Core/Src/main.c **** extern uint16_t timeoutReceive = 70;
  54:Core/Src/main.c **** extern uint16_t delaytimer = 1000;
  55:Core/Src/main.c **** extern uint8_t newReceive = 0;
  56:Core/Src/main.c **** /* USER CODE END PV */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  59:Core/Src/main.c **** void SystemClock_Config(void);
  60:Core/Src/main.c **** static void MX_GPIO_Init(void);
  61:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  62:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  63:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  64:Core/Src/main.c **** int uart_printf(const char *fmt, ...);
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** int add(int a, int b);
  67:Core/Src/main.c **** void test_add(void);
  68:Core/Src/main.c **** void setUp();
  69:Core/Src/main.c **** void tearDown();
  70:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart);
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** extern int debug_printf(const char *fmt, ...);
  73:Core/Src/main.c **** extern void debug_sendchar(const char pdata);
  74:Core/Src/main.c **** void ProcessDataFromUART(void);
  75:Core/Src/main.c **** /* USER CODE END PFP */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  78:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  79:Core/Src/main.c **** uint8_t data_rx[2];
  80:Core/Src/main.c **** uint8_t buf_rx[256];
  81:Core/Src/main.c **** uint16_t t = 0;
  82:Core/Src/main.c **** yahdlc_state_t state;
  83:Core/Src/main.c **** /* USER CODE END 0 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /**
  86:Core/Src/main.c ****   * @brief  The application entry point.
  87:Core/Src/main.c ****   * @retval int
  88:Core/Src/main.c ****   */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 3


  89:Core/Src/main.c **** int main(void)
  90:Core/Src/main.c **** {
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE END 1 */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  99:Core/Src/main.c ****   HAL_Init();
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE END Init */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Configure the system clock */
 106:Core/Src/main.c ****   SystemClock_Config();
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE END SysInit */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* Initialize all configured peripherals */
 113:Core/Src/main.c ****   MX_GPIO_Init();
 114:Core/Src/main.c ****   MX_USART1_UART_Init();
 115:Core/Src/main.c ****   MX_USART2_UART_Init();
 116:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 117:Core/Src/main.c ****   debug_printf("HELLO WORLD!!!\r\n");
 118:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1, data_rx, 1);
 119:Core/Src/main.c ****   UNITY_BEGIN();
 120:Core/Src/main.c ****   RUN_TEST(test_add);
 121:Core/Src/main.c ****   UNITY_END();
 122:Core/Src/main.c ****   char string_buffer[256];
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   yahdlc_set_state(&state);
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   yahdlc_control_t control;
 127:Core/Src/main.c ****   control.frame = YAHDLC_FRAME_DATA;
 128:Core/Src/main.c ****   control.seq_no = 0;
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   uint8_t input_data[] = "654321\r\n";
 131:Core/Src/main.c ****   uint8_t output_frame[256];
 132:Core/Src/main.c ****   int frame_len;
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   yahdlc_frame_data(&control, input_data, sizeof(input_data), output_frame, &frame_len);
 135:Core/Src/main.c ****   for(int i=0; i<frame_len; i++)
 136:Core/Src/main.c ****   {
 137:Core/Src/main.c ****     debug_sendchar(output_frame[i]);
 138:Core/Src/main.c ****     uart_sendchar(output_frame[i]);
 139:Core/Src/main.c ****   }
 140:Core/Src/main.c **** 
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* USER CODE END 2 */
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /* Infinite loop */
 145:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 4


 146:Core/Src/main.c ****   while (1)
 147:Core/Src/main.c ****   {
 148:Core/Src/main.c ****     /* USER CODE END WHILE */
 149:Core/Src/main.c ****     if(delaytimer == 0)
 150:Core/Src/main.c ****     {
 151:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_6);
 152:Core/Src/main.c ****       delaytimer = 1000;
 153:Core/Src/main.c ****       for(int i=0; i<frame_len; i++)
 154:Core/Src/main.c ****       {
 155:Core/Src/main.c ****         uart_sendchar(output_frame[i]);
 156:Core/Src/main.c ****       }
 157:Core/Src/main.c ****     }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****     ProcessDataFromUART();
 160:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 161:Core/Src/main.c ****   }
 162:Core/Src/main.c ****   /* USER CODE END 3 */
 163:Core/Src/main.c **** }
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** /**
 166:Core/Src/main.c ****   * @brief System Clock Configuration
 167:Core/Src/main.c ****   * @retval None
 168:Core/Src/main.c ****   */
 169:Core/Src/main.c **** void SystemClock_Config(void)
 170:Core/Src/main.c **** {
 171:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 172:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 175:Core/Src/main.c ****   */
 176:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 180:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 181:Core/Src/main.c ****   */
 182:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 183:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 190:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 191:Core/Src/main.c ****   {
 192:Core/Src/main.c ****     Error_Handler();
 193:Core/Src/main.c ****   }
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 196:Core/Src/main.c ****   */
 197:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 198:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 199:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 200:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 202:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 5


 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 205:Core/Src/main.c ****   {
 206:Core/Src/main.c ****     Error_Handler();
 207:Core/Src/main.c ****   }
 208:Core/Src/main.c **** }
 209:Core/Src/main.c **** 
 210:Core/Src/main.c **** /**
 211:Core/Src/main.c ****   * @brief USART1 Initialization Function
 212:Core/Src/main.c ****   * @param None
 213:Core/Src/main.c ****   * @retval None
 214:Core/Src/main.c ****   */
 215:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 216:Core/Src/main.c **** {
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 225:Core/Src/main.c ****   huart1.Instance = USART1;
 226:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 227:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 228:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 229:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 230:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 231:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 232:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 233:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 234:Core/Src/main.c ****   {
 235:Core/Src/main.c ****     Error_Handler();
 236:Core/Src/main.c ****   }
 237:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 240:Core/Src/main.c **** 
 241:Core/Src/main.c **** }
 242:Core/Src/main.c **** 
 243:Core/Src/main.c **** /**
 244:Core/Src/main.c ****   * @brief USART2 Initialization Function
 245:Core/Src/main.c ****   * @param None
 246:Core/Src/main.c ****   * @retval None
 247:Core/Src/main.c ****   */
 248:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 249:Core/Src/main.c **** {
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 258:Core/Src/main.c ****   huart2.Instance = USART2;
 259:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 6


 260:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 261:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 262:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 263:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 264:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 265:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 266:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 267:Core/Src/main.c ****   {
 268:Core/Src/main.c ****     Error_Handler();
 269:Core/Src/main.c ****   }
 270:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 273:Core/Src/main.c **** 
 274:Core/Src/main.c **** }
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** /**
 277:Core/Src/main.c ****   * @brief GPIO Initialization Function
 278:Core/Src/main.c ****   * @param None
 279:Core/Src/main.c ****   * @retval None
 280:Core/Src/main.c ****   */
 281:Core/Src/main.c **** static void MX_GPIO_Init(void)
 282:Core/Src/main.c **** {
  28              		.loc 1 282 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 283:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 283 3 view .LVU1
  42              		.loc 1 283 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 284:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 285:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 288:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  49              		.loc 1 288 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 288 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
  53              		.loc 1 288 3 view .LVU5
  54 0012 134B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 7


  56 0016 42F08002 		orr	r2, r2, #128
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 288 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F08002 		and	r2, r2, #128
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 288 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 288 3 view .LVU8
 289:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  66              		.loc 1 289 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 289 3 view .LVU10
  69 0026 0294     		str	r4, [sp, #8]
  70              		.loc 1 289 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F00102 		orr	r2, r2, #1
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 289 3 view .LVU12
  75 0030 1B6B     		ldr	r3, [r3, #48]
  76 0032 03F00103 		and	r3, r3, #1
  77 0036 0293     		str	r3, [sp, #8]
  78              		.loc 1 289 3 view .LVU13
  79 0038 029B     		ldr	r3, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 289 3 view .LVU14
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 292:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, GPIO_PIN_RESET);
  82              		.loc 1 292 3 view .LVU15
  83 003a 0A4D     		ldr	r5, .L3+4
  84 003c 2246     		mov	r2, r4
  85 003e 4021     		movs	r1, #64
  86 0040 2846     		mov	r0, r5
  87 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL0:
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****   /*Configure GPIO pin : PA6 */
 295:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_6;
  89              		.loc 1 295 3 view .LVU16
  90              		.loc 1 295 23 is_stmt 0 view .LVU17
  91 0046 4023     		movs	r3, #64
  92 0048 0393     		str	r3, [sp, #12]
 296:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  93              		.loc 1 296 3 is_stmt 1 view .LVU18
  94              		.loc 1 296 24 is_stmt 0 view .LVU19
  95 004a 0123     		movs	r3, #1
  96 004c 0493     		str	r3, [sp, #16]
 297:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  97              		.loc 1 297 3 is_stmt 1 view .LVU20
  98              		.loc 1 297 24 is_stmt 0 view .LVU21
  99 004e 0594     		str	r4, [sp, #20]
 298:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 100              		.loc 1 298 3 is_stmt 1 view .LVU22
 101              		.loc 1 298 25 is_stmt 0 view .LVU23
 102 0050 0694     		str	r4, [sp, #24]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 8


 299:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 103              		.loc 1 299 3 is_stmt 1 view .LVU24
 104 0052 03A9     		add	r1, sp, #12
 105 0054 2846     		mov	r0, r5
 106 0056 FFF7FEFF 		bl	HAL_GPIO_Init
 107              	.LVL1:
 300:Core/Src/main.c **** 
 301:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 302:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 303:Core/Src/main.c **** }
 108              		.loc 1 303 1 is_stmt 0 view .LVU25
 109 005a 09B0     		add	sp, sp, #36
 110              	.LCFI2:
 111              		.cfi_def_cfa_offset 12
 112              		@ sp needed
 113 005c 30BD     		pop	{r4, r5, pc}
 114              	.L4:
 115 005e 00BF     		.align	2
 116              	.L3:
 117 0060 00380240 		.word	1073887232
 118 0064 00000240 		.word	1073872896
 119              		.cfi_endproc
 120              	.LFE141:
 122              		.section	.text.uart_printf,"ax",%progbits
 123              		.align	1
 124              		.global	uart_printf
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu fpv4-sp-d16
 130              	uart_printf:
 131              	.LVL2:
 132              	.LFB142:
 304:Core/Src/main.c **** 
 305:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 306:Core/Src/main.c **** int uart_printf(const char *fmt, ...)
 307:Core/Src/main.c **** {
 133              		.loc 1 307 1 is_stmt 1 view -0
 134              		.cfi_startproc
 135              		@ args = 4, pretend = 16, frame = 1032
 136              		@ frame_needed = 0, uses_anonymous_args = 1
 137              		.loc 1 307 1 is_stmt 0 view .LVU27
 138 0000 0FB4     		push	{r0, r1, r2, r3}
 139              	.LCFI3:
 140              		.cfi_def_cfa_offset 16
 141              		.cfi_offset 0, -16
 142              		.cfi_offset 1, -12
 143              		.cfi_offset 2, -8
 144              		.cfi_offset 3, -4
 145 0002 30B5     		push	{r4, r5, lr}
 146              	.LCFI4:
 147              		.cfi_def_cfa_offset 28
 148              		.cfi_offset 4, -28
 149              		.cfi_offset 5, -24
 150              		.cfi_offset 14, -20
 151 0004 ADF20C4D 		subw	sp, sp, #1036
 152              	.LCFI5:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 9


 153              		.cfi_def_cfa_offset 1064
 154 0008 0DF58362 		add	r2, sp, #1048
 155 000c 52F8041B 		ldr	r1, [r2], #4
 308:Core/Src/main.c ****   char buf[1024];
 156              		.loc 1 308 3 is_stmt 1 view .LVU28
 309:Core/Src/main.c ****   int len, i;
 157              		.loc 1 309 3 view .LVU29
 310:Core/Src/main.c ****   va_list args;
 158              		.loc 1 310 3 view .LVU30
 311:Core/Src/main.c ****   va_start (args, fmt);
 159              		.loc 1 311 3 view .LVU31
 160 0010 0192     		str	r2, [sp, #4]
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****   len = vsprintf(buf, fmt, args);
 161              		.loc 1 313 3 view .LVU32
 162              		.loc 1 313 9 is_stmt 0 view .LVU33
 163 0012 02A8     		add	r0, sp, #8
 164 0014 FFF7FEFF 		bl	vsprintf
 165              	.LVL3:
 166 0018 0546     		mov	r5, r0
 167              	.LVL4:
 314:Core/Src/main.c ****   for (i=0; i<len; i++)
 168              		.loc 1 314 3 is_stmt 1 view .LVU34
 169              		.loc 1 314 9 is_stmt 0 view .LVU35
 170 001a 0024     		movs	r4, #0
 171              		.loc 1 314 3 view .LVU36
 172 001c 07E0     		b	.L6
 173              	.LVL5:
 174              	.L7:
 315:Core/Src/main.c ****   {
 316:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, &buf[i], sizeof(char), 10);
 175              		.loc 1 316 5 is_stmt 1 discriminator 3 view .LVU37
 176 001e 0A23     		movs	r3, #10
 177 0020 0122     		movs	r2, #1
 178 0022 02A9     		add	r1, sp, #8
 179 0024 2144     		add	r1, r1, r4
 180 0026 0648     		ldr	r0, .L9
 181 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 182              	.LVL6:
 314:Core/Src/main.c ****   for (i=0; i<len; i++)
 183              		.loc 1 314 20 discriminator 3 view .LVU38
 314:Core/Src/main.c ****   for (i=0; i<len; i++)
 184              		.loc 1 314 21 is_stmt 0 discriminator 3 view .LVU39
 185 002c 0134     		adds	r4, r4, #1
 186              	.LVL7:
 187              	.L6:
 314:Core/Src/main.c ****   for (i=0; i<len; i++)
 188              		.loc 1 314 13 is_stmt 1 discriminator 1 view .LVU40
 314:Core/Src/main.c ****   for (i=0; i<len; i++)
 189              		.loc 1 314 3 is_stmt 0 discriminator 1 view .LVU41
 190 002e AC42     		cmp	r4, r5
 191 0030 F5DB     		blt	.L7
 317:Core/Src/main.c ****   }
 318:Core/Src/main.c ****   va_end(args);
 192              		.loc 1 318 3 is_stmt 1 view .LVU42
 319:Core/Src/main.c ****   return len;
 193              		.loc 1 319 3 view .LVU43
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 10


 320:Core/Src/main.c **** }
 194              		.loc 1 320 1 is_stmt 0 view .LVU44
 195 0032 2846     		mov	r0, r5
 196 0034 0DF20C4D 		addw	sp, sp, #1036
 197              	.LCFI6:
 198              		.cfi_def_cfa_offset 28
 199              		@ sp needed
 200 0038 BDE83040 		pop	{r4, r5, lr}
 201              	.LCFI7:
 202              		.cfi_restore 14
 203              		.cfi_restore 5
 204              		.cfi_restore 4
 205              		.cfi_def_cfa_offset 16
 206              	.LVL8:
 207              		.loc 1 320 1 view .LVU45
 208 003c 04B0     		add	sp, sp, #16
 209              	.LCFI8:
 210              		.cfi_restore 3
 211              		.cfi_restore 2
 212              		.cfi_restore 1
 213              		.cfi_restore 0
 214              		.cfi_def_cfa_offset 0
 215 003e 7047     		bx	lr
 216              	.L10:
 217              		.align	2
 218              	.L9:
 219 0040 00000000 		.word	.LANCHOR0
 220              		.cfi_endproc
 221              	.LFE142:
 223              		.section	.text.uart_sendchar,"ax",%progbits
 224              		.align	1
 225              		.global	uart_sendchar
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu fpv4-sp-d16
 231              	uart_sendchar:
 232              	.LVL9:
 233              	.LFB143:
 321:Core/Src/main.c **** 
 322:Core/Src/main.c **** void uart_sendchar(const char pdata)
 323:Core/Src/main.c **** {
 234              		.loc 1 323 1 is_stmt 1 view -0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 8
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		.loc 1 323 1 is_stmt 0 view .LVU47
 239 0000 00B5     		push	{lr}
 240              	.LCFI9:
 241              		.cfi_def_cfa_offset 4
 242              		.cfi_offset 14, -4
 243 0002 83B0     		sub	sp, sp, #12
 244              	.LCFI10:
 245              		.cfi_def_cfa_offset 16
 324:Core/Src/main.c ****   char temp = pdata;
 246              		.loc 1 324 3 is_stmt 1 view .LVU48
 247              		.loc 1 324 8 is_stmt 0 view .LVU49
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 11


 248 0004 8DF80700 		strb	r0, [sp, #7]
 325:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, &temp, sizeof(char), 10);
 249              		.loc 1 325 3 is_stmt 1 view .LVU50
 250 0008 0A23     		movs	r3, #10
 251 000a 0122     		movs	r2, #1
 252 000c 0DF10701 		add	r1, sp, #7
 253 0010 0248     		ldr	r0, .L13
 254              	.LVL10:
 255              		.loc 1 325 3 is_stmt 0 view .LVU51
 256 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 257              	.LVL11:
 326:Core/Src/main.c ****   // if ('\n' == pdata)
 327:Core/Src/main.c ****   // {
 328:Core/Src/main.c ****   //   temp = '\r';
 329:Core/Src/main.c ****   //   HAL_UART_Transmit(&huart1, &temp, sizeof(char), 10);
 330:Core/Src/main.c ****   // }
 331:Core/Src/main.c **** }
 258              		.loc 1 331 1 view .LVU52
 259 0016 03B0     		add	sp, sp, #12
 260              	.LCFI11:
 261              		.cfi_def_cfa_offset 4
 262              		@ sp needed
 263 0018 5DF804FB 		ldr	pc, [sp], #4
 264              	.L14:
 265              		.align	2
 266              	.L13:
 267 001c 00000000 		.word	.LANCHOR0
 268              		.cfi_endproc
 269              	.LFE143:
 271              		.section	.text.debug_printf,"ax",%progbits
 272              		.align	1
 273              		.global	debug_printf
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 277              		.fpu fpv4-sp-d16
 279              	debug_printf:
 280              	.LVL12:
 281              	.LFB144:
 332:Core/Src/main.c **** 
 333:Core/Src/main.c **** int debug_printf(const char *fmt, ...)
 334:Core/Src/main.c **** {
 282              		.loc 1 334 1 is_stmt 1 view -0
 283              		.cfi_startproc
 284              		@ args = 4, pretend = 16, frame = 1032
 285              		@ frame_needed = 0, uses_anonymous_args = 1
 286              		.loc 1 334 1 is_stmt 0 view .LVU54
 287 0000 0FB4     		push	{r0, r1, r2, r3}
 288              	.LCFI12:
 289              		.cfi_def_cfa_offset 16
 290              		.cfi_offset 0, -16
 291              		.cfi_offset 1, -12
 292              		.cfi_offset 2, -8
 293              		.cfi_offset 3, -4
 294 0002 30B5     		push	{r4, r5, lr}
 295              	.LCFI13:
 296              		.cfi_def_cfa_offset 28
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 12


 297              		.cfi_offset 4, -28
 298              		.cfi_offset 5, -24
 299              		.cfi_offset 14, -20
 300 0004 ADF20C4D 		subw	sp, sp, #1036
 301              	.LCFI14:
 302              		.cfi_def_cfa_offset 1064
 303 0008 0DF58362 		add	r2, sp, #1048
 304 000c 52F8041B 		ldr	r1, [r2], #4
 335:Core/Src/main.c ****   char buf[1024];
 305              		.loc 1 335 3 is_stmt 1 view .LVU55
 336:Core/Src/main.c ****   int len, i;
 306              		.loc 1 336 3 view .LVU56
 337:Core/Src/main.c ****   va_list args;
 307              		.loc 1 337 3 view .LVU57
 338:Core/Src/main.c ****   va_start (args, fmt);
 308              		.loc 1 338 3 view .LVU58
 309 0010 0192     		str	r2, [sp, #4]
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   len = vsprintf(buf, fmt, args);
 310              		.loc 1 340 3 view .LVU59
 311              		.loc 1 340 9 is_stmt 0 view .LVU60
 312 0012 02A8     		add	r0, sp, #8
 313 0014 FFF7FEFF 		bl	vsprintf
 314              	.LVL13:
 315 0018 0546     		mov	r5, r0
 316              	.LVL14:
 341:Core/Src/main.c ****   for (i=0; i<len; i++)
 317              		.loc 1 341 3 is_stmt 1 view .LVU61
 318              		.loc 1 341 9 is_stmt 0 view .LVU62
 319 001a 0024     		movs	r4, #0
 320              		.loc 1 341 3 view .LVU63
 321 001c 07E0     		b	.L16
 322              	.LVL15:
 323              	.L17:
 342:Core/Src/main.c ****   {
 343:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, &buf[i], sizeof(char), 10);
 324              		.loc 1 343 5 is_stmt 1 discriminator 3 view .LVU64
 325 001e 0A23     		movs	r3, #10
 326 0020 0122     		movs	r2, #1
 327 0022 02A9     		add	r1, sp, #8
 328 0024 2144     		add	r1, r1, r4
 329 0026 0648     		ldr	r0, .L19
 330 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 331              	.LVL16:
 341:Core/Src/main.c ****   for (i=0; i<len; i++)
 332              		.loc 1 341 20 discriminator 3 view .LVU65
 341:Core/Src/main.c ****   for (i=0; i<len; i++)
 333              		.loc 1 341 21 is_stmt 0 discriminator 3 view .LVU66
 334 002c 0134     		adds	r4, r4, #1
 335              	.LVL17:
 336              	.L16:
 341:Core/Src/main.c ****   for (i=0; i<len; i++)
 337              		.loc 1 341 13 is_stmt 1 discriminator 1 view .LVU67
 341:Core/Src/main.c ****   for (i=0; i<len; i++)
 338              		.loc 1 341 3 is_stmt 0 discriminator 1 view .LVU68
 339 002e AC42     		cmp	r4, r5
 340 0030 F5DB     		blt	.L17
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 13


 344:Core/Src/main.c ****   }
 345:Core/Src/main.c ****   va_end(args);
 341              		.loc 1 345 3 is_stmt 1 view .LVU69
 346:Core/Src/main.c ****   return len;
 342              		.loc 1 346 3 view .LVU70
 347:Core/Src/main.c **** }
 343              		.loc 1 347 1 is_stmt 0 view .LVU71
 344 0032 2846     		mov	r0, r5
 345 0034 0DF20C4D 		addw	sp, sp, #1036
 346              	.LCFI15:
 347              		.cfi_def_cfa_offset 28
 348              		@ sp needed
 349 0038 BDE83040 		pop	{r4, r5, lr}
 350              	.LCFI16:
 351              		.cfi_restore 14
 352              		.cfi_restore 5
 353              		.cfi_restore 4
 354              		.cfi_def_cfa_offset 16
 355              	.LVL18:
 356              		.loc 1 347 1 view .LVU72
 357 003c 04B0     		add	sp, sp, #16
 358              	.LCFI17:
 359              		.cfi_restore 3
 360              		.cfi_restore 2
 361              		.cfi_restore 1
 362              		.cfi_restore 0
 363              		.cfi_def_cfa_offset 0
 364 003e 7047     		bx	lr
 365              	.L20:
 366              		.align	2
 367              	.L19:
 368 0040 00000000 		.word	.LANCHOR1
 369              		.cfi_endproc
 370              	.LFE144:
 372              		.section	.text.debug_sendchar,"ax",%progbits
 373              		.align	1
 374              		.global	debug_sendchar
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu fpv4-sp-d16
 380              	debug_sendchar:
 381              	.LVL19:
 382              	.LFB145:
 348:Core/Src/main.c **** 
 349:Core/Src/main.c **** void debug_sendchar(const char pdata)
 350:Core/Src/main.c **** {
 383              		.loc 1 350 1 is_stmt 1 view -0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 8
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387              		.loc 1 350 1 is_stmt 0 view .LVU74
 388 0000 00B5     		push	{lr}
 389              	.LCFI18:
 390              		.cfi_def_cfa_offset 4
 391              		.cfi_offset 14, -4
 392 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 14


 393              	.LCFI19:
 394              		.cfi_def_cfa_offset 16
 351:Core/Src/main.c ****   char temp = pdata;
 395              		.loc 1 351 3 is_stmt 1 view .LVU75
 396              		.loc 1 351 8 is_stmt 0 view .LVU76
 397 0004 8DF80700 		strb	r0, [sp, #7]
 352:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, &temp, sizeof(char), 10);
 398              		.loc 1 352 3 is_stmt 1 view .LVU77
 399 0008 0A23     		movs	r3, #10
 400 000a 0122     		movs	r2, #1
 401 000c 0DF10701 		add	r1, sp, #7
 402 0010 0248     		ldr	r0, .L23
 403              	.LVL20:
 404              		.loc 1 352 3 is_stmt 0 view .LVU78
 405 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 406              	.LVL21:
 353:Core/Src/main.c ****   // if ('\n' == pdata)
 354:Core/Src/main.c ****   // {
 355:Core/Src/main.c ****   //   temp = '\r';
 356:Core/Src/main.c ****   //   HAL_UART_Transmit(&huart1, &temp, sizeof(char), 10);
 357:Core/Src/main.c ****   // }
 358:Core/Src/main.c **** }
 407              		.loc 1 358 1 view .LVU79
 408 0016 03B0     		add	sp, sp, #12
 409              	.LCFI20:
 410              		.cfi_def_cfa_offset 4
 411              		@ sp needed
 412 0018 5DF804FB 		ldr	pc, [sp], #4
 413              	.L24:
 414              		.align	2
 415              	.L23:
 416 001c 00000000 		.word	.LANCHOR1
 417              		.cfi_endproc
 418              	.LFE145:
 420              		.section	.text.add,"ax",%progbits
 421              		.align	1
 422              		.global	add
 423              		.syntax unified
 424              		.thumb
 425              		.thumb_func
 426              		.fpu fpv4-sp-d16
 428              	add:
 429              	.LVL22:
 430              	.LFB146:
 359:Core/Src/main.c **** 
 360:Core/Src/main.c **** int add(int a, int b){
 431              		.loc 1 360 22 is_stmt 1 view -0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435              		@ link register save eliminated.
 361:Core/Src/main.c ****     return a + b;
 436              		.loc 1 361 5 view .LVU81
 362:Core/Src/main.c **** }
 437              		.loc 1 362 1 is_stmt 0 view .LVU82
 438 0000 0844     		add	r0, r0, r1
 439              	.LVL23:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 15


 440              		.loc 1 362 1 view .LVU83
 441 0002 7047     		bx	lr
 442              		.cfi_endproc
 443              	.LFE146:
 445              		.section	.text.test_add,"ax",%progbits
 446              		.align	1
 447              		.global	test_add
 448              		.syntax unified
 449              		.thumb
 450              		.thumb_func
 451              		.fpu fpv4-sp-d16
 453              	test_add:
 454              	.LFB147:
 363:Core/Src/main.c **** 
 364:Core/Src/main.c **** void test_add(void){
 455              		.loc 1 364 20 is_stmt 1 view -0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 0
 458              		@ frame_needed = 0, uses_anonymous_args = 0
 459 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 460              	.LCFI21:
 461              		.cfi_def_cfa_offset 24
 462              		.cfi_offset 4, -24
 463              		.cfi_offset 5, -20
 464              		.cfi_offset 6, -16
 465              		.cfi_offset 7, -12
 466              		.cfi_offset 8, -8
 467              		.cfi_offset 14, -4
 468 0004 82B0     		sub	sp, sp, #8
 469              	.LCFI22:
 470              		.cfi_def_cfa_offset 32
 365:Core/Src/main.c ****     for(int i=0; i<9; i++){
 471              		.loc 1 365 5 view .LVU85
 472              	.LBB6:
 473              		.loc 1 365 9 view .LVU86
 474              	.LVL24:
 475              		.loc 1 365 13 is_stmt 0 view .LVU87
 476 0006 4FF00008 		mov	r8, #0
 477              		.loc 1 365 5 view .LVU88
 478 000a 1CE0     		b	.L27
 479              	.LVL25:
 480              	.L28:
 481              	.LBB7:
 366:Core/Src/main.c ****         for(int j=0; j<9; j++){
 367:Core/Src/main.c ****             TEST_ASSERT_EQUAL_INT((i+j), add(i,j));
 482              		.loc 1 367 13 is_stmt 1 discriminator 3 view .LVU89
 483 000c 08EB0406 		add	r6, r8, r4
 484 0010 2146     		mov	r1, r4
 485 0012 4046     		mov	r0, r8
 486 0014 FFF7FEFF 		bl	add
 487              	.LVL26:
 488 0018 0546     		mov	r5, r0
 489 001a 1427     		movs	r7, #20
 490 001c 0097     		str	r7, [sp]
 491 001e 40F26F13 		movw	r3, #367
 492 0022 0022     		movs	r2, #0
 493 0024 0146     		mov	r1, r0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 16


 494 0026 3046     		mov	r0, r6
 495 0028 FFF7FEFF 		bl	UnityAssertEqualNumber
 496              	.LVL27:
 368:Core/Src/main.c ****             TEST_ASSERT_EQUAL_INT((i+j+1), add(i,j));
 497              		.loc 1 368 13 discriminator 3 view .LVU90
 498 002c 0097     		str	r7, [sp]
 499 002e 4FF4B873 		mov	r3, #368
 500 0032 0022     		movs	r2, #0
 501 0034 2946     		mov	r1, r5
 502 0036 701C     		adds	r0, r6, #1
 503 0038 FFF7FEFF 		bl	UnityAssertEqualNumber
 504              	.LVL28:
 366:Core/Src/main.c ****         for(int j=0; j<9; j++){
 505              		.loc 1 366 27 discriminator 3 view .LVU91
 366:Core/Src/main.c ****         for(int j=0; j<9; j++){
 506              		.loc 1 366 28 is_stmt 0 discriminator 3 view .LVU92
 507 003c 0134     		adds	r4, r4, #1
 508              	.LVL29:
 509              	.L29:
 366:Core/Src/main.c ****         for(int j=0; j<9; j++){
 510              		.loc 1 366 22 is_stmt 1 discriminator 1 view .LVU93
 366:Core/Src/main.c ****         for(int j=0; j<9; j++){
 511              		.loc 1 366 9 is_stmt 0 discriminator 1 view .LVU94
 512 003e 082C     		cmp	r4, #8
 513 0040 E4DD     		ble	.L28
 514              	.LBE7:
 365:Core/Src/main.c ****     for(int i=0; i<9; i++){
 515              		.loc 1 365 23 is_stmt 1 discriminator 2 view .LVU95
 365:Core/Src/main.c ****     for(int i=0; i<9; i++){
 516              		.loc 1 365 24 is_stmt 0 discriminator 2 view .LVU96
 517 0042 08F10108 		add	r8, r8, #1
 518              	.LVL30:
 519              	.L27:
 365:Core/Src/main.c ****     for(int i=0; i<9; i++){
 520              		.loc 1 365 18 is_stmt 1 discriminator 1 view .LVU97
 365:Core/Src/main.c ****     for(int i=0; i<9; i++){
 521              		.loc 1 365 5 is_stmt 0 discriminator 1 view .LVU98
 522 0046 B8F1080F 		cmp	r8, #8
 523 004a 01DC     		bgt	.L32
 524              	.LBB8:
 366:Core/Src/main.c ****         for(int j=0; j<9; j++){
 525              		.loc 1 366 17 view .LVU99
 526 004c 0024     		movs	r4, #0
 527 004e F6E7     		b	.L29
 528              	.L32:
 529              	.LBE8:
 530              	.LBE6:
 369:Core/Src/main.c ****         }
 370:Core/Src/main.c ****     }
 371:Core/Src/main.c **** }
 531              		.loc 1 371 1 view .LVU100
 532 0050 02B0     		add	sp, sp, #8
 533              	.LCFI23:
 534              		.cfi_def_cfa_offset 24
 535              		@ sp needed
 536 0052 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 537              		.loc 1 371 1 view .LVU101
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 17


 538              		.cfi_endproc
 539              	.LFE147:
 541              		.section	.text.setUp,"ax",%progbits
 542              		.align	1
 543              		.global	setUp
 544              		.syntax unified
 545              		.thumb
 546              		.thumb_func
 547              		.fpu fpv4-sp-d16
 549              	setUp:
 550              	.LFB148:
 372:Core/Src/main.c **** 
 373:Core/Src/main.c **** void setUp(){
 551              		.loc 1 373 13 is_stmt 1 view -0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555              		@ link register save eliminated.
 374:Core/Src/main.c **** 
 375:Core/Src/main.c **** }
 556              		.loc 1 375 1 view .LVU103
 557 0000 7047     		bx	lr
 558              		.cfi_endproc
 559              	.LFE148:
 561              		.section	.text.tearDown,"ax",%progbits
 562              		.align	1
 563              		.global	tearDown
 564              		.syntax unified
 565              		.thumb
 566              		.thumb_func
 567              		.fpu fpv4-sp-d16
 569              	tearDown:
 570              	.LFB149:
 376:Core/Src/main.c **** void tearDown(){
 571              		.loc 1 376 16 view -0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 0
 574              		@ frame_needed = 0, uses_anonymous_args = 0
 575              		@ link register save eliminated.
 377:Core/Src/main.c **** 
 378:Core/Src/main.c **** }
 576              		.loc 1 378 1 view .LVU105
 577 0000 7047     		bx	lr
 578              		.cfi_endproc
 579              	.LFE149:
 581              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 582              		.align	1
 583              		.global	HAL_UART_RxCpltCallback
 584              		.syntax unified
 585              		.thumb
 586              		.thumb_func
 587              		.fpu fpv4-sp-d16
 589              	HAL_UART_RxCpltCallback:
 590              	.LVL31:
 591              	.LFB150:
 379:Core/Src/main.c **** 
 380:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 18


 381:Core/Src/main.c **** {
 592              		.loc 1 381 1 view -0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 0
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 596              		.loc 1 381 1 is_stmt 0 view .LVU107
 597 0000 08B5     		push	{r3, lr}
 598              	.LCFI24:
 599              		.cfi_def_cfa_offset 8
 600              		.cfi_offset 3, -8
 601              		.cfi_offset 14, -4
 382:Core/Src/main.c ****   timeoutReceive = 70;
 602              		.loc 1 382 3 is_stmt 1 view .LVU108
 603              		.loc 1 382 18 is_stmt 0 view .LVU109
 604 0002 0C4B     		ldr	r3, .L38
 605 0004 4622     		movs	r2, #70
 606 0006 1A80     		strh	r2, [r3]	@ movhi
 383:Core/Src/main.c ****   // debug_sendchar(data_rx[0]);
 384:Core/Src/main.c ****   memcpy(buf_rx+t, data_rx, 1);
 607              		.loc 1 384 3 is_stmt 1 view .LVU110
 608 0008 0B4B     		ldr	r3, .L38+4
 609 000a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 610              	.LVL32:
 611              		.loc 1 384 3 is_stmt 0 view .LVU111
 612 000c 0B4A     		ldr	r2, .L38+8
 613 000e 1388     		ldrh	r3, [r2]
 614 0010 0B49     		ldr	r1, .L38+12
 615 0012 C854     		strb	r0, [r1, r3]
 385:Core/Src/main.c ****   if (++t >= 256) t = 0;
 616              		.loc 1 385 3 is_stmt 1 view .LVU112
 617              		.loc 1 385 7 is_stmt 0 view .LVU113
 618 0014 1388     		ldrh	r3, [r2]
 619 0016 0133     		adds	r3, r3, #1
 620 0018 9BB2     		uxth	r3, r3
 621              		.loc 1 385 6 view .LVU114
 622 001a 1380     		strh	r3, [r2]	@ movhi
 623 001c FF2B     		cmp	r3, #255
 624 001e 02D9     		bls	.L36
 625              		.loc 1 385 19 is_stmt 1 discriminator 1 view .LVU115
 626              		.loc 1 385 21 is_stmt 0 discriminator 1 view .LVU116
 627 0020 1346     		mov	r3, r2
 628 0022 0022     		movs	r2, #0
 629 0024 1A80     		strh	r2, [r3]	@ movhi
 630              	.L36:
 386:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1, data_rx, 1);
 631              		.loc 1 386 3 is_stmt 1 view .LVU117
 632 0026 0122     		movs	r2, #1
 633 0028 0349     		ldr	r1, .L38+4
 634 002a 0648     		ldr	r0, .L38+16
 635 002c FFF7FEFF 		bl	HAL_UART_Receive_IT
 636              	.LVL33:
 387:Core/Src/main.c **** }
 637              		.loc 1 387 1 is_stmt 0 view .LVU118
 638 0030 08BD     		pop	{r3, pc}
 639              	.L39:
 640 0032 00BF     		.align	2
 641              	.L38:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 19


 642 0034 00000000 		.word	.LANCHOR2
 643 0038 00000000 		.word	.LANCHOR3
 644 003c 00000000 		.word	.LANCHOR5
 645 0040 00000000 		.word	.LANCHOR4
 646 0044 00000000 		.word	.LANCHOR0
 647              		.cfi_endproc
 648              	.LFE150:
 650              		.section	.rodata.ProcessDataFromUART.str1.4,"aMS",%progbits,1
 651              		.align	2
 652              	.LC0:
 653 0000 52656365 		.ascii	"Received data: %s\012\000"
 653      69766564 
 653      20646174 
 653      613A2025 
 653      730A00
 654 0013 00       		.align	2
 655              	.LC1:
 656 0014 4572726F 		.ascii	"Error decoding frame %d\015\012\000"
 656      72206465 
 656      636F6469 
 656      6E672066 
 656      72616D65 
 657 002e 0000     		.align	2
 658              	.LC2:
 659 0030 74203D20 		.ascii	"t = %d buf_rx:\015\012\000"
 659      25642062 
 659      75665F72 
 659      783A0D0A 
 659      00
 660 0041 000000   		.align	2
 661              	.LC3:
 662 0044 30782530 		.ascii	"0x%02x, \000"
 662      32782C20 
 662      00
 663 004d 000000   		.align	2
 664              	.LC4:
 665 0050 0D0A7265 		.ascii	"\015\012received_len = %d received_data:\015\012\000"
 665      63656976 
 665      65645F6C 
 665      656E203D 
 665      20256420 
 666              		.section	.text.ProcessDataFromUART,"ax",%progbits
 667              		.align	1
 668              		.global	ProcessDataFromUART
 669              		.syntax unified
 670              		.thumb
 671              		.thumb_func
 672              		.fpu fpv4-sp-d16
 674              	ProcessDataFromUART:
 675              	.LFB151:
 388:Core/Src/main.c **** 
 389:Core/Src/main.c **** void ProcessDataFromUART(void)
 390:Core/Src/main.c **** {
 676              		.loc 1 390 1 is_stmt 1 view -0
 677              		.cfi_startproc
 678              		@ args = 0, pretend = 0, frame = 264
 679              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 20


 391:Core/Src/main.c **** 	/* Neu khong co du lieu thi khong xu ly */
 392:Core/Src/main.c **** 	if(newReceive == 0)
 680              		.loc 1 392 2 view .LVU120
 681              		.loc 1 392 16 is_stmt 0 view .LVU121
 682 0000 2B4B     		ldr	r3, .L56
 683 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 684              		.loc 1 392 4 view .LVU122
 685 0004 03B9     		cbnz	r3, .L55
 686 0006 7047     		bx	lr
 687              	.L55:
 390:Core/Src/main.c **** 	/* Neu khong co du lieu thi khong xu ly */
 688              		.loc 1 390 1 view .LVU123
 689 0008 10B5     		push	{r4, lr}
 690              	.LCFI25:
 691              		.cfi_def_cfa_offset 8
 692              		.cfi_offset 4, -8
 693              		.cfi_offset 14, -4
 694 000a C4B0     		sub	sp, sp, #272
 695              	.LCFI26:
 696              		.cfi_def_cfa_offset 280
 393:Core/Src/main.c **** 		return;
 394:Core/Src/main.c **** 	
 395:Core/Src/main.c **** 	/* Xoa co bao co du lieu */
 396:Core/Src/main.c **** 	newReceive = 0;
 697              		.loc 1 396 2 is_stmt 1 view .LVU124
 698              		.loc 1 396 13 is_stmt 0 view .LVU125
 699 000c 0021     		movs	r1, #0
 700 000e 284B     		ldr	r3, .L56
 701 0010 1970     		strb	r1, [r3]
 397:Core/Src/main.c **** 	/* Xu ly lenh */
 398:Core/Src/main.c ****   int ret;
 702              		.loc 1 398 3 is_stmt 1 view .LVU126
 399:Core/Src/main.c ****   uint8_t received_data[256] = {0};
 703              		.loc 1 399 3 view .LVU127
 704              		.loc 1 399 11 is_stmt 0 view .LVU128
 705 0012 0491     		str	r1, [sp, #16]
 706 0014 FC22     		movs	r2, #252
 707 0016 05A8     		add	r0, sp, #20
 708 0018 FFF7FEFF 		bl	memset
 709              	.LVL34:
 400:Core/Src/main.c ****   int received_len = t;
 710              		.loc 1 400 3 is_stmt 1 view .LVU129
 711              		.loc 1 400 7 is_stmt 0 view .LVU130
 712 001c 254B     		ldr	r3, .L56+4
 713 001e 1A88     		ldrh	r2, [r3]
 714 0020 03AB     		add	r3, sp, #12
 715 0022 0392     		str	r2, [sp, #12]
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****   ret = yahdlc_get_data(&state, buf_rx, t, received_data, &received_len);
 716              		.loc 1 402 3 is_stmt 1 view .LVU131
 717              		.loc 1 402 9 is_stmt 0 view .LVU132
 718 0024 0093     		str	r3, [sp]
 719 0026 04AB     		add	r3, sp, #16
 720 0028 2349     		ldr	r1, .L56+8
 721 002a 2448     		ldr	r0, .L56+12
 722 002c FFF7FEFF 		bl	yahdlc_get_data
 723              	.LVL35:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 21


 403:Core/Src/main.c ****   if (ret == 0) {
 724              		.loc 1 403 3 is_stmt 1 view .LVU133
 725              		.loc 1 403 6 is_stmt 0 view .LVU134
 726 0030 0446     		mov	r4, r0
 727 0032 B8B9     		cbnz	r0, .L43
 404:Core/Src/main.c ****       debug_printf("Received data: %s\n", received_data);
 728              		.loc 1 404 7 is_stmt 1 view .LVU135
 729 0034 04A9     		add	r1, sp, #16
 730 0036 2248     		ldr	r0, .L56+16
 731              	.LVL36:
 732              		.loc 1 404 7 is_stmt 0 view .LVU136
 733 0038 FFF7FEFF 		bl	debug_printf
 734              	.LVL37:
 405:Core/Src/main.c ****       for(int i=0; i<t; i++)
 735              		.loc 1 405 7 is_stmt 1 view .LVU137
 736              	.LBB9:
 737              		.loc 1 405 11 view .LVU138
 738              		.loc 1 405 7 is_stmt 0 view .LVU139
 739 003c 04E0     		b	.L44
 740              	.LVL38:
 741              	.L45:
 406:Core/Src/main.c ****       {
 407:Core/Src/main.c ****         debug_sendchar(received_data[i]);
 742              		.loc 1 407 9 is_stmt 1 discriminator 3 view .LVU140
 743 003e 04AB     		add	r3, sp, #16
 744 0040 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 745 0042 FFF7FEFF 		bl	debug_sendchar
 746              	.LVL39:
 405:Core/Src/main.c ****       for(int i=0; i<t; i++)
 747              		.loc 1 405 25 discriminator 3 view .LVU141
 405:Core/Src/main.c ****       for(int i=0; i<t; i++)
 748              		.loc 1 405 26 is_stmt 0 discriminator 3 view .LVU142
 749 0046 0134     		adds	r4, r4, #1
 750              	.LVL40:
 751              	.L44:
 405:Core/Src/main.c ****       for(int i=0; i<t; i++)
 752              		.loc 1 405 20 is_stmt 1 discriminator 1 view .LVU143
 405:Core/Src/main.c ****       for(int i=0; i<t; i++)
 753              		.loc 1 405 21 is_stmt 0 discriminator 1 view .LVU144
 754 0048 1A4B     		ldr	r3, .L56+4
 755 004a 1B88     		ldrh	r3, [r3]
 405:Core/Src/main.c ****       for(int i=0; i<t; i++)
 756              		.loc 1 405 7 discriminator 1 view .LVU145
 757 004c A342     		cmp	r3, r4
 758 004e F6DC     		bgt	.L45
 759              	.LVL41:
 760              	.L46:
 405:Core/Src/main.c ****       for(int i=0; i<t; i++)
 761              		.loc 1 405 7 discriminator 1 view .LVU146
 762              	.LBE9:
 408:Core/Src/main.c ****       }
 409:Core/Src/main.c ****   } else {
 410:Core/Src/main.c ****       debug_printf("Error decoding frame %d\r\n", ret);
 411:Core/Src/main.c ****       debug_printf("t = %d buf_rx:\r\n", t);
 412:Core/Src/main.c ****       for(int i=0; i<t; i++)
 413:Core/Src/main.c ****       {
 414:Core/Src/main.c ****         debug_printf("0x%02x, ", buf_rx[i]);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 22


 415:Core/Src/main.c ****       }
 416:Core/Src/main.c ****       debug_printf("\r\nreceived_len = %d received_data:\r\n", received_len);
 417:Core/Src/main.c ****       for(int i=0; i<received_len; i++)
 418:Core/Src/main.c ****       {
 419:Core/Src/main.c ****         debug_printf("0x%02x, ", received_data[i]);
 420:Core/Src/main.c ****       }
 421:Core/Src/main.c ****   }
 422:Core/Src/main.c **** 	/* Xoa bo dem nhan */
 423:Core/Src/main.c **** 	t = 0;
 763              		.loc 1 423 2 is_stmt 1 discriminator 1 view .LVU147
 764              		.loc 1 423 4 is_stmt 0 discriminator 1 view .LVU148
 765 0050 0021     		movs	r1, #0
 766 0052 184B     		ldr	r3, .L56+4
 767 0054 1980     		strh	r1, [r3]	@ movhi
 424:Core/Src/main.c **** 	memset(buf_rx, 0, 256);
 768              		.loc 1 424 2 is_stmt 1 discriminator 1 view .LVU149
 769 0056 4FF48072 		mov	r2, #256
 770 005a 1748     		ldr	r0, .L56+8
 771 005c FFF7FEFF 		bl	memset
 772              	.LVL42:
 425:Core/Src/main.c **** }
 773              		.loc 1 425 1 is_stmt 0 discriminator 1 view .LVU150
 774 0060 44B0     		add	sp, sp, #272
 775              	.LCFI27:
 776              		.cfi_remember_state
 777              		.cfi_def_cfa_offset 8
 778              		@ sp needed
 779 0062 10BD     		pop	{r4, pc}
 780              	.LVL43:
 781              	.L43:
 782              	.LCFI28:
 783              		.cfi_restore_state
 410:Core/Src/main.c ****       debug_printf("t = %d buf_rx:\r\n", t);
 784              		.loc 1 410 7 is_stmt 1 view .LVU151
 785 0064 0146     		mov	r1, r0
 786 0066 1748     		ldr	r0, .L56+20
 787              	.LVL44:
 410:Core/Src/main.c ****       debug_printf("t = %d buf_rx:\r\n", t);
 788              		.loc 1 410 7 is_stmt 0 view .LVU152
 789 0068 FFF7FEFF 		bl	debug_printf
 790              	.LVL45:
 411:Core/Src/main.c ****       for(int i=0; i<t; i++)
 791              		.loc 1 411 7 is_stmt 1 view .LVU153
 792 006c 114B     		ldr	r3, .L56+4
 793 006e 1988     		ldrh	r1, [r3]
 794 0070 1548     		ldr	r0, .L56+24
 795 0072 FFF7FEFF 		bl	debug_printf
 796              	.LVL46:
 412:Core/Src/main.c ****       {
 797              		.loc 1 412 7 view .LVU154
 798              	.LBB10:
 412:Core/Src/main.c ****       {
 799              		.loc 1 412 11 view .LVU155
 412:Core/Src/main.c ****       {
 800              		.loc 1 412 15 is_stmt 0 view .LVU156
 801 0076 0024     		movs	r4, #0
 802              	.LVL47:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 23


 412:Core/Src/main.c ****       {
 803              		.loc 1 412 7 view .LVU157
 804 0078 05E0     		b	.L47
 805              	.LVL48:
 806              	.L48:
 414:Core/Src/main.c ****       }
 807              		.loc 1 414 9 is_stmt 1 discriminator 3 view .LVU158
 808 007a 0F4B     		ldr	r3, .L56+8
 809 007c 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 810 007e 1348     		ldr	r0, .L56+28
 811 0080 FFF7FEFF 		bl	debug_printf
 812              	.LVL49:
 412:Core/Src/main.c ****       {
 813              		.loc 1 412 25 discriminator 3 view .LVU159
 412:Core/Src/main.c ****       {
 814              		.loc 1 412 26 is_stmt 0 discriminator 3 view .LVU160
 815 0084 0134     		adds	r4, r4, #1
 816              	.LVL50:
 817              	.L47:
 412:Core/Src/main.c ****       {
 818              		.loc 1 412 20 is_stmt 1 discriminator 1 view .LVU161
 412:Core/Src/main.c ****       {
 819              		.loc 1 412 21 is_stmt 0 discriminator 1 view .LVU162
 820 0086 0B4B     		ldr	r3, .L56+4
 821 0088 1B88     		ldrh	r3, [r3]
 412:Core/Src/main.c ****       {
 822              		.loc 1 412 7 discriminator 1 view .LVU163
 823 008a A342     		cmp	r3, r4
 824 008c F5DC     		bgt	.L48
 825              	.LBE10:
 416:Core/Src/main.c ****       for(int i=0; i<received_len; i++)
 826              		.loc 1 416 7 is_stmt 1 view .LVU164
 827 008e 0399     		ldr	r1, [sp, #12]
 828 0090 0F48     		ldr	r0, .L56+32
 829 0092 FFF7FEFF 		bl	debug_printf
 830              	.LVL51:
 417:Core/Src/main.c ****       {
 831              		.loc 1 417 7 view .LVU165
 832              	.LBB11:
 417:Core/Src/main.c ****       {
 833              		.loc 1 417 11 view .LVU166
 417:Core/Src/main.c ****       {
 834              		.loc 1 417 15 is_stmt 0 view .LVU167
 835 0096 0024     		movs	r4, #0
 836              	.LVL52:
 417:Core/Src/main.c ****       {
 837              		.loc 1 417 7 view .LVU168
 838 0098 05E0     		b	.L49
 839              	.LVL53:
 840              	.L50:
 419:Core/Src/main.c ****       }
 841              		.loc 1 419 9 is_stmt 1 discriminator 3 view .LVU169
 842 009a 04AB     		add	r3, sp, #16
 843 009c 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 844 009e 0B48     		ldr	r0, .L56+28
 845 00a0 FFF7FEFF 		bl	debug_printf
 846              	.LVL54:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 24


 417:Core/Src/main.c ****       {
 847              		.loc 1 417 36 discriminator 3 view .LVU170
 417:Core/Src/main.c ****       {
 848              		.loc 1 417 37 is_stmt 0 discriminator 3 view .LVU171
 849 00a4 0134     		adds	r4, r4, #1
 850              	.LVL55:
 851              	.L49:
 417:Core/Src/main.c ****       {
 852              		.loc 1 417 20 is_stmt 1 discriminator 1 view .LVU172
 417:Core/Src/main.c ****       {
 853              		.loc 1 417 21 is_stmt 0 discriminator 1 view .LVU173
 854 00a6 039B     		ldr	r3, [sp, #12]
 417:Core/Src/main.c ****       {
 855              		.loc 1 417 7 discriminator 1 view .LVU174
 856 00a8 A342     		cmp	r3, r4
 857 00aa F6DC     		bgt	.L50
 858 00ac D0E7     		b	.L46
 859              	.L57:
 860 00ae 00BF     		.align	2
 861              	.L56:
 862 00b0 00000000 		.word	.LANCHOR6
 863 00b4 00000000 		.word	.LANCHOR5
 864 00b8 00000000 		.word	.LANCHOR4
 865 00bc 00000000 		.word	.LANCHOR7
 866 00c0 00000000 		.word	.LC0
 867 00c4 14000000 		.word	.LC1
 868 00c8 30000000 		.word	.LC2
 869 00cc 44000000 		.word	.LC3
 870 00d0 50000000 		.word	.LC4
 871              	.LBE11:
 872              		.cfi_endproc
 873              	.LFE151:
 875              		.section	.text.Error_Handler,"ax",%progbits
 876              		.align	1
 877              		.global	Error_Handler
 878              		.syntax unified
 879              		.thumb
 880              		.thumb_func
 881              		.fpu fpv4-sp-d16
 883              	Error_Handler:
 884              	.LFB152:
 426:Core/Src/main.c **** 
 427:Core/Src/main.c **** /* USER CODE END 4 */
 428:Core/Src/main.c **** 
 429:Core/Src/main.c **** /**
 430:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 431:Core/Src/main.c ****   * @retval None
 432:Core/Src/main.c ****   */
 433:Core/Src/main.c **** void Error_Handler(void)
 434:Core/Src/main.c **** {
 885              		.loc 1 434 1 is_stmt 1 view -0
 886              		.cfi_startproc
 887              		@ Volatile: function does not return.
 888              		@ args = 0, pretend = 0, frame = 0
 889              		@ frame_needed = 0, uses_anonymous_args = 0
 890              		@ link register save eliminated.
 435:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 25


 436:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 437:Core/Src/main.c ****   __disable_irq();
 891              		.loc 1 437 3 view .LVU176
 892              	.LBB12:
 893              	.LBI12:
 894              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 26


  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 27


 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 28


 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 29


 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 30


 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 31


 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 32


 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 33


 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 34


 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 35


 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 36


 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 37


 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 38


 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 39


 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 40


 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 41


 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 895              		.loc 2 960 27 view .LVU177
 896              	.LBB13:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 42


 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 897              		.loc 2 962 3 view .LVU178
 898              		.syntax unified
 899              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 900 0000 72B6     		cpsid i
 901              	@ 0 "" 2
 902              		.thumb
 903              		.syntax unified
 904              	.L59:
 905              	.LBE13:
 906              	.LBE12:
 438:Core/Src/main.c ****   while (1)
 907              		.loc 1 438 3 discriminator 1 view .LVU179
 439:Core/Src/main.c ****   {
 440:Core/Src/main.c ****   }
 908              		.loc 1 440 3 discriminator 1 view .LVU180
 438:Core/Src/main.c ****   while (1)
 909              		.loc 1 438 9 discriminator 1 view .LVU181
 910 0002 FEE7     		b	.L59
 911              		.cfi_endproc
 912              	.LFE152:
 914              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 915              		.align	1
 916              		.syntax unified
 917              		.thumb
 918              		.thumb_func
 919              		.fpu fpv4-sp-d16
 921              	MX_USART1_UART_Init:
 922              	.LFB139:
 216:Core/Src/main.c **** 
 923              		.loc 1 216 1 view -0
 924              		.cfi_startproc
 925              		@ args = 0, pretend = 0, frame = 0
 926              		@ frame_needed = 0, uses_anonymous_args = 0
 927 0000 08B5     		push	{r3, lr}
 928              	.LCFI29:
 929              		.cfi_def_cfa_offset 8
 930              		.cfi_offset 3, -8
 931              		.cfi_offset 14, -4
 225:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 932              		.loc 1 225 3 view .LVU183
 225:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 933              		.loc 1 225 19 is_stmt 0 view .LVU184
 934 0002 0A48     		ldr	r0, .L64
 935 0004 0A4B     		ldr	r3, .L64+4
 936 0006 0360     		str	r3, [r0]
 226:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 937              		.loc 1 226 3 is_stmt 1 view .LVU185
 226:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 938              		.loc 1 226 24 is_stmt 0 view .LVU186
 939 0008 4FF4E133 		mov	r3, #115200
 940 000c 4360     		str	r3, [r0, #4]
 227:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 941              		.loc 1 227 3 is_stmt 1 view .LVU187
 227:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 942              		.loc 1 227 26 is_stmt 0 view .LVU188
 943 000e 0023     		movs	r3, #0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 43


 944 0010 8360     		str	r3, [r0, #8]
 228:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 945              		.loc 1 228 3 is_stmt 1 view .LVU189
 228:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 946              		.loc 1 228 24 is_stmt 0 view .LVU190
 947 0012 C360     		str	r3, [r0, #12]
 229:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 948              		.loc 1 229 3 is_stmt 1 view .LVU191
 229:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 949              		.loc 1 229 22 is_stmt 0 view .LVU192
 950 0014 0361     		str	r3, [r0, #16]
 230:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 951              		.loc 1 230 3 is_stmt 1 view .LVU193
 230:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 952              		.loc 1 230 20 is_stmt 0 view .LVU194
 953 0016 0C22     		movs	r2, #12
 954 0018 4261     		str	r2, [r0, #20]
 231:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 955              		.loc 1 231 3 is_stmt 1 view .LVU195
 231:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 956              		.loc 1 231 25 is_stmt 0 view .LVU196
 957 001a 8361     		str	r3, [r0, #24]
 232:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 958              		.loc 1 232 3 is_stmt 1 view .LVU197
 232:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 959              		.loc 1 232 28 is_stmt 0 view .LVU198
 960 001c C361     		str	r3, [r0, #28]
 233:Core/Src/main.c ****   {
 961              		.loc 1 233 3 is_stmt 1 view .LVU199
 233:Core/Src/main.c ****   {
 962              		.loc 1 233 7 is_stmt 0 view .LVU200
 963 001e FFF7FEFF 		bl	HAL_UART_Init
 964              	.LVL56:
 233:Core/Src/main.c ****   {
 965              		.loc 1 233 6 view .LVU201
 966 0022 00B9     		cbnz	r0, .L63
 241:Core/Src/main.c **** 
 967              		.loc 1 241 1 view .LVU202
 968 0024 08BD     		pop	{r3, pc}
 969              	.L63:
 235:Core/Src/main.c ****   }
 970              		.loc 1 235 5 is_stmt 1 view .LVU203
 971 0026 FFF7FEFF 		bl	Error_Handler
 972              	.LVL57:
 973              	.L65:
 974 002a 00BF     		.align	2
 975              	.L64:
 976 002c 00000000 		.word	.LANCHOR0
 977 0030 00100140 		.word	1073811456
 978              		.cfi_endproc
 979              	.LFE139:
 981              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 982              		.align	1
 983              		.syntax unified
 984              		.thumb
 985              		.thumb_func
 986              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 44


 988              	MX_USART2_UART_Init:
 989              	.LFB140:
 249:Core/Src/main.c **** 
 990              		.loc 1 249 1 view -0
 991              		.cfi_startproc
 992              		@ args = 0, pretend = 0, frame = 0
 993              		@ frame_needed = 0, uses_anonymous_args = 0
 994 0000 08B5     		push	{r3, lr}
 995              	.LCFI30:
 996              		.cfi_def_cfa_offset 8
 997              		.cfi_offset 3, -8
 998              		.cfi_offset 14, -4
 258:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 999              		.loc 1 258 3 view .LVU205
 258:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1000              		.loc 1 258 19 is_stmt 0 view .LVU206
 1001 0002 0A48     		ldr	r0, .L70
 1002 0004 0A4B     		ldr	r3, .L70+4
 1003 0006 0360     		str	r3, [r0]
 259:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1004              		.loc 1 259 3 is_stmt 1 view .LVU207
 259:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1005              		.loc 1 259 24 is_stmt 0 view .LVU208
 1006 0008 4FF4E133 		mov	r3, #115200
 1007 000c 4360     		str	r3, [r0, #4]
 260:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1008              		.loc 1 260 3 is_stmt 1 view .LVU209
 260:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1009              		.loc 1 260 26 is_stmt 0 view .LVU210
 1010 000e 0023     		movs	r3, #0
 1011 0010 8360     		str	r3, [r0, #8]
 261:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1012              		.loc 1 261 3 is_stmt 1 view .LVU211
 261:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1013              		.loc 1 261 24 is_stmt 0 view .LVU212
 1014 0012 C360     		str	r3, [r0, #12]
 262:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1015              		.loc 1 262 3 is_stmt 1 view .LVU213
 262:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1016              		.loc 1 262 22 is_stmt 0 view .LVU214
 1017 0014 0361     		str	r3, [r0, #16]
 263:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1018              		.loc 1 263 3 is_stmt 1 view .LVU215
 263:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1019              		.loc 1 263 20 is_stmt 0 view .LVU216
 1020 0016 0C22     		movs	r2, #12
 1021 0018 4261     		str	r2, [r0, #20]
 264:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1022              		.loc 1 264 3 is_stmt 1 view .LVU217
 264:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1023              		.loc 1 264 25 is_stmt 0 view .LVU218
 1024 001a 8361     		str	r3, [r0, #24]
 265:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1025              		.loc 1 265 3 is_stmt 1 view .LVU219
 265:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1026              		.loc 1 265 28 is_stmt 0 view .LVU220
 1027 001c C361     		str	r3, [r0, #28]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 45


 266:Core/Src/main.c ****   {
 1028              		.loc 1 266 3 is_stmt 1 view .LVU221
 266:Core/Src/main.c ****   {
 1029              		.loc 1 266 7 is_stmt 0 view .LVU222
 1030 001e FFF7FEFF 		bl	HAL_UART_Init
 1031              	.LVL58:
 266:Core/Src/main.c ****   {
 1032              		.loc 1 266 6 view .LVU223
 1033 0022 00B9     		cbnz	r0, .L69
 274:Core/Src/main.c **** 
 1034              		.loc 1 274 1 view .LVU224
 1035 0024 08BD     		pop	{r3, pc}
 1036              	.L69:
 268:Core/Src/main.c ****   }
 1037              		.loc 1 268 5 is_stmt 1 view .LVU225
 1038 0026 FFF7FEFF 		bl	Error_Handler
 1039              	.LVL59:
 1040              	.L71:
 1041 002a 00BF     		.align	2
 1042              	.L70:
 1043 002c 00000000 		.word	.LANCHOR1
 1044 0030 00440040 		.word	1073759232
 1045              		.cfi_endproc
 1046              	.LFE140:
 1048              		.section	.text.SystemClock_Config,"ax",%progbits
 1049              		.align	1
 1050              		.global	SystemClock_Config
 1051              		.syntax unified
 1052              		.thumb
 1053              		.thumb_func
 1054              		.fpu fpv4-sp-d16
 1056              	SystemClock_Config:
 1057              	.LFB138:
 170:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1058              		.loc 1 170 1 view -0
 1059              		.cfi_startproc
 1060              		@ args = 0, pretend = 0, frame = 80
 1061              		@ frame_needed = 0, uses_anonymous_args = 0
 1062 0000 00B5     		push	{lr}
 1063              	.LCFI31:
 1064              		.cfi_def_cfa_offset 4
 1065              		.cfi_offset 14, -4
 1066 0002 95B0     		sub	sp, sp, #84
 1067              	.LCFI32:
 1068              		.cfi_def_cfa_offset 88
 171:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1069              		.loc 1 171 3 view .LVU227
 171:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1070              		.loc 1 171 22 is_stmt 0 view .LVU228
 1071 0004 3022     		movs	r2, #48
 1072 0006 0021     		movs	r1, #0
 1073 0008 08A8     		add	r0, sp, #32
 1074 000a FFF7FEFF 		bl	memset
 1075              	.LVL60:
 172:Core/Src/main.c **** 
 1076              		.loc 1 172 3 is_stmt 1 view .LVU229
 172:Core/Src/main.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 46


 1077              		.loc 1 172 22 is_stmt 0 view .LVU230
 1078 000e 0023     		movs	r3, #0
 1079 0010 0393     		str	r3, [sp, #12]
 1080 0012 0493     		str	r3, [sp, #16]
 1081 0014 0593     		str	r3, [sp, #20]
 1082 0016 0693     		str	r3, [sp, #24]
 1083 0018 0793     		str	r3, [sp, #28]
 176:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1084              		.loc 1 176 3 is_stmt 1 view .LVU231
 1085              	.LBB14:
 176:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1086              		.loc 1 176 3 view .LVU232
 1087 001a 0193     		str	r3, [sp, #4]
 176:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1088              		.loc 1 176 3 view .LVU233
 1089 001c 1E4A     		ldr	r2, .L78
 1090 001e 116C     		ldr	r1, [r2, #64]
 1091 0020 41F08051 		orr	r1, r1, #268435456
 1092 0024 1164     		str	r1, [r2, #64]
 176:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1093              		.loc 1 176 3 view .LVU234
 1094 0026 126C     		ldr	r2, [r2, #64]
 1095 0028 02F08052 		and	r2, r2, #268435456
 1096 002c 0192     		str	r2, [sp, #4]
 176:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1097              		.loc 1 176 3 view .LVU235
 1098 002e 019A     		ldr	r2, [sp, #4]
 1099              	.LBE14:
 176:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1100              		.loc 1 176 3 view .LVU236
 177:Core/Src/main.c **** 
 1101              		.loc 1 177 3 view .LVU237
 1102              	.LBB15:
 177:Core/Src/main.c **** 
 1103              		.loc 1 177 3 view .LVU238
 1104 0030 0293     		str	r3, [sp, #8]
 177:Core/Src/main.c **** 
 1105              		.loc 1 177 3 view .LVU239
 1106 0032 1A4B     		ldr	r3, .L78+4
 1107 0034 1A68     		ldr	r2, [r3]
 1108 0036 42F48042 		orr	r2, r2, #16384
 1109 003a 1A60     		str	r2, [r3]
 177:Core/Src/main.c **** 
 1110              		.loc 1 177 3 view .LVU240
 1111 003c 1B68     		ldr	r3, [r3]
 1112 003e 03F48043 		and	r3, r3, #16384
 1113 0042 0293     		str	r3, [sp, #8]
 177:Core/Src/main.c **** 
 1114              		.loc 1 177 3 view .LVU241
 1115 0044 029B     		ldr	r3, [sp, #8]
 1116              	.LBE15:
 177:Core/Src/main.c **** 
 1117              		.loc 1 177 3 view .LVU242
 182:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1118              		.loc 1 182 3 view .LVU243
 182:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1119              		.loc 1 182 36 is_stmt 0 view .LVU244
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 47


 1120 0046 0123     		movs	r3, #1
 1121 0048 0893     		str	r3, [sp, #32]
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1122              		.loc 1 183 3 is_stmt 1 view .LVU245
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1123              		.loc 1 183 30 is_stmt 0 view .LVU246
 1124 004a 4FF48033 		mov	r3, #65536
 1125 004e 0993     		str	r3, [sp, #36]
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1126              		.loc 1 184 3 is_stmt 1 view .LVU247
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1127              		.loc 1 184 34 is_stmt 0 view .LVU248
 1128 0050 0223     		movs	r3, #2
 1129 0052 0E93     		str	r3, [sp, #56]
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1130              		.loc 1 185 3 is_stmt 1 view .LVU249
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1131              		.loc 1 185 35 is_stmt 0 view .LVU250
 1132 0054 4FF48003 		mov	r3, #4194304
 1133 0058 0F93     		str	r3, [sp, #60]
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1134              		.loc 1 186 3 is_stmt 1 view .LVU251
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1135              		.loc 1 186 30 is_stmt 0 view .LVU252
 1136 005a 0423     		movs	r3, #4
 1137 005c 1093     		str	r3, [sp, #64]
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1138              		.loc 1 187 3 is_stmt 1 view .LVU253
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1139              		.loc 1 187 30 is_stmt 0 view .LVU254
 1140 005e 9022     		movs	r2, #144
 1141 0060 1192     		str	r2, [sp, #68]
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1142              		.loc 1 188 3 is_stmt 1 view .LVU255
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1143              		.loc 1 188 30 is_stmt 0 view .LVU256
 1144 0062 1293     		str	r3, [sp, #72]
 189:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1145              		.loc 1 189 3 is_stmt 1 view .LVU257
 189:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1146              		.loc 1 189 30 is_stmt 0 view .LVU258
 1147 0064 1393     		str	r3, [sp, #76]
 190:Core/Src/main.c ****   {
 1148              		.loc 1 190 3 is_stmt 1 view .LVU259
 190:Core/Src/main.c ****   {
 1149              		.loc 1 190 7 is_stmt 0 view .LVU260
 1150 0066 08A8     		add	r0, sp, #32
 1151 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1152              	.LVL61:
 190:Core/Src/main.c ****   {
 1153              		.loc 1 190 6 view .LVU261
 1154 006c 80B9     		cbnz	r0, .L76
 197:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1155              		.loc 1 197 3 is_stmt 1 view .LVU262
 197:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1156              		.loc 1 197 31 is_stmt 0 view .LVU263
 1157 006e 0F23     		movs	r3, #15
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 48


 1158 0070 0393     		str	r3, [sp, #12]
 199:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1159              		.loc 1 199 3 is_stmt 1 view .LVU264
 199:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1160              		.loc 1 199 34 is_stmt 0 view .LVU265
 1161 0072 0221     		movs	r1, #2
 1162 0074 0491     		str	r1, [sp, #16]
 200:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1163              		.loc 1 200 3 is_stmt 1 view .LVU266
 200:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1164              		.loc 1 200 35 is_stmt 0 view .LVU267
 1165 0076 0023     		movs	r3, #0
 1166 0078 0593     		str	r3, [sp, #20]
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1167              		.loc 1 201 3 is_stmt 1 view .LVU268
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1168              		.loc 1 201 36 is_stmt 0 view .LVU269
 1169 007a 4FF48052 		mov	r2, #4096
 1170 007e 0692     		str	r2, [sp, #24]
 202:Core/Src/main.c **** 
 1171              		.loc 1 202 3 is_stmt 1 view .LVU270
 202:Core/Src/main.c **** 
 1172              		.loc 1 202 36 is_stmt 0 view .LVU271
 1173 0080 0793     		str	r3, [sp, #28]
 204:Core/Src/main.c ****   {
 1174              		.loc 1 204 3 is_stmt 1 view .LVU272
 204:Core/Src/main.c ****   {
 1175              		.loc 1 204 7 is_stmt 0 view .LVU273
 1176 0082 03A8     		add	r0, sp, #12
 1177 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1178              	.LVL62:
 204:Core/Src/main.c ****   {
 1179              		.loc 1 204 6 view .LVU274
 1180 0088 20B9     		cbnz	r0, .L77
 208:Core/Src/main.c **** 
 1181              		.loc 1 208 1 view .LVU275
 1182 008a 15B0     		add	sp, sp, #84
 1183              	.LCFI33:
 1184              		.cfi_remember_state
 1185              		.cfi_def_cfa_offset 4
 1186              		@ sp needed
 1187 008c 5DF804FB 		ldr	pc, [sp], #4
 1188              	.L76:
 1189              	.LCFI34:
 1190              		.cfi_restore_state
 192:Core/Src/main.c ****   }
 1191              		.loc 1 192 5 is_stmt 1 view .LVU276
 1192 0090 FFF7FEFF 		bl	Error_Handler
 1193              	.LVL63:
 1194              	.L77:
 206:Core/Src/main.c ****   }
 1195              		.loc 1 206 5 view .LVU277
 1196 0094 FFF7FEFF 		bl	Error_Handler
 1197              	.LVL64:
 1198              	.L79:
 1199              		.align	2
 1200              	.L78:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 49


 1201 0098 00380240 		.word	1073887232
 1202 009c 00700040 		.word	1073770496
 1203              		.cfi_endproc
 1204              	.LFE138:
 1206              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1207              		.align	2
 1208              	.LC5:
 1209 0000 48454C4C 		.ascii	"HELLO WORLD!!!\015\012\000"
 1209      4F20574F 
 1209      524C4421 
 1209      21210D0A 
 1209      00
 1210 0011 000000   		.align	2
 1211              	.LC6:
 1212 0014 436F7265 		.ascii	"Core/Src/main.c\000"
 1212      2F537263 
 1212      2F6D6169 
 1212      6E2E6300 
 1213              		.align	2
 1214              	.LC7:
 1215 0024 74657374 		.ascii	"test_add\000"
 1215      5F616464 
 1215      00
 1216 002d 000000   		.align	2
 1217              	.LC8:
 1218 0030 36353433 		.ascii	"654321\015\012\000"
 1218      32310D0A 
 1218      00
 1219              		.section	.text.main,"ax",%progbits
 1220              		.align	1
 1221              		.global	main
 1222              		.syntax unified
 1223              		.thumb
 1224              		.thumb_func
 1225              		.fpu fpv4-sp-d16
 1227              	main:
 1228              	.LFB137:
  90:Core/Src/main.c **** 
 1229              		.loc 1 90 1 view -0
 1230              		.cfi_startproc
 1231              		@ args = 0, pretend = 0, frame = 280
 1232              		@ frame_needed = 0, uses_anonymous_args = 0
 1233 0000 30B5     		push	{r4, r5, lr}
 1234              	.LCFI35:
 1235              		.cfi_def_cfa_offset 12
 1236              		.cfi_offset 4, -12
 1237              		.cfi_offset 5, -8
 1238              		.cfi_offset 14, -4
 1239 0002 C9B0     		sub	sp, sp, #292
 1240              	.LCFI36:
 1241              		.cfi_def_cfa_offset 304
  99:Core/Src/main.c **** 
 1242              		.loc 1 99 3 view .LVU279
 1243 0004 FFF7FEFF 		bl	HAL_Init
 1244              	.LVL65:
 106:Core/Src/main.c **** 
 1245              		.loc 1 106 3 view .LVU280
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 50


 1246 0008 FFF7FEFF 		bl	SystemClock_Config
 1247              	.LVL66:
 113:Core/Src/main.c ****   MX_USART1_UART_Init();
 1248              		.loc 1 113 3 view .LVU281
 1249 000c FFF7FEFF 		bl	MX_GPIO_Init
 1250              	.LVL67:
 114:Core/Src/main.c ****   MX_USART2_UART_Init();
 1251              		.loc 1 114 3 view .LVU282
 1252 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 1253              	.LVL68:
 115:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1254              		.loc 1 115 3 view .LVU283
 1255 0014 FFF7FEFF 		bl	MX_USART2_UART_Init
 1256              	.LVL69:
 117:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1, data_rx, 1);
 1257              		.loc 1 117 3 view .LVU284
 1258 0018 2748     		ldr	r0, .L88
 1259 001a FFF7FEFF 		bl	debug_printf
 1260              	.LVL70:
 118:Core/Src/main.c ****   UNITY_BEGIN();
 1261              		.loc 1 118 3 view .LVU285
 1262 001e 0122     		movs	r2, #1
 1263 0020 2649     		ldr	r1, .L88+4
 1264 0022 2748     		ldr	r0, .L88+8
 1265 0024 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1266              	.LVL71:
 119:Core/Src/main.c ****   RUN_TEST(test_add);
 1267              		.loc 1 119 3 view .LVU286
 1268 0028 2648     		ldr	r0, .L88+12
 1269 002a FFF7FEFF 		bl	UnityBegin
 1270              	.LVL72:
 120:Core/Src/main.c ****   UNITY_END();
 1271              		.loc 1 120 3 view .LVU287
 1272 002e 7822     		movs	r2, #120
 1273 0030 2549     		ldr	r1, .L88+16
 1274 0032 2648     		ldr	r0, .L88+20
 1275 0034 FFF7FEFF 		bl	UnityDefaultTestRun
 1276              	.LVL73:
 121:Core/Src/main.c ****   char string_buffer[256];
 1277              		.loc 1 121 3 view .LVU288
 1278 0038 FFF7FEFF 		bl	UnityEnd
 1279              	.LVL74:
 122:Core/Src/main.c **** 
 1280              		.loc 1 122 3 view .LVU289
 124:Core/Src/main.c **** 
 1281              		.loc 1 124 3 view .LVU290
 1282 003c 2448     		ldr	r0, .L88+24
 1283 003e FFF7FEFF 		bl	yahdlc_set_state
 1284              	.LVL75:
 126:Core/Src/main.c ****   control.frame = YAHDLC_FRAME_DATA;
 1285              		.loc 1 126 3 view .LVU291
 127:Core/Src/main.c ****   control.seq_no = 0;
 1286              		.loc 1 127 3 view .LVU292
 127:Core/Src/main.c ****   control.seq_no = 0;
 1287              		.loc 1 127 17 is_stmt 0 view .LVU293
 1288 0042 0024     		movs	r4, #0
 1289 0044 8DF81C41 		strb	r4, [sp, #284]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 51


 128:Core/Src/main.c **** 
 1290              		.loc 1 128 3 is_stmt 1 view .LVU294
 128:Core/Src/main.c **** 
 1291              		.loc 1 128 18 is_stmt 0 view .LVU295
 1292 0048 9DF81D31 		ldrb	r3, [sp, #285]	@ zero_extendqisi2
 1293 004c 64F30203 		bfi	r3, r4, #0, #3
 1294 0050 8DF81D31 		strb	r3, [sp, #285]
 130:Core/Src/main.c ****   uint8_t output_frame[256];
 1295              		.loc 1 130 3 is_stmt 1 view .LVU296
 130:Core/Src/main.c ****   uint8_t output_frame[256];
 1296              		.loc 1 130 11 is_stmt 0 view .LVU297
 1297 0054 1F4A     		ldr	r2, .L88+28
 1298 0056 44AB     		add	r3, sp, #272
 1299 0058 07CA     		ldm	r2, {r0, r1, r2}
 1300 005a 03C3     		stmia	r3!, {r0, r1}
 1301 005c 1A70     		strb	r2, [r3]
 131:Core/Src/main.c ****   int frame_len;
 1302              		.loc 1 131 3 is_stmt 1 view .LVU298
 132:Core/Src/main.c **** 
 1303              		.loc 1 132 3 view .LVU299
 134:Core/Src/main.c ****   for(int i=0; i<frame_len; i++)
 1304              		.loc 1 134 3 view .LVU300
 1305 005e 03AB     		add	r3, sp, #12
 1306 0060 0093     		str	r3, [sp]
 1307 0062 04AB     		add	r3, sp, #16
 1308 0064 0922     		movs	r2, #9
 1309 0066 44A9     		add	r1, sp, #272
 1310 0068 47A8     		add	r0, sp, #284
 1311 006a FFF7FEFF 		bl	yahdlc_frame_data
 1312              	.LVL76:
 135:Core/Src/main.c ****   {
 1313              		.loc 1 135 3 view .LVU301
 1314              	.LBB16:
 135:Core/Src/main.c ****   {
 1315              		.loc 1 135 7 view .LVU302
 135:Core/Src/main.c ****   {
 1316              		.loc 1 135 3 is_stmt 0 view .LVU303
 1317 006e 07E0     		b	.L81
 1318              	.LVL77:
 1319              	.L82:
 137:Core/Src/main.c ****     uart_sendchar(output_frame[i]);
 1320              		.loc 1 137 5 is_stmt 1 discriminator 3 view .LVU304
 137:Core/Src/main.c ****     uart_sendchar(output_frame[i]);
 1321              		.loc 1 137 32 is_stmt 0 discriminator 3 view .LVU305
 1322 0070 04AD     		add	r5, sp, #16
 137:Core/Src/main.c ****     uart_sendchar(output_frame[i]);
 1323              		.loc 1 137 5 discriminator 3 view .LVU306
 1324 0072 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 1325 0074 FFF7FEFF 		bl	debug_sendchar
 1326              	.LVL78:
 138:Core/Src/main.c ****   }
 1327              		.loc 1 138 5 is_stmt 1 discriminator 3 view .LVU307
 1328 0078 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 1329 007a FFF7FEFF 		bl	uart_sendchar
 1330              	.LVL79:
 135:Core/Src/main.c ****   {
 1331              		.loc 1 135 29 discriminator 3 view .LVU308
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 52


 135:Core/Src/main.c ****   {
 1332              		.loc 1 135 30 is_stmt 0 discriminator 3 view .LVU309
 1333 007e 0134     		adds	r4, r4, #1
 1334              	.LVL80:
 1335              	.L81:
 135:Core/Src/main.c ****   {
 1336              		.loc 1 135 16 is_stmt 1 discriminator 1 view .LVU310
 135:Core/Src/main.c ****   {
 1337              		.loc 1 135 17 is_stmt 0 discriminator 1 view .LVU311
 1338 0080 039B     		ldr	r3, [sp, #12]
 135:Core/Src/main.c ****   {
 1339              		.loc 1 135 3 discriminator 1 view .LVU312
 1340 0082 A342     		cmp	r3, r4
 1341 0084 F4DC     		bgt	.L82
 1342 0086 01E0     		b	.L86
 1343              	.LVL81:
 1344              	.L83:
 135:Core/Src/main.c ****   {
 1345              		.loc 1 135 3 discriminator 1 view .LVU313
 1346              	.LBE16:
 159:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 1347              		.loc 1 159 5 is_stmt 1 view .LVU314
 1348 0088 FFF7FEFF 		bl	ProcessDataFromUART
 1349              	.LVL82:
 146:Core/Src/main.c ****   {
 1350              		.loc 1 146 9 view .LVU315
 1351              	.L86:
 146:Core/Src/main.c ****   {
 1352              		.loc 1 146 3 view .LVU316
 149:Core/Src/main.c ****     {
 1353              		.loc 1 149 5 view .LVU317
 149:Core/Src/main.c ****     {
 1354              		.loc 1 149 19 is_stmt 0 view .LVU318
 1355 008c 124B     		ldr	r3, .L88+32
 1356 008e 1B88     		ldrh	r3, [r3]
 149:Core/Src/main.c ****     {
 1357              		.loc 1 149 7 view .LVU319
 1358 0090 002B     		cmp	r3, #0
 1359 0092 F9D1     		bne	.L83
 151:Core/Src/main.c ****       delaytimer = 1000;
 1360              		.loc 1 151 7 is_stmt 1 view .LVU320
 1361 0094 4021     		movs	r1, #64
 1362 0096 1148     		ldr	r0, .L88+36
 1363 0098 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1364              	.LVL83:
 152:Core/Src/main.c ****       for(int i=0; i<frame_len; i++)
 1365              		.loc 1 152 7 view .LVU321
 152:Core/Src/main.c ****       for(int i=0; i<frame_len; i++)
 1366              		.loc 1 152 18 is_stmt 0 view .LVU322
 1367 009c 0E4B     		ldr	r3, .L88+32
 1368 009e 4FF47A72 		mov	r2, #1000
 1369 00a2 1A80     		strh	r2, [r3]	@ movhi
 153:Core/Src/main.c ****       {
 1370              		.loc 1 153 7 is_stmt 1 view .LVU323
 1371              	.LBB17:
 153:Core/Src/main.c ****       {
 1372              		.loc 1 153 11 view .LVU324
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 53


 1373              	.LVL84:
 153:Core/Src/main.c ****       {
 1374              		.loc 1 153 15 is_stmt 0 view .LVU325
 1375 00a4 0024     		movs	r4, #0
 1376              	.LVL85:
 1377              	.L84:
 153:Core/Src/main.c ****       {
 1378              		.loc 1 153 20 is_stmt 1 discriminator 1 view .LVU326
 153:Core/Src/main.c ****       {
 1379              		.loc 1 153 21 is_stmt 0 discriminator 1 view .LVU327
 1380 00a6 039B     		ldr	r3, [sp, #12]
 153:Core/Src/main.c ****       {
 1381              		.loc 1 153 7 discriminator 1 view .LVU328
 1382 00a8 A342     		cmp	r3, r4
 1383 00aa EDDD     		ble	.L83
 155:Core/Src/main.c ****       }
 1384              		.loc 1 155 9 is_stmt 1 discriminator 3 view .LVU329
 1385 00ac 04AB     		add	r3, sp, #16
 1386 00ae 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 1387 00b0 FFF7FEFF 		bl	uart_sendchar
 1388              	.LVL86:
 153:Core/Src/main.c ****       {
 1389              		.loc 1 153 33 discriminator 3 view .LVU330
 153:Core/Src/main.c ****       {
 1390              		.loc 1 153 34 is_stmt 0 discriminator 3 view .LVU331
 1391 00b4 0134     		adds	r4, r4, #1
 1392              	.LVL87:
 153:Core/Src/main.c ****       {
 1393              		.loc 1 153 34 discriminator 3 view .LVU332
 1394 00b6 F6E7     		b	.L84
 1395              	.L89:
 1396              		.align	2
 1397              	.L88:
 1398 00b8 00000000 		.word	.LC5
 1399 00bc 00000000 		.word	.LANCHOR3
 1400 00c0 00000000 		.word	.LANCHOR0
 1401 00c4 14000000 		.word	.LC6
 1402 00c8 24000000 		.word	.LC7
 1403 00cc 00000000 		.word	test_add
 1404 00d0 00000000 		.word	.LANCHOR7
 1405 00d4 30000000 		.word	.LC8
 1406 00d8 00000000 		.word	.LANCHOR8
 1407 00dc 00000240 		.word	1073872896
 1408              	.LBE17:
 1409              		.cfi_endproc
 1410              	.LFE137:
 1412              		.global	state
 1413              		.global	t
 1414              		.global	buf_rx
 1415              		.global	data_rx
 1416              		.global	newReceive
 1417              		.global	delaytimer
 1418              		.global	timeoutReceive
 1419              		.global	huart2
 1420              		.global	huart1
 1421              		.section	.bss.buf_rx,"aw",%nobits
 1422              		.align	2
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 54


 1423              		.set	.LANCHOR4,. + 0
 1426              	buf_rx:
 1427 0000 00000000 		.space	256
 1427      00000000 
 1427      00000000 
 1427      00000000 
 1427      00000000 
 1428              		.section	.bss.data_rx,"aw",%nobits
 1429              		.align	2
 1430              		.set	.LANCHOR3,. + 0
 1433              	data_rx:
 1434 0000 0000     		.space	2
 1435              		.section	.bss.huart1,"aw",%nobits
 1436              		.align	2
 1437              		.set	.LANCHOR0,. + 0
 1440              	huart1:
 1441 0000 00000000 		.space	72
 1441      00000000 
 1441      00000000 
 1441      00000000 
 1441      00000000 
 1442              		.section	.bss.huart2,"aw",%nobits
 1443              		.align	2
 1444              		.set	.LANCHOR1,. + 0
 1447              	huart2:
 1448 0000 00000000 		.space	72
 1448      00000000 
 1448      00000000 
 1448      00000000 
 1448      00000000 
 1449              		.section	.bss.newReceive,"aw",%nobits
 1450              		.set	.LANCHOR6,. + 0
 1453              	newReceive:
 1454 0000 00       		.space	1
 1455              		.section	.bss.state,"aw",%nobits
 1456              		.align	2
 1457              		.set	.LANCHOR7,. + 0
 1460              	state:
 1461 0000 00000000 		.space	20
 1461      00000000 
 1461      00000000 
 1461      00000000 
 1461      00000000 
 1462              		.section	.bss.t,"aw",%nobits
 1463              		.align	1
 1464              		.set	.LANCHOR5,. + 0
 1467              	t:
 1468 0000 0000     		.space	2
 1469              		.section	.data.delaytimer,"aw"
 1470              		.align	1
 1471              		.set	.LANCHOR8,. + 0
 1474              	delaytimer:
 1475 0000 E803     		.short	1000
 1476              		.section	.data.timeoutReceive,"aw"
 1477              		.align	1
 1478              		.set	.LANCHOR2,. + 0
 1481              	timeoutReceive:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 55


 1482 0000 4600     		.short	70
 1483              		.text
 1484              	.Letext0:
 1485              		.file 3 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\includ
 1486              		.file 4 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\includ
 1487              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1488              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1489              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1490              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1491              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1492              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1493              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1494              		.file 12 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\lib\\gcc\\arm-none-e
 1495              		.file 13 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\inclu
 1496              		.file 14 "Core/test/unity_internals.h"
 1497              		.file 15 "Core/test/yahdlc.h"
 1498              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1499              		.file 17 "<built-in>"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 56


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:25     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:117    .text.MX_GPIO_Init:00000060 $d
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:123    .text.uart_printf:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:130    .text.uart_printf:00000000 uart_printf
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:219    .text.uart_printf:00000040 $d
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:224    .text.uart_sendchar:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:231    .text.uart_sendchar:00000000 uart_sendchar
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:267    .text.uart_sendchar:0000001c $d
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:272    .text.debug_printf:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:279    .text.debug_printf:00000000 debug_printf
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:368    .text.debug_printf:00000040 $d
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:373    .text.debug_sendchar:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:380    .text.debug_sendchar:00000000 debug_sendchar
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:416    .text.debug_sendchar:0000001c $d
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:421    .text.add:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:428    .text.add:00000000 add
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:446    .text.test_add:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:453    .text.test_add:00000000 test_add
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:542    .text.setUp:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:549    .text.setUp:00000000 setUp
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:562    .text.tearDown:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:569    .text.tearDown:00000000 tearDown
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:582    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:589    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:642    .text.HAL_UART_RxCpltCallback:00000034 $d
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:651    .rodata.ProcessDataFromUART.str1.4:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:667    .text.ProcessDataFromUART:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:674    .text.ProcessDataFromUART:00000000 ProcessDataFromUART
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:862    .text.ProcessDataFromUART:000000b0 $d
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:876    .text.Error_Handler:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:883    .text.Error_Handler:00000000 Error_Handler
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:915    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:921    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:976    .text.MX_USART1_UART_Init:0000002c $d
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:982    .text.MX_USART2_UART_Init:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:988    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:1043   .text.MX_USART2_UART_Init:0000002c $d
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:1049   .text.SystemClock_Config:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:1056   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:1201   .text.SystemClock_Config:00000098 $d
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:1207   .rodata.main.str1.4:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:1220   .text.main:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:1227   .text.main:00000000 main
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:1398   .text.main:000000b8 $d
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:1460   .bss.state:00000000 state
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:1467   .bss.t:00000000 t
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:1426   .bss.buf_rx:00000000 buf_rx
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:1433   .bss.data_rx:00000000 data_rx
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:1453   .bss.newReceive:00000000 newReceive
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:1474   .data.delaytimer:00000000 delaytimer
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:1481   .data.timeoutReceive:00000000 timeoutReceive
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:1447   .bss.huart2:00000000 huart2
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:1440   .bss.huart1:00000000 huart1
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:1422   .bss.buf_rx:00000000 $d
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s 			page 57


C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:1429   .bss.data_rx:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:1436   .bss.huart1:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:1443   .bss.huart2:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:1454   .bss.newReceive:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:1456   .bss.state:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:1463   .bss.t:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:1470   .data.delaytimer:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccLHsgGS.s:1477   .data.timeoutReceive:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
vsprintf
HAL_UART_Transmit
UnityAssertEqualNumber
HAL_UART_Receive_IT
memset
yahdlc_get_data
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
UnityBegin
UnityDefaultTestRun
UnityEnd
yahdlc_set_state
yahdlc_frame_data
HAL_GPIO_TogglePin
