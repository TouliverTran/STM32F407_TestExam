ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB141:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** #include <stdarg.h>
  26:Core/Src/main.c **** #include <string.h>
  27:Core/Src/main.c **** #include <assert.h>
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** #include "unity.h"
  30:Core/Src/main.c **** #include "yahdlc.h"
  31:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** UART_HandleTypeDef huart1;
  50:Core/Src/main.c **** UART_HandleTypeDef huart2;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE BEGIN PV */
  53:Core/Src/main.c **** extern uint16_t timeoutReceive = 70;
  54:Core/Src/main.c **** extern uint16_t delaytimer = 1000;
  55:Core/Src/main.c **** extern uint8_t newReceive = 0;
  56:Core/Src/main.c **** /* USER CODE END PV */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  59:Core/Src/main.c **** void SystemClock_Config(void);
  60:Core/Src/main.c **** static void MX_GPIO_Init(void);
  61:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  62:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  63:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  64:Core/Src/main.c **** int uart_printf(const char *fmt, ...);
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** int add(int a, int b);
  67:Core/Src/main.c **** void test_add(void);
  68:Core/Src/main.c **** void setUp();
  69:Core/Src/main.c **** void tearDown();
  70:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart);
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** extern int debug_printf(const char *fmt, ...);
  73:Core/Src/main.c **** extern void debug_sendchar(const char pdata);
  74:Core/Src/main.c **** void ProcessDataFromUART(void);
  75:Core/Src/main.c **** /* USER CODE END PFP */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  78:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  79:Core/Src/main.c **** uint8_t data_rx[2];
  80:Core/Src/main.c **** uint8_t buf_rx[256];
  81:Core/Src/main.c **** uint16_t t = 0;
  82:Core/Src/main.c **** yahdlc_state_t state;
  83:Core/Src/main.c **** /* USER CODE END 0 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /**
  86:Core/Src/main.c ****   * @brief  The application entry point.
  87:Core/Src/main.c ****   * @retval int
  88:Core/Src/main.c ****   */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 3


  89:Core/Src/main.c **** int main(void)
  90:Core/Src/main.c **** {
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE END 1 */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  99:Core/Src/main.c ****   HAL_Init();
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE END Init */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Configure the system clock */
 106:Core/Src/main.c ****   SystemClock_Config();
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE END SysInit */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* Initialize all configured peripherals */
 113:Core/Src/main.c ****   MX_GPIO_Init();
 114:Core/Src/main.c ****   MX_USART1_UART_Init();
 115:Core/Src/main.c ****   MX_USART2_UART_Init();
 116:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 117:Core/Src/main.c ****   // debug_printf("HELLO WORLD!!!\r\n");
 118:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1, data_rx, 1);
 119:Core/Src/main.c ****   UNITY_BEGIN();
 120:Core/Src/main.c ****   RUN_TEST(test_add);
 121:Core/Src/main.c ****   UNITY_END();
 122:Core/Src/main.c ****   char string_buffer[256];
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   yahdlc_set_state(&state);
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   yahdlc_control_t control;
 127:Core/Src/main.c ****   control.frame = YAHDLC_FRAME_DATA;
 128:Core/Src/main.c ****   control.seq_no = 0;
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   uint8_t input_data[] = "1234567\r\n";
 131:Core/Src/main.c ****   uint8_t output_frame[256];
 132:Core/Src/main.c ****   int frame_len;
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   yahdlc_frame_data(&control, input_data, sizeof(input_data)-1, output_frame, &frame_len);
 135:Core/Src/main.c ****   for(int i=0; i<frame_len; i++)
 136:Core/Src/main.c ****   {
 137:Core/Src/main.c ****     // debug_sendchar(output_frame[i]);
 138:Core/Src/main.c ****     uart_sendchar(output_frame[i]);
 139:Core/Src/main.c ****   }
 140:Core/Src/main.c **** 
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* USER CODE END 2 */
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /* Infinite loop */
 145:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 4


 146:Core/Src/main.c ****   while (1)
 147:Core/Src/main.c ****   {
 148:Core/Src/main.c ****     /* USER CODE END WHILE */
 149:Core/Src/main.c ****     if(delaytimer == 0)
 150:Core/Src/main.c ****     {
 151:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_6);
 152:Core/Src/main.c ****       delaytimer = 1000;
 153:Core/Src/main.c ****       // for(int i=0; i<frame_len; i++)
 154:Core/Src/main.c ****       // {
 155:Core/Src/main.c ****       //   uart_sendchar(output_frame[i]);
 156:Core/Src/main.c ****       // }
 157:Core/Src/main.c ****     }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****     ProcessDataFromUART();
 160:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 161:Core/Src/main.c ****   }
 162:Core/Src/main.c ****   /* USER CODE END 3 */
 163:Core/Src/main.c **** }
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** /**
 166:Core/Src/main.c ****   * @brief System Clock Configuration
 167:Core/Src/main.c ****   * @retval None
 168:Core/Src/main.c ****   */
 169:Core/Src/main.c **** void SystemClock_Config(void)
 170:Core/Src/main.c **** {
 171:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 172:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 175:Core/Src/main.c ****   */
 176:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 180:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 181:Core/Src/main.c ****   */
 182:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 183:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 190:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 191:Core/Src/main.c ****   {
 192:Core/Src/main.c ****     Error_Handler();
 193:Core/Src/main.c ****   }
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 196:Core/Src/main.c ****   */
 197:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 198:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 199:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 200:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 202:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 5


 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 205:Core/Src/main.c ****   {
 206:Core/Src/main.c ****     Error_Handler();
 207:Core/Src/main.c ****   }
 208:Core/Src/main.c **** }
 209:Core/Src/main.c **** 
 210:Core/Src/main.c **** /**
 211:Core/Src/main.c ****   * @brief USART1 Initialization Function
 212:Core/Src/main.c ****   * @param None
 213:Core/Src/main.c ****   * @retval None
 214:Core/Src/main.c ****   */
 215:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 216:Core/Src/main.c **** {
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 225:Core/Src/main.c ****   huart1.Instance = USART1;
 226:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 227:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 228:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 229:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 230:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 231:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 232:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 233:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 234:Core/Src/main.c ****   {
 235:Core/Src/main.c ****     Error_Handler();
 236:Core/Src/main.c ****   }
 237:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 240:Core/Src/main.c **** 
 241:Core/Src/main.c **** }
 242:Core/Src/main.c **** 
 243:Core/Src/main.c **** /**
 244:Core/Src/main.c ****   * @brief USART2 Initialization Function
 245:Core/Src/main.c ****   * @param None
 246:Core/Src/main.c ****   * @retval None
 247:Core/Src/main.c ****   */
 248:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 249:Core/Src/main.c **** {
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 258:Core/Src/main.c ****   huart2.Instance = USART2;
 259:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 6


 260:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 261:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 262:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 263:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 264:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 265:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 266:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 267:Core/Src/main.c ****   {
 268:Core/Src/main.c ****     Error_Handler();
 269:Core/Src/main.c ****   }
 270:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 273:Core/Src/main.c **** 
 274:Core/Src/main.c **** }
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** /**
 277:Core/Src/main.c ****   * @brief GPIO Initialization Function
 278:Core/Src/main.c ****   * @param None
 279:Core/Src/main.c ****   * @retval None
 280:Core/Src/main.c ****   */
 281:Core/Src/main.c **** static void MX_GPIO_Init(void)
 282:Core/Src/main.c **** {
  28              		.loc 1 282 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 283:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 283 3 view .LVU1
  42              		.loc 1 283 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 284:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 285:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 288:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  49              		.loc 1 288 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 288 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
  53              		.loc 1 288 3 view .LVU5
  54 0012 134B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 7


  56 0016 42F08002 		orr	r2, r2, #128
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 288 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F08002 		and	r2, r2, #128
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 288 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 288 3 view .LVU8
 289:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  66              		.loc 1 289 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 289 3 view .LVU10
  69 0026 0294     		str	r4, [sp, #8]
  70              		.loc 1 289 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F00102 		orr	r2, r2, #1
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 289 3 view .LVU12
  75 0030 1B6B     		ldr	r3, [r3, #48]
  76 0032 03F00103 		and	r3, r3, #1
  77 0036 0293     		str	r3, [sp, #8]
  78              		.loc 1 289 3 view .LVU13
  79 0038 029B     		ldr	r3, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 289 3 view .LVU14
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 292:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, GPIO_PIN_RESET);
  82              		.loc 1 292 3 view .LVU15
  83 003a 0A4D     		ldr	r5, .L3+4
  84 003c 2246     		mov	r2, r4
  85 003e 4021     		movs	r1, #64
  86 0040 2846     		mov	r0, r5
  87 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL0:
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****   /*Configure GPIO pin : PA6 */
 295:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_6;
  89              		.loc 1 295 3 view .LVU16
  90              		.loc 1 295 23 is_stmt 0 view .LVU17
  91 0046 4023     		movs	r3, #64
  92 0048 0393     		str	r3, [sp, #12]
 296:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  93              		.loc 1 296 3 is_stmt 1 view .LVU18
  94              		.loc 1 296 24 is_stmt 0 view .LVU19
  95 004a 0123     		movs	r3, #1
  96 004c 0493     		str	r3, [sp, #16]
 297:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  97              		.loc 1 297 3 is_stmt 1 view .LVU20
  98              		.loc 1 297 24 is_stmt 0 view .LVU21
  99 004e 0594     		str	r4, [sp, #20]
 298:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 100              		.loc 1 298 3 is_stmt 1 view .LVU22
 101              		.loc 1 298 25 is_stmt 0 view .LVU23
 102 0050 0694     		str	r4, [sp, #24]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 8


 299:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 103              		.loc 1 299 3 is_stmt 1 view .LVU24
 104 0052 03A9     		add	r1, sp, #12
 105 0054 2846     		mov	r0, r5
 106 0056 FFF7FEFF 		bl	HAL_GPIO_Init
 107              	.LVL1:
 300:Core/Src/main.c **** 
 301:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 302:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 303:Core/Src/main.c **** }
 108              		.loc 1 303 1 is_stmt 0 view .LVU25
 109 005a 09B0     		add	sp, sp, #36
 110              	.LCFI2:
 111              		.cfi_def_cfa_offset 12
 112              		@ sp needed
 113 005c 30BD     		pop	{r4, r5, pc}
 114              	.L4:
 115 005e 00BF     		.align	2
 116              	.L3:
 117 0060 00380240 		.word	1073887232
 118 0064 00000240 		.word	1073872896
 119              		.cfi_endproc
 120              	.LFE141:
 122              		.section	.text.uart_printf,"ax",%progbits
 123              		.align	1
 124              		.global	uart_printf
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu fpv4-sp-d16
 130              	uart_printf:
 131              	.LVL2:
 132              	.LFB142:
 304:Core/Src/main.c **** 
 305:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 306:Core/Src/main.c **** int uart_printf(const char *fmt, ...)
 307:Core/Src/main.c **** {
 133              		.loc 1 307 1 is_stmt 1 view -0
 134              		.cfi_startproc
 135              		@ args = 4, pretend = 16, frame = 1032
 136              		@ frame_needed = 0, uses_anonymous_args = 1
 137              		.loc 1 307 1 is_stmt 0 view .LVU27
 138 0000 0FB4     		push	{r0, r1, r2, r3}
 139              	.LCFI3:
 140              		.cfi_def_cfa_offset 16
 141              		.cfi_offset 0, -16
 142              		.cfi_offset 1, -12
 143              		.cfi_offset 2, -8
 144              		.cfi_offset 3, -4
 145 0002 30B5     		push	{r4, r5, lr}
 146              	.LCFI4:
 147              		.cfi_def_cfa_offset 28
 148              		.cfi_offset 4, -28
 149              		.cfi_offset 5, -24
 150              		.cfi_offset 14, -20
 151 0004 ADF20C4D 		subw	sp, sp, #1036
 152              	.LCFI5:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 9


 153              		.cfi_def_cfa_offset 1064
 154 0008 0DF58362 		add	r2, sp, #1048
 155 000c 52F8041B 		ldr	r1, [r2], #4
 308:Core/Src/main.c ****   char buf[1024];
 156              		.loc 1 308 3 is_stmt 1 view .LVU28
 309:Core/Src/main.c ****   int len, i;
 157              		.loc 1 309 3 view .LVU29
 310:Core/Src/main.c ****   va_list args;
 158              		.loc 1 310 3 view .LVU30
 311:Core/Src/main.c ****   va_start (args, fmt);
 159              		.loc 1 311 3 view .LVU31
 160 0010 0192     		str	r2, [sp, #4]
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****   len = vsprintf(buf, fmt, args);
 161              		.loc 1 313 3 view .LVU32
 162              		.loc 1 313 9 is_stmt 0 view .LVU33
 163 0012 02A8     		add	r0, sp, #8
 164 0014 FFF7FEFF 		bl	vsprintf
 165              	.LVL3:
 166 0018 0546     		mov	r5, r0
 167              	.LVL4:
 314:Core/Src/main.c ****   for (i=0; i<len; i++)
 168              		.loc 1 314 3 is_stmt 1 view .LVU34
 169              		.loc 1 314 9 is_stmt 0 view .LVU35
 170 001a 0024     		movs	r4, #0
 171              		.loc 1 314 3 view .LVU36
 172 001c 07E0     		b	.L6
 173              	.LVL5:
 174              	.L7:
 315:Core/Src/main.c ****   {
 316:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, &buf[i], sizeof(char), 10);
 175              		.loc 1 316 5 is_stmt 1 discriminator 3 view .LVU37
 176 001e 0A23     		movs	r3, #10
 177 0020 0122     		movs	r2, #1
 178 0022 02A9     		add	r1, sp, #8
 179 0024 2144     		add	r1, r1, r4
 180 0026 0648     		ldr	r0, .L9
 181 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 182              	.LVL6:
 314:Core/Src/main.c ****   for (i=0; i<len; i++)
 183              		.loc 1 314 20 discriminator 3 view .LVU38
 314:Core/Src/main.c ****   for (i=0; i<len; i++)
 184              		.loc 1 314 21 is_stmt 0 discriminator 3 view .LVU39
 185 002c 0134     		adds	r4, r4, #1
 186              	.LVL7:
 187              	.L6:
 314:Core/Src/main.c ****   for (i=0; i<len; i++)
 188              		.loc 1 314 13 is_stmt 1 discriminator 1 view .LVU40
 314:Core/Src/main.c ****   for (i=0; i<len; i++)
 189              		.loc 1 314 3 is_stmt 0 discriminator 1 view .LVU41
 190 002e AC42     		cmp	r4, r5
 191 0030 F5DB     		blt	.L7
 317:Core/Src/main.c ****   }
 318:Core/Src/main.c ****   va_end(args);
 192              		.loc 1 318 3 is_stmt 1 view .LVU42
 319:Core/Src/main.c ****   return len;
 193              		.loc 1 319 3 view .LVU43
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 10


 320:Core/Src/main.c **** }
 194              		.loc 1 320 1 is_stmt 0 view .LVU44
 195 0032 2846     		mov	r0, r5
 196 0034 0DF20C4D 		addw	sp, sp, #1036
 197              	.LCFI6:
 198              		.cfi_def_cfa_offset 28
 199              		@ sp needed
 200 0038 BDE83040 		pop	{r4, r5, lr}
 201              	.LCFI7:
 202              		.cfi_restore 14
 203              		.cfi_restore 5
 204              		.cfi_restore 4
 205              		.cfi_def_cfa_offset 16
 206              	.LVL8:
 207              		.loc 1 320 1 view .LVU45
 208 003c 04B0     		add	sp, sp, #16
 209              	.LCFI8:
 210              		.cfi_restore 3
 211              		.cfi_restore 2
 212              		.cfi_restore 1
 213              		.cfi_restore 0
 214              		.cfi_def_cfa_offset 0
 215 003e 7047     		bx	lr
 216              	.L10:
 217              		.align	2
 218              	.L9:
 219 0040 00000000 		.word	.LANCHOR0
 220              		.cfi_endproc
 221              	.LFE142:
 223              		.section	.text.uart_sendchar,"ax",%progbits
 224              		.align	1
 225              		.global	uart_sendchar
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu fpv4-sp-d16
 231              	uart_sendchar:
 232              	.LVL9:
 233              	.LFB143:
 321:Core/Src/main.c **** 
 322:Core/Src/main.c **** void uart_sendchar(const char pdata)
 323:Core/Src/main.c **** {
 234              		.loc 1 323 1 is_stmt 1 view -0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 8
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		.loc 1 323 1 is_stmt 0 view .LVU47
 239 0000 00B5     		push	{lr}
 240              	.LCFI9:
 241              		.cfi_def_cfa_offset 4
 242              		.cfi_offset 14, -4
 243 0002 83B0     		sub	sp, sp, #12
 244              	.LCFI10:
 245              		.cfi_def_cfa_offset 16
 324:Core/Src/main.c ****   char temp = pdata;
 246              		.loc 1 324 3 is_stmt 1 view .LVU48
 247              		.loc 1 324 8 is_stmt 0 view .LVU49
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 11


 248 0004 8DF80700 		strb	r0, [sp, #7]
 325:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, &temp, sizeof(char), 10);
 249              		.loc 1 325 3 is_stmt 1 view .LVU50
 250 0008 0A23     		movs	r3, #10
 251 000a 0122     		movs	r2, #1
 252 000c 0DF10701 		add	r1, sp, #7
 253 0010 0248     		ldr	r0, .L13
 254              	.LVL10:
 255              		.loc 1 325 3 is_stmt 0 view .LVU51
 256 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 257              	.LVL11:
 326:Core/Src/main.c ****   // if ('\n' == pdata)
 327:Core/Src/main.c ****   // {
 328:Core/Src/main.c ****   //   temp = '\r';
 329:Core/Src/main.c ****   //   HAL_UART_Transmit(&huart1, &temp, sizeof(char), 10);
 330:Core/Src/main.c ****   // }
 331:Core/Src/main.c **** }
 258              		.loc 1 331 1 view .LVU52
 259 0016 03B0     		add	sp, sp, #12
 260              	.LCFI11:
 261              		.cfi_def_cfa_offset 4
 262              		@ sp needed
 263 0018 5DF804FB 		ldr	pc, [sp], #4
 264              	.L14:
 265              		.align	2
 266              	.L13:
 267 001c 00000000 		.word	.LANCHOR0
 268              		.cfi_endproc
 269              	.LFE143:
 271              		.section	.text.debug_printf,"ax",%progbits
 272              		.align	1
 273              		.global	debug_printf
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 277              		.fpu fpv4-sp-d16
 279              	debug_printf:
 280              	.LVL12:
 281              	.LFB144:
 332:Core/Src/main.c **** 
 333:Core/Src/main.c **** int debug_printf(const char *fmt, ...)
 334:Core/Src/main.c **** {
 282              		.loc 1 334 1 is_stmt 1 view -0
 283              		.cfi_startproc
 284              		@ args = 4, pretend = 16, frame = 1032
 285              		@ frame_needed = 0, uses_anonymous_args = 1
 286              		.loc 1 334 1 is_stmt 0 view .LVU54
 287 0000 0FB4     		push	{r0, r1, r2, r3}
 288              	.LCFI12:
 289              		.cfi_def_cfa_offset 16
 290              		.cfi_offset 0, -16
 291              		.cfi_offset 1, -12
 292              		.cfi_offset 2, -8
 293              		.cfi_offset 3, -4
 294 0002 30B5     		push	{r4, r5, lr}
 295              	.LCFI13:
 296              		.cfi_def_cfa_offset 28
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 12


 297              		.cfi_offset 4, -28
 298              		.cfi_offset 5, -24
 299              		.cfi_offset 14, -20
 300 0004 ADF20C4D 		subw	sp, sp, #1036
 301              	.LCFI14:
 302              		.cfi_def_cfa_offset 1064
 303 0008 0DF58362 		add	r2, sp, #1048
 304 000c 52F8041B 		ldr	r1, [r2], #4
 335:Core/Src/main.c ****   char buf[1024];
 305              		.loc 1 335 3 is_stmt 1 view .LVU55
 336:Core/Src/main.c ****   int len, i;
 306              		.loc 1 336 3 view .LVU56
 337:Core/Src/main.c ****   va_list args;
 307              		.loc 1 337 3 view .LVU57
 338:Core/Src/main.c ****   va_start (args, fmt);
 308              		.loc 1 338 3 view .LVU58
 309 0010 0192     		str	r2, [sp, #4]
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   len = vsprintf(buf, fmt, args);
 310              		.loc 1 340 3 view .LVU59
 311              		.loc 1 340 9 is_stmt 0 view .LVU60
 312 0012 02A8     		add	r0, sp, #8
 313 0014 FFF7FEFF 		bl	vsprintf
 314              	.LVL13:
 315 0018 0546     		mov	r5, r0
 316              	.LVL14:
 341:Core/Src/main.c ****   for (i=0; i<len; i++)
 317              		.loc 1 341 3 is_stmt 1 view .LVU61
 318              		.loc 1 341 9 is_stmt 0 view .LVU62
 319 001a 0024     		movs	r4, #0
 320              		.loc 1 341 3 view .LVU63
 321 001c 07E0     		b	.L16
 322              	.LVL15:
 323              	.L17:
 342:Core/Src/main.c ****   {
 343:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, &buf[i], sizeof(char), 10);
 324              		.loc 1 343 5 is_stmt 1 discriminator 3 view .LVU64
 325 001e 0A23     		movs	r3, #10
 326 0020 0122     		movs	r2, #1
 327 0022 02A9     		add	r1, sp, #8
 328 0024 2144     		add	r1, r1, r4
 329 0026 0648     		ldr	r0, .L19
 330 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 331              	.LVL16:
 341:Core/Src/main.c ****   for (i=0; i<len; i++)
 332              		.loc 1 341 20 discriminator 3 view .LVU65
 341:Core/Src/main.c ****   for (i=0; i<len; i++)
 333              		.loc 1 341 21 is_stmt 0 discriminator 3 view .LVU66
 334 002c 0134     		adds	r4, r4, #1
 335              	.LVL17:
 336              	.L16:
 341:Core/Src/main.c ****   for (i=0; i<len; i++)
 337              		.loc 1 341 13 is_stmt 1 discriminator 1 view .LVU67
 341:Core/Src/main.c ****   for (i=0; i<len; i++)
 338              		.loc 1 341 3 is_stmt 0 discriminator 1 view .LVU68
 339 002e AC42     		cmp	r4, r5
 340 0030 F5DB     		blt	.L17
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 13


 344:Core/Src/main.c ****   }
 345:Core/Src/main.c ****   va_end(args);
 341              		.loc 1 345 3 is_stmt 1 view .LVU69
 346:Core/Src/main.c ****   return len;
 342              		.loc 1 346 3 view .LVU70
 347:Core/Src/main.c **** }
 343              		.loc 1 347 1 is_stmt 0 view .LVU71
 344 0032 2846     		mov	r0, r5
 345 0034 0DF20C4D 		addw	sp, sp, #1036
 346              	.LCFI15:
 347              		.cfi_def_cfa_offset 28
 348              		@ sp needed
 349 0038 BDE83040 		pop	{r4, r5, lr}
 350              	.LCFI16:
 351              		.cfi_restore 14
 352              		.cfi_restore 5
 353              		.cfi_restore 4
 354              		.cfi_def_cfa_offset 16
 355              	.LVL18:
 356              		.loc 1 347 1 view .LVU72
 357 003c 04B0     		add	sp, sp, #16
 358              	.LCFI17:
 359              		.cfi_restore 3
 360              		.cfi_restore 2
 361              		.cfi_restore 1
 362              		.cfi_restore 0
 363              		.cfi_def_cfa_offset 0
 364 003e 7047     		bx	lr
 365              	.L20:
 366              		.align	2
 367              	.L19:
 368 0040 00000000 		.word	.LANCHOR1
 369              		.cfi_endproc
 370              	.LFE144:
 372              		.section	.text.debug_sendchar,"ax",%progbits
 373              		.align	1
 374              		.global	debug_sendchar
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu fpv4-sp-d16
 380              	debug_sendchar:
 381              	.LVL19:
 382              	.LFB145:
 348:Core/Src/main.c **** 
 349:Core/Src/main.c **** void debug_sendchar(const char pdata)
 350:Core/Src/main.c **** {
 383              		.loc 1 350 1 is_stmt 1 view -0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 8
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387              		.loc 1 350 1 is_stmt 0 view .LVU74
 388 0000 00B5     		push	{lr}
 389              	.LCFI18:
 390              		.cfi_def_cfa_offset 4
 391              		.cfi_offset 14, -4
 392 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 14


 393              	.LCFI19:
 394              		.cfi_def_cfa_offset 16
 351:Core/Src/main.c ****   char temp = pdata;
 395              		.loc 1 351 3 is_stmt 1 view .LVU75
 396              		.loc 1 351 8 is_stmt 0 view .LVU76
 397 0004 8DF80700 		strb	r0, [sp, #7]
 352:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, &temp, sizeof(char), 10);
 398              		.loc 1 352 3 is_stmt 1 view .LVU77
 399 0008 0A23     		movs	r3, #10
 400 000a 0122     		movs	r2, #1
 401 000c 0DF10701 		add	r1, sp, #7
 402 0010 0248     		ldr	r0, .L23
 403              	.LVL20:
 404              		.loc 1 352 3 is_stmt 0 view .LVU78
 405 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 406              	.LVL21:
 353:Core/Src/main.c ****   // if ('\n' == pdata)
 354:Core/Src/main.c ****   // {
 355:Core/Src/main.c ****   //   temp = '\r';
 356:Core/Src/main.c ****   //   HAL_UART_Transmit(&huart1, &temp, sizeof(char), 10);
 357:Core/Src/main.c ****   // }
 358:Core/Src/main.c **** }
 407              		.loc 1 358 1 view .LVU79
 408 0016 03B0     		add	sp, sp, #12
 409              	.LCFI20:
 410              		.cfi_def_cfa_offset 4
 411              		@ sp needed
 412 0018 5DF804FB 		ldr	pc, [sp], #4
 413              	.L24:
 414              		.align	2
 415              	.L23:
 416 001c 00000000 		.word	.LANCHOR1
 417              		.cfi_endproc
 418              	.LFE145:
 420              		.section	.text.add,"ax",%progbits
 421              		.align	1
 422              		.global	add
 423              		.syntax unified
 424              		.thumb
 425              		.thumb_func
 426              		.fpu fpv4-sp-d16
 428              	add:
 429              	.LVL22:
 430              	.LFB146:
 359:Core/Src/main.c **** 
 360:Core/Src/main.c **** int add(int a, int b){
 431              		.loc 1 360 22 is_stmt 1 view -0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435              		@ link register save eliminated.
 361:Core/Src/main.c ****     return a + b;
 436              		.loc 1 361 5 view .LVU81
 362:Core/Src/main.c **** }
 437              		.loc 1 362 1 is_stmt 0 view .LVU82
 438 0000 0844     		add	r0, r0, r1
 439              	.LVL23:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 15


 440              		.loc 1 362 1 view .LVU83
 441 0002 7047     		bx	lr
 442              		.cfi_endproc
 443              	.LFE146:
 445              		.section	.text.test_add,"ax",%progbits
 446              		.align	1
 447              		.global	test_add
 448              		.syntax unified
 449              		.thumb
 450              		.thumb_func
 451              		.fpu fpv4-sp-d16
 453              	test_add:
 454              	.LFB147:
 363:Core/Src/main.c **** 
 364:Core/Src/main.c **** void test_add(void){
 455              		.loc 1 364 20 is_stmt 1 view -0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 0
 458              		@ frame_needed = 0, uses_anonymous_args = 0
 459 0000 70B5     		push	{r4, r5, r6, lr}
 460              	.LCFI21:
 461              		.cfi_def_cfa_offset 16
 462              		.cfi_offset 4, -16
 463              		.cfi_offset 5, -12
 464              		.cfi_offset 6, -8
 465              		.cfi_offset 14, -4
 466 0002 82B0     		sub	sp, sp, #8
 467              	.LCFI22:
 468              		.cfi_def_cfa_offset 24
 365:Core/Src/main.c ****     for(int i=0; i<9; i++){
 469              		.loc 1 365 5 view .LVU85
 470              	.LBB6:
 471              		.loc 1 365 9 view .LVU86
 472              	.LVL24:
 473              		.loc 1 365 13 is_stmt 0 view .LVU87
 474 0004 0025     		movs	r5, #0
 475              		.loc 1 365 5 view .LVU88
 476 0006 11E0     		b	.L27
 477              	.LVL25:
 478              	.L28:
 479              	.LBB7:
 366:Core/Src/main.c ****         for(int j=0; j<9; j++){
 367:Core/Src/main.c ****             TEST_ASSERT_EQUAL_INT((i+j), add(i,j));
 480              		.loc 1 367 13 is_stmt 1 discriminator 3 view .LVU89
 481 0008 2E19     		adds	r6, r5, r4
 482 000a 2146     		mov	r1, r4
 483 000c 2846     		mov	r0, r5
 484 000e FFF7FEFF 		bl	add
 485              	.LVL26:
 486 0012 0146     		mov	r1, r0
 487 0014 1423     		movs	r3, #20
 488 0016 0093     		str	r3, [sp]
 489 0018 40F26F13 		movw	r3, #367
 490 001c 0022     		movs	r2, #0
 491 001e 3046     		mov	r0, r6
 492 0020 FFF7FEFF 		bl	UnityAssertEqualNumber
 493              	.LVL27:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 16


 366:Core/Src/main.c ****         for(int j=0; j<9; j++){
 494              		.loc 1 366 27 discriminator 3 view .LVU90
 366:Core/Src/main.c ****         for(int j=0; j<9; j++){
 495              		.loc 1 366 28 is_stmt 0 discriminator 3 view .LVU91
 496 0024 0134     		adds	r4, r4, #1
 497              	.LVL28:
 498              	.L29:
 366:Core/Src/main.c ****         for(int j=0; j<9; j++){
 499              		.loc 1 366 22 is_stmt 1 discriminator 1 view .LVU92
 366:Core/Src/main.c ****         for(int j=0; j<9; j++){
 500              		.loc 1 366 9 is_stmt 0 discriminator 1 view .LVU93
 501 0026 082C     		cmp	r4, #8
 502 0028 EEDD     		ble	.L28
 503              	.LBE7:
 365:Core/Src/main.c ****     for(int i=0; i<9; i++){
 504              		.loc 1 365 23 is_stmt 1 discriminator 2 view .LVU94
 365:Core/Src/main.c ****     for(int i=0; i<9; i++){
 505              		.loc 1 365 24 is_stmt 0 discriminator 2 view .LVU95
 506 002a 0135     		adds	r5, r5, #1
 507              	.LVL29:
 508              	.L27:
 365:Core/Src/main.c ****     for(int i=0; i<9; i++){
 509              		.loc 1 365 18 is_stmt 1 discriminator 1 view .LVU96
 365:Core/Src/main.c ****     for(int i=0; i<9; i++){
 510              		.loc 1 365 5 is_stmt 0 discriminator 1 view .LVU97
 511 002c 082D     		cmp	r5, #8
 512 002e 01DC     		bgt	.L32
 513              	.LBB8:
 366:Core/Src/main.c ****         for(int j=0; j<9; j++){
 514              		.loc 1 366 17 view .LVU98
 515 0030 0024     		movs	r4, #0
 516 0032 F8E7     		b	.L29
 517              	.L32:
 518              	.LBE8:
 519              	.LBE6:
 368:Core/Src/main.c ****             // TEST_ASSERT_EQUAL_INT((i+j+1), add(i,j));
 369:Core/Src/main.c ****         }
 370:Core/Src/main.c ****     }
 371:Core/Src/main.c **** }
 520              		.loc 1 371 1 view .LVU99
 521 0034 02B0     		add	sp, sp, #8
 522              	.LCFI23:
 523              		.cfi_def_cfa_offset 16
 524              		@ sp needed
 525 0036 70BD     		pop	{r4, r5, r6, pc}
 526              		.loc 1 371 1 view .LVU100
 527              		.cfi_endproc
 528              	.LFE147:
 530              		.section	.text.setUp,"ax",%progbits
 531              		.align	1
 532              		.global	setUp
 533              		.syntax unified
 534              		.thumb
 535              		.thumb_func
 536              		.fpu fpv4-sp-d16
 538              	setUp:
 539              	.LFB148:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 17


 372:Core/Src/main.c **** 
 373:Core/Src/main.c **** void setUp(){
 540              		.loc 1 373 13 is_stmt 1 view -0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 0
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 544              		@ link register save eliminated.
 374:Core/Src/main.c **** 
 375:Core/Src/main.c **** }
 545              		.loc 1 375 1 view .LVU102
 546 0000 7047     		bx	lr
 547              		.cfi_endproc
 548              	.LFE148:
 550              		.section	.text.tearDown,"ax",%progbits
 551              		.align	1
 552              		.global	tearDown
 553              		.syntax unified
 554              		.thumb
 555              		.thumb_func
 556              		.fpu fpv4-sp-d16
 558              	tearDown:
 559              	.LFB149:
 376:Core/Src/main.c **** void tearDown(){
 560              		.loc 1 376 16 view -0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 0
 563              		@ frame_needed = 0, uses_anonymous_args = 0
 564              		@ link register save eliminated.
 377:Core/Src/main.c **** 
 378:Core/Src/main.c **** }
 565              		.loc 1 378 1 view .LVU104
 566 0000 7047     		bx	lr
 567              		.cfi_endproc
 568              	.LFE149:
 570              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 571              		.align	1
 572              		.global	HAL_UART_RxCpltCallback
 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 576              		.fpu fpv4-sp-d16
 578              	HAL_UART_RxCpltCallback:
 579              	.LVL30:
 580              	.LFB150:
 379:Core/Src/main.c **** 
 380:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 381:Core/Src/main.c **** {
 581              		.loc 1 381 1 view -0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              		.loc 1 381 1 is_stmt 0 view .LVU106
 586 0000 08B5     		push	{r3, lr}
 587              	.LCFI24:
 588              		.cfi_def_cfa_offset 8
 589              		.cfi_offset 3, -8
 590              		.cfi_offset 14, -4
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 18


 382:Core/Src/main.c ****   timeoutReceive = 70;
 591              		.loc 1 382 3 is_stmt 1 view .LVU107
 592              		.loc 1 382 18 is_stmt 0 view .LVU108
 593 0002 0C4B     		ldr	r3, .L38
 594 0004 4622     		movs	r2, #70
 595 0006 1A80     		strh	r2, [r3]	@ movhi
 383:Core/Src/main.c ****   // debug_sendchar(data_rx[0]);
 384:Core/Src/main.c ****   memcpy(buf_rx+t, data_rx, 1);
 596              		.loc 1 384 3 is_stmt 1 view .LVU109
 597 0008 0B4B     		ldr	r3, .L38+4
 598 000a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 599              	.LVL31:
 600              		.loc 1 384 3 is_stmt 0 view .LVU110
 601 000c 0B4A     		ldr	r2, .L38+8
 602 000e 1388     		ldrh	r3, [r2]
 603 0010 0B49     		ldr	r1, .L38+12
 604 0012 C854     		strb	r0, [r1, r3]
 385:Core/Src/main.c ****   if (++t >= 256) t = 0;
 605              		.loc 1 385 3 is_stmt 1 view .LVU111
 606              		.loc 1 385 7 is_stmt 0 view .LVU112
 607 0014 1388     		ldrh	r3, [r2]
 608 0016 0133     		adds	r3, r3, #1
 609 0018 9BB2     		uxth	r3, r3
 610              		.loc 1 385 6 view .LVU113
 611 001a 1380     		strh	r3, [r2]	@ movhi
 612 001c FF2B     		cmp	r3, #255
 613 001e 02D9     		bls	.L36
 614              		.loc 1 385 19 is_stmt 1 discriminator 1 view .LVU114
 615              		.loc 1 385 21 is_stmt 0 discriminator 1 view .LVU115
 616 0020 1346     		mov	r3, r2
 617 0022 0022     		movs	r2, #0
 618 0024 1A80     		strh	r2, [r3]	@ movhi
 619              	.L36:
 386:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1, data_rx, 1);
 620              		.loc 1 386 3 is_stmt 1 view .LVU116
 621 0026 0122     		movs	r2, #1
 622 0028 0349     		ldr	r1, .L38+4
 623 002a 0648     		ldr	r0, .L38+16
 624 002c FFF7FEFF 		bl	HAL_UART_Receive_IT
 625              	.LVL32:
 387:Core/Src/main.c **** }
 626              		.loc 1 387 1 is_stmt 0 view .LVU117
 627 0030 08BD     		pop	{r3, pc}
 628              	.L39:
 629 0032 00BF     		.align	2
 630              	.L38:
 631 0034 00000000 		.word	.LANCHOR2
 632 0038 00000000 		.word	.LANCHOR3
 633 003c 00000000 		.word	.LANCHOR5
 634 0040 00000000 		.word	.LANCHOR4
 635 0044 00000000 		.word	.LANCHOR0
 636              		.cfi_endproc
 637              	.LFE150:
 639              		.section	.rodata.ProcessDataFromUART.str1.4,"aMS",%progbits,1
 640              		.align	2
 641              	.LC0:
 642 0000 0D0A636F 		.ascii	"\015\012control field: frame = %d, seq_no = %d\015\012"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 19


 642      6E74726F 
 642      6C206669 
 642      656C643A 
 642      20667261 
 643 002a 00       		.ascii	"\000"
 644 002b 00       		.align	2
 645              	.LC1:
 646 002c 52656365 		.ascii	"Received data: \015\012\000"
 646      69766564 
 646      20646174 
 646      613A200D 
 646      0A00
 647              		.section	.text.ProcessDataFromUART,"ax",%progbits
 648              		.align	1
 649              		.global	ProcessDataFromUART
 650              		.syntax unified
 651              		.thumb
 652              		.thumb_func
 653              		.fpu fpv4-sp-d16
 655              	ProcessDataFromUART:
 656              	.LFB151:
 388:Core/Src/main.c **** 
 389:Core/Src/main.c **** void ProcessDataFromUART(void)
 390:Core/Src/main.c **** {
 657              		.loc 1 390 1 is_stmt 1 view -0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 528
 660              		@ frame_needed = 0, uses_anonymous_args = 0
 391:Core/Src/main.c **** 	/* Neu khong co du lieu thi khong xu ly */
 392:Core/Src/main.c **** 	if(newReceive == 0)
 661              		.loc 1 392 2 view .LVU119
 662              		.loc 1 392 16 is_stmt 0 view .LVU120
 663 0000 384B     		ldr	r3, .L56
 664 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 665              		.loc 1 392 4 view .LVU121
 666 0004 03B9     		cbnz	r3, .L55
 667 0006 7047     		bx	lr
 668              	.L55:
 390:Core/Src/main.c **** 	/* Neu khong co du lieu thi khong xu ly */
 669              		.loc 1 390 1 view .LVU122
 670 0008 10B5     		push	{r4, lr}
 671              	.LCFI25:
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 4, -8
 674              		.cfi_offset 14, -4
 675 000a ADF5067D 		sub	sp, sp, #536
 676              	.LCFI26:
 677              		.cfi_def_cfa_offset 544
 393:Core/Src/main.c **** 		return;
 394:Core/Src/main.c **** 	
 395:Core/Src/main.c **** 	/* Xoa co bao co du lieu */
 396:Core/Src/main.c **** 	newReceive = 0;
 678              		.loc 1 396 2 is_stmt 1 view .LVU123
 679              		.loc 1 396 13 is_stmt 0 view .LVU124
 680 000e 0021     		movs	r1, #0
 681 0010 344B     		ldr	r3, .L56
 682 0012 1970     		strb	r1, [r3]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 20


 397:Core/Src/main.c **** 	/* Xu ly lenh */
 398:Core/Src/main.c ****   int ret;
 683              		.loc 1 398 3 is_stmt 1 view .LVU125
 399:Core/Src/main.c ****   uint8_t received_data[256] = {0};
 684              		.loc 1 399 3 view .LVU126
 685              		.loc 1 399 11 is_stmt 0 view .LVU127
 686 0014 4691     		str	r1, [sp, #280]
 687 0016 FC22     		movs	r2, #252
 688 0018 47A8     		add	r0, sp, #284
 689 001a FFF7FEFF 		bl	memset
 690              	.LVL33:
 400:Core/Src/main.c ****   int received_len = t;
 691              		.loc 1 400 3 is_stmt 1 view .LVU128
 692              		.loc 1 400 7 is_stmt 0 view .LVU129
 693 001e 324B     		ldr	r3, .L56+4
 694 0020 1A88     		ldrh	r2, [r3]
 695 0022 45AB     		add	r3, sp, #276
 696 0024 4592     		str	r2, [sp, #276]
 401:Core/Src/main.c ****   yahdlc_control_t control;
 697              		.loc 1 401 3 is_stmt 1 view .LVU130
 402:Core/Src/main.c ****   ret = yahdlc_get_data(&control, buf_rx, t, received_data, &received_len);
 698              		.loc 1 402 3 view .LVU131
 699              		.loc 1 402 9 is_stmt 0 view .LVU132
 700 0026 0093     		str	r3, [sp]
 701 0028 46AB     		add	r3, sp, #280
 702 002a 3049     		ldr	r1, .L56+8
 703 002c 44A8     		add	r0, sp, #272
 704 002e FFF7FEFF 		bl	yahdlc_get_data
 705              	.LVL34:
 403:Core/Src/main.c ****   if (ret == 0) {
 706              		.loc 1 403 3 is_stmt 1 view .LVU133
 707              		.loc 1 403 6 is_stmt 0 view .LVU134
 708 0032 0446     		mov	r4, r0
 709 0034 0028     		cmp	r0, #0
 710 0036 39D1     		bne	.L43
 711              	.LBB9:
 404:Core/Src/main.c ****     debug_printf("\r\ncontrol field: frame = %d, seq_no = %d\r\n", control.frame, control.seq_no);
 712              		.loc 1 404 5 is_stmt 1 view .LVU135
 713              		.loc 1 404 90 is_stmt 0 view .LVU136
 714 0038 9DF81121 		ldrb	r2, [sp, #273]	@ zero_extendqisi2
 715              		.loc 1 404 5 view .LVU137
 716 003c 02F00702 		and	r2, r2, #7
 717 0040 9DF81011 		ldrb	r1, [sp, #272]	@ zero_extendqisi2
 718 0044 2A48     		ldr	r0, .L56+12
 719              	.LVL35:
 720              		.loc 1 404 5 view .LVU138
 721 0046 FFF7FEFF 		bl	debug_printf
 722              	.LVL36:
 405:Core/Src/main.c ****     debug_printf("Received data: \r\n");
 723              		.loc 1 405 5 is_stmt 1 view .LVU139
 724 004a 2A48     		ldr	r0, .L56+16
 725 004c FFF7FEFF 		bl	debug_printf
 726              	.LVL37:
 406:Core/Src/main.c ****     for(int i=0; i<received_len; i++)
 727              		.loc 1 406 5 view .LVU140
 728              	.LBB10:
 729              		.loc 1 406 9 view .LVU141
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 21


 730              		.loc 1 406 5 is_stmt 0 view .LVU142
 731 0050 04E0     		b	.L44
 732              	.LVL38:
 733              	.L45:
 407:Core/Src/main.c ****     {
 408:Core/Src/main.c ****       debug_sendchar(received_data[i]);
 734              		.loc 1 408 7 is_stmt 1 discriminator 3 view .LVU143
 735 0052 46AB     		add	r3, sp, #280
 736 0054 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 737 0056 FFF7FEFF 		bl	debug_sendchar
 738              	.LVL39:
 406:Core/Src/main.c ****     for(int i=0; i<received_len; i++)
 739              		.loc 1 406 34 discriminator 3 view .LVU144
 406:Core/Src/main.c ****     for(int i=0; i<received_len; i++)
 740              		.loc 1 406 35 is_stmt 0 discriminator 3 view .LVU145
 741 005a 0134     		adds	r4, r4, #1
 742              	.LVL40:
 743              	.L44:
 406:Core/Src/main.c ****     for(int i=0; i<received_len; i++)
 744              		.loc 1 406 18 is_stmt 1 discriminator 1 view .LVU146
 406:Core/Src/main.c ****     for(int i=0; i<received_len; i++)
 745              		.loc 1 406 19 is_stmt 0 discriminator 1 view .LVU147
 746 005c 459B     		ldr	r3, [sp, #276]
 406:Core/Src/main.c ****     for(int i=0; i<received_len; i++)
 747              		.loc 1 406 5 discriminator 1 view .LVU148
 748 005e A342     		cmp	r3, r4
 749 0060 F7DC     		bgt	.L45
 750              	.LBE10:
 409:Core/Src/main.c ****     }
 410:Core/Src/main.c ****     control.frame = YAHDLC_FRAME_ACK;
 751              		.loc 1 410 5 is_stmt 1 view .LVU149
 752              		.loc 1 410 19 is_stmt 0 view .LVU150
 753 0062 0123     		movs	r3, #1
 754 0064 8DF81031 		strb	r3, [sp, #272]
 411:Core/Src/main.c ****     control.seq_no += 1;
 755              		.loc 1 411 5 is_stmt 1 view .LVU151
 756              		.loc 1 411 20 is_stmt 0 view .LVU152
 757 0068 9DF81131 		ldrb	r3, [sp, #273]	@ zero_extendqisi2
 758 006c C3F30202 		ubfx	r2, r3, #0, #3
 759 0070 0132     		adds	r2, r2, #1
 760 0072 62F30203 		bfi	r3, r2, #0, #3
 761 0076 8DF81131 		strb	r3, [sp, #273]
 412:Core/Src/main.c ****     // Generate the ACK frame
 413:Core/Src/main.c ****     char frame[256];
 762              		.loc 1 413 5 is_stmt 1 view .LVU153
 414:Core/Src/main.c ****     unsigned int frame_len;
 763              		.loc 1 414 5 view .LVU154
 415:Core/Src/main.c ****     yahdlc_frame_data(&control, NULL, 0, frame, &frame_len);
 764              		.loc 1 415 5 view .LVU155
 765 007a 03AB     		add	r3, sp, #12
 766 007c 0093     		str	r3, [sp]
 767 007e 04AB     		add	r3, sp, #16
 768 0080 0022     		movs	r2, #0
 769 0082 1146     		mov	r1, r2
 770 0084 44A8     		add	r0, sp, #272
 771 0086 FFF7FEFF 		bl	yahdlc_frame_data
 772              	.LVL41:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 22


 416:Core/Src/main.c ****     for (unsigned int i = 0; i < frame_len; i++) {
 773              		.loc 1 416 5 view .LVU156
 774              	.LBB11:
 775              		.loc 1 416 10 view .LVU157
 776              		.loc 1 416 23 is_stmt 0 view .LVU158
 777 008a 0023     		movs	r3, #0
 778              		.loc 1 416 5 view .LVU159
 779 008c 00E0     		b	.L46
 780              	.LVL42:
 781              	.L47:
 417:Core/Src/main.c ****       // uart_sendchar(frame[i]);
 418:Core/Src/main.c ****     }
 782              		.loc 1 418 5 is_stmt 1 discriminator 3 view .LVU160
 416:Core/Src/main.c ****     for (unsigned int i = 0; i < frame_len; i++) {
 783              		.loc 1 416 45 discriminator 3 view .LVU161
 416:Core/Src/main.c ****     for (unsigned int i = 0; i < frame_len; i++) {
 784              		.loc 1 416 46 is_stmt 0 discriminator 3 view .LVU162
 785 008e 0133     		adds	r3, r3, #1
 786              	.LVL43:
 787              	.L46:
 416:Core/Src/main.c ****     for (unsigned int i = 0; i < frame_len; i++) {
 788              		.loc 1 416 30 is_stmt 1 discriminator 1 view .LVU163
 416:Core/Src/main.c ****     for (unsigned int i = 0; i < frame_len; i++) {
 789              		.loc 1 416 32 is_stmt 0 discriminator 1 view .LVU164
 790 0090 039A     		ldr	r2, [sp, #12]
 416:Core/Src/main.c ****     for (unsigned int i = 0; i < frame_len; i++) {
 791              		.loc 1 416 5 discriminator 1 view .LVU165
 792 0092 9A42     		cmp	r2, r3
 793 0094 FBD8     		bhi	.L47
 794              	.LVL44:
 795              	.L48:
 416:Core/Src/main.c ****     for (unsigned int i = 0; i < frame_len; i++) {
 796              		.loc 1 416 5 discriminator 1 view .LVU166
 797              	.LBE11:
 798              	.LBE9:
 419:Core/Src/main.c ****   } else {
 420:Core/Src/main.c ****       // debug_printf("Error decoding frame %d\r\n", ret);
 421:Core/Src/main.c ****       // debug_printf("t = %d buf_rx:\r\n", t);
 422:Core/Src/main.c ****       // for(int i=0; i<t; i++)
 423:Core/Src/main.c ****       // {
 424:Core/Src/main.c ****       //   debug_printf("0x%02x, ", buf_rx[i]);
 425:Core/Src/main.c ****       // }
 426:Core/Src/main.c ****       // debug_printf("\r\nreceived_len = %d received_data:\r\n", received_len);
 427:Core/Src/main.c ****       // for(int i=0; i<received_len; i++)
 428:Core/Src/main.c ****       // {
 429:Core/Src/main.c ****       //   debug_printf("0x%02x, ", received_data[i]);
 430:Core/Src/main.c ****       // }
 431:Core/Src/main.c ****       yahdlc_control_t control;
 432:Core/Src/main.c ****       control.frame = YAHDLC_FRAME_NACK;
 433:Core/Src/main.c ****       control.seq_no = 0;
 434:Core/Src/main.c ****       // Generate the ACK frame
 435:Core/Src/main.c ****       char frame[256];
 436:Core/Src/main.c ****       unsigned int frame_len;
 437:Core/Src/main.c ****       yahdlc_frame_data(&control, NULL, 0, frame, &frame_len);
 438:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 439:Core/Src/main.c ****         uart_sendchar(frame[i]);
 440:Core/Src/main.c ****       }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 23


 441:Core/Src/main.c ****   }
 442:Core/Src/main.c **** 	/* Xoa bo dem nhan */
 443:Core/Src/main.c **** 	t = 0;
 799              		.loc 1 443 2 is_stmt 1 discriminator 1 view .LVU167
 800              		.loc 1 443 4 is_stmt 0 discriminator 1 view .LVU168
 801 0096 0021     		movs	r1, #0
 802 0098 134B     		ldr	r3, .L56+4
 803 009a 1980     		strh	r1, [r3]	@ movhi
 444:Core/Src/main.c **** 	memset(buf_rx, 0, 256);
 804              		.loc 1 444 2 is_stmt 1 discriminator 1 view .LVU169
 805 009c 4FF48072 		mov	r2, #256
 806 00a0 1248     		ldr	r0, .L56+8
 807 00a2 FFF7FEFF 		bl	memset
 808              	.LVL45:
 445:Core/Src/main.c **** }
 809              		.loc 1 445 1 is_stmt 0 discriminator 1 view .LVU170
 810 00a6 0DF5067D 		add	sp, sp, #536
 811              	.LCFI27:
 812              		.cfi_remember_state
 813              		.cfi_def_cfa_offset 8
 814              		@ sp needed
 815 00aa 10BD     		pop	{r4, pc}
 816              	.LVL46:
 817              	.L43:
 818              	.LCFI28:
 819              		.cfi_restore_state
 820              	.LBB12:
 431:Core/Src/main.c ****       control.frame = YAHDLC_FRAME_NACK;
 821              		.loc 1 431 7 is_stmt 1 view .LVU171
 432:Core/Src/main.c ****       control.seq_no = 0;
 822              		.loc 1 432 7 view .LVU172
 432:Core/Src/main.c ****       control.seq_no = 0;
 823              		.loc 1 432 21 is_stmt 0 view .LVU173
 824 00ac 0223     		movs	r3, #2
 825 00ae 8DF80830 		strb	r3, [sp, #8]
 433:Core/Src/main.c ****       // Generate the ACK frame
 826              		.loc 1 433 7 is_stmt 1 view .LVU174
 433:Core/Src/main.c ****       // Generate the ACK frame
 827              		.loc 1 433 22 is_stmt 0 view .LVU175
 828 00b2 9DF80930 		ldrb	r3, [sp, #9]	@ zero_extendqisi2
 829 00b6 6FF30203 		bfc	r3, #0, #3
 830 00ba 8DF80930 		strb	r3, [sp, #9]
 435:Core/Src/main.c ****       unsigned int frame_len;
 831              		.loc 1 435 7 is_stmt 1 view .LVU176
 436:Core/Src/main.c ****       yahdlc_frame_data(&control, NULL, 0, frame, &frame_len);
 832              		.loc 1 436 7 view .LVU177
 437:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 833              		.loc 1 437 7 view .LVU178
 834 00be 03AB     		add	r3, sp, #12
 835 00c0 0093     		str	r3, [sp]
 836 00c2 04AB     		add	r3, sp, #16
 837 00c4 0022     		movs	r2, #0
 838 00c6 1146     		mov	r1, r2
 839 00c8 02A8     		add	r0, sp, #8
 840              	.LVL47:
 437:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 841              		.loc 1 437 7 is_stmt 0 view .LVU179
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 24


 842 00ca FFF7FEFF 		bl	yahdlc_frame_data
 843              	.LVL48:
 438:Core/Src/main.c ****         uart_sendchar(frame[i]);
 844              		.loc 1 438 7 is_stmt 1 view .LVU180
 845              	.LBB13:
 438:Core/Src/main.c ****         uart_sendchar(frame[i]);
 846              		.loc 1 438 12 view .LVU181
 438:Core/Src/main.c ****         uart_sendchar(frame[i]);
 847              		.loc 1 438 25 is_stmt 0 view .LVU182
 848 00ce 0024     		movs	r4, #0
 849              	.LVL49:
 438:Core/Src/main.c ****         uart_sendchar(frame[i]);
 850              		.loc 1 438 7 view .LVU183
 851 00d0 04E0     		b	.L49
 852              	.LVL50:
 853              	.L50:
 439:Core/Src/main.c ****       }
 854              		.loc 1 439 9 is_stmt 1 discriminator 3 view .LVU184
 855 00d2 04AB     		add	r3, sp, #16
 856 00d4 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 857 00d6 FFF7FEFF 		bl	uart_sendchar
 858              	.LVL51:
 438:Core/Src/main.c ****         uart_sendchar(frame[i]);
 859              		.loc 1 438 47 discriminator 3 view .LVU185
 438:Core/Src/main.c ****         uart_sendchar(frame[i]);
 860              		.loc 1 438 48 is_stmt 0 discriminator 3 view .LVU186
 861 00da 0134     		adds	r4, r4, #1
 862              	.LVL52:
 863              	.L49:
 438:Core/Src/main.c ****         uart_sendchar(frame[i]);
 864              		.loc 1 438 32 is_stmt 1 discriminator 1 view .LVU187
 438:Core/Src/main.c ****         uart_sendchar(frame[i]);
 865              		.loc 1 438 34 is_stmt 0 discriminator 1 view .LVU188
 866 00dc 039B     		ldr	r3, [sp, #12]
 438:Core/Src/main.c ****         uart_sendchar(frame[i]);
 867              		.loc 1 438 7 discriminator 1 view .LVU189
 868 00de A342     		cmp	r3, r4
 869 00e0 F7D8     		bhi	.L50
 870 00e2 D8E7     		b	.L48
 871              	.L57:
 872              		.align	2
 873              	.L56:
 874 00e4 00000000 		.word	.LANCHOR6
 875 00e8 00000000 		.word	.LANCHOR5
 876 00ec 00000000 		.word	.LANCHOR4
 877 00f0 00000000 		.word	.LC0
 878 00f4 2C000000 		.word	.LC1
 879              	.LBE13:
 880              	.LBE12:
 881              		.cfi_endproc
 882              	.LFE151:
 884              		.section	.text.Error_Handler,"ax",%progbits
 885              		.align	1
 886              		.global	Error_Handler
 887              		.syntax unified
 888              		.thumb
 889              		.thumb_func
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 25


 890              		.fpu fpv4-sp-d16
 892              	Error_Handler:
 893              	.LFB152:
 446:Core/Src/main.c **** 
 447:Core/Src/main.c **** /* USER CODE END 4 */
 448:Core/Src/main.c **** 
 449:Core/Src/main.c **** /**
 450:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 451:Core/Src/main.c ****   * @retval None
 452:Core/Src/main.c ****   */
 453:Core/Src/main.c **** void Error_Handler(void)
 454:Core/Src/main.c **** {
 894              		.loc 1 454 1 is_stmt 1 view -0
 895              		.cfi_startproc
 896              		@ Volatile: function does not return.
 897              		@ args = 0, pretend = 0, frame = 0
 898              		@ frame_needed = 0, uses_anonymous_args = 0
 899              		@ link register save eliminated.
 455:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 456:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 457:Core/Src/main.c ****   __disable_irq();
 900              		.loc 1 457 3 view .LVU191
 901              	.LBB14:
 902              	.LBI14:
 903              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 26


  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 27


  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 28


 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 29


 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 30


 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 31


 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 32


 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 33


 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 34


 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 35


 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 36


 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 37


 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 38


 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 39


 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 40


 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 41


 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 42


 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 904              		.loc 2 960 27 view .LVU192
 905              	.LBB15:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 906              		.loc 2 962 3 view .LVU193
 907              		.syntax unified
 908              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 909 0000 72B6     		cpsid i
 910              	@ 0 "" 2
 911              		.thumb
 912              		.syntax unified
 913              	.L59:
 914              	.LBE15:
 915              	.LBE14:
 458:Core/Src/main.c ****   while (1)
 916              		.loc 1 458 3 discriminator 1 view .LVU194
 459:Core/Src/main.c ****   {
 460:Core/Src/main.c ****   }
 917              		.loc 1 460 3 discriminator 1 view .LVU195
 458:Core/Src/main.c ****   while (1)
 918              		.loc 1 458 9 discriminator 1 view .LVU196
 919 0002 FEE7     		b	.L59
 920              		.cfi_endproc
 921              	.LFE152:
 923              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 924              		.align	1
 925              		.syntax unified
 926              		.thumb
 927              		.thumb_func
 928              		.fpu fpv4-sp-d16
 930              	MX_USART1_UART_Init:
 931              	.LFB139:
 216:Core/Src/main.c **** 
 932              		.loc 1 216 1 view -0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 0
 935              		@ frame_needed = 0, uses_anonymous_args = 0
 936 0000 08B5     		push	{r3, lr}
 937              	.LCFI29:
 938              		.cfi_def_cfa_offset 8
 939              		.cfi_offset 3, -8
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 43


 940              		.cfi_offset 14, -4
 225:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 941              		.loc 1 225 3 view .LVU198
 225:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 942              		.loc 1 225 19 is_stmt 0 view .LVU199
 943 0002 0A48     		ldr	r0, .L64
 944 0004 0A4B     		ldr	r3, .L64+4
 945 0006 0360     		str	r3, [r0]
 226:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 946              		.loc 1 226 3 is_stmt 1 view .LVU200
 226:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 947              		.loc 1 226 24 is_stmt 0 view .LVU201
 948 0008 4FF4E133 		mov	r3, #115200
 949 000c 4360     		str	r3, [r0, #4]
 227:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 950              		.loc 1 227 3 is_stmt 1 view .LVU202
 227:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 951              		.loc 1 227 26 is_stmt 0 view .LVU203
 952 000e 0023     		movs	r3, #0
 953 0010 8360     		str	r3, [r0, #8]
 228:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 954              		.loc 1 228 3 is_stmt 1 view .LVU204
 228:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 955              		.loc 1 228 24 is_stmt 0 view .LVU205
 956 0012 C360     		str	r3, [r0, #12]
 229:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 957              		.loc 1 229 3 is_stmt 1 view .LVU206
 229:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 958              		.loc 1 229 22 is_stmt 0 view .LVU207
 959 0014 0361     		str	r3, [r0, #16]
 230:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 960              		.loc 1 230 3 is_stmt 1 view .LVU208
 230:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 961              		.loc 1 230 20 is_stmt 0 view .LVU209
 962 0016 0C22     		movs	r2, #12
 963 0018 4261     		str	r2, [r0, #20]
 231:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 964              		.loc 1 231 3 is_stmt 1 view .LVU210
 231:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 965              		.loc 1 231 25 is_stmt 0 view .LVU211
 966 001a 8361     		str	r3, [r0, #24]
 232:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 967              		.loc 1 232 3 is_stmt 1 view .LVU212
 232:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 968              		.loc 1 232 28 is_stmt 0 view .LVU213
 969 001c C361     		str	r3, [r0, #28]
 233:Core/Src/main.c ****   {
 970              		.loc 1 233 3 is_stmt 1 view .LVU214
 233:Core/Src/main.c ****   {
 971              		.loc 1 233 7 is_stmt 0 view .LVU215
 972 001e FFF7FEFF 		bl	HAL_UART_Init
 973              	.LVL53:
 233:Core/Src/main.c ****   {
 974              		.loc 1 233 6 view .LVU216
 975 0022 00B9     		cbnz	r0, .L63
 241:Core/Src/main.c **** 
 976              		.loc 1 241 1 view .LVU217
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 44


 977 0024 08BD     		pop	{r3, pc}
 978              	.L63:
 235:Core/Src/main.c ****   }
 979              		.loc 1 235 5 is_stmt 1 view .LVU218
 980 0026 FFF7FEFF 		bl	Error_Handler
 981              	.LVL54:
 982              	.L65:
 983 002a 00BF     		.align	2
 984              	.L64:
 985 002c 00000000 		.word	.LANCHOR0
 986 0030 00100140 		.word	1073811456
 987              		.cfi_endproc
 988              	.LFE139:
 990              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 991              		.align	1
 992              		.syntax unified
 993              		.thumb
 994              		.thumb_func
 995              		.fpu fpv4-sp-d16
 997              	MX_USART2_UART_Init:
 998              	.LFB140:
 249:Core/Src/main.c **** 
 999              		.loc 1 249 1 view -0
 1000              		.cfi_startproc
 1001              		@ args = 0, pretend = 0, frame = 0
 1002              		@ frame_needed = 0, uses_anonymous_args = 0
 1003 0000 08B5     		push	{r3, lr}
 1004              	.LCFI30:
 1005              		.cfi_def_cfa_offset 8
 1006              		.cfi_offset 3, -8
 1007              		.cfi_offset 14, -4
 258:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1008              		.loc 1 258 3 view .LVU220
 258:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1009              		.loc 1 258 19 is_stmt 0 view .LVU221
 1010 0002 0A48     		ldr	r0, .L70
 1011 0004 0A4B     		ldr	r3, .L70+4
 1012 0006 0360     		str	r3, [r0]
 259:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1013              		.loc 1 259 3 is_stmt 1 view .LVU222
 259:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1014              		.loc 1 259 24 is_stmt 0 view .LVU223
 1015 0008 4FF4E133 		mov	r3, #115200
 1016 000c 4360     		str	r3, [r0, #4]
 260:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1017              		.loc 1 260 3 is_stmt 1 view .LVU224
 260:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1018              		.loc 1 260 26 is_stmt 0 view .LVU225
 1019 000e 0023     		movs	r3, #0
 1020 0010 8360     		str	r3, [r0, #8]
 261:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1021              		.loc 1 261 3 is_stmt 1 view .LVU226
 261:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1022              		.loc 1 261 24 is_stmt 0 view .LVU227
 1023 0012 C360     		str	r3, [r0, #12]
 262:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1024              		.loc 1 262 3 is_stmt 1 view .LVU228
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 45


 262:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1025              		.loc 1 262 22 is_stmt 0 view .LVU229
 1026 0014 0361     		str	r3, [r0, #16]
 263:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1027              		.loc 1 263 3 is_stmt 1 view .LVU230
 263:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1028              		.loc 1 263 20 is_stmt 0 view .LVU231
 1029 0016 0C22     		movs	r2, #12
 1030 0018 4261     		str	r2, [r0, #20]
 264:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1031              		.loc 1 264 3 is_stmt 1 view .LVU232
 264:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1032              		.loc 1 264 25 is_stmt 0 view .LVU233
 1033 001a 8361     		str	r3, [r0, #24]
 265:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1034              		.loc 1 265 3 is_stmt 1 view .LVU234
 265:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1035              		.loc 1 265 28 is_stmt 0 view .LVU235
 1036 001c C361     		str	r3, [r0, #28]
 266:Core/Src/main.c ****   {
 1037              		.loc 1 266 3 is_stmt 1 view .LVU236
 266:Core/Src/main.c ****   {
 1038              		.loc 1 266 7 is_stmt 0 view .LVU237
 1039 001e FFF7FEFF 		bl	HAL_UART_Init
 1040              	.LVL55:
 266:Core/Src/main.c ****   {
 1041              		.loc 1 266 6 view .LVU238
 1042 0022 00B9     		cbnz	r0, .L69
 274:Core/Src/main.c **** 
 1043              		.loc 1 274 1 view .LVU239
 1044 0024 08BD     		pop	{r3, pc}
 1045              	.L69:
 268:Core/Src/main.c ****   }
 1046              		.loc 1 268 5 is_stmt 1 view .LVU240
 1047 0026 FFF7FEFF 		bl	Error_Handler
 1048              	.LVL56:
 1049              	.L71:
 1050 002a 00BF     		.align	2
 1051              	.L70:
 1052 002c 00000000 		.word	.LANCHOR1
 1053 0030 00440040 		.word	1073759232
 1054              		.cfi_endproc
 1055              	.LFE140:
 1057              		.section	.text.SystemClock_Config,"ax",%progbits
 1058              		.align	1
 1059              		.global	SystemClock_Config
 1060              		.syntax unified
 1061              		.thumb
 1062              		.thumb_func
 1063              		.fpu fpv4-sp-d16
 1065              	SystemClock_Config:
 1066              	.LFB138:
 170:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1067              		.loc 1 170 1 view -0
 1068              		.cfi_startproc
 1069              		@ args = 0, pretend = 0, frame = 80
 1070              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 46


 1071 0000 00B5     		push	{lr}
 1072              	.LCFI31:
 1073              		.cfi_def_cfa_offset 4
 1074              		.cfi_offset 14, -4
 1075 0002 95B0     		sub	sp, sp, #84
 1076              	.LCFI32:
 1077              		.cfi_def_cfa_offset 88
 171:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1078              		.loc 1 171 3 view .LVU242
 171:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1079              		.loc 1 171 22 is_stmt 0 view .LVU243
 1080 0004 3022     		movs	r2, #48
 1081 0006 0021     		movs	r1, #0
 1082 0008 08A8     		add	r0, sp, #32
 1083 000a FFF7FEFF 		bl	memset
 1084              	.LVL57:
 172:Core/Src/main.c **** 
 1085              		.loc 1 172 3 is_stmt 1 view .LVU244
 172:Core/Src/main.c **** 
 1086              		.loc 1 172 22 is_stmt 0 view .LVU245
 1087 000e 0023     		movs	r3, #0
 1088 0010 0393     		str	r3, [sp, #12]
 1089 0012 0493     		str	r3, [sp, #16]
 1090 0014 0593     		str	r3, [sp, #20]
 1091 0016 0693     		str	r3, [sp, #24]
 1092 0018 0793     		str	r3, [sp, #28]
 176:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1093              		.loc 1 176 3 is_stmt 1 view .LVU246
 1094              	.LBB16:
 176:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1095              		.loc 1 176 3 view .LVU247
 1096 001a 0193     		str	r3, [sp, #4]
 176:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1097              		.loc 1 176 3 view .LVU248
 1098 001c 1E4A     		ldr	r2, .L78
 1099 001e 116C     		ldr	r1, [r2, #64]
 1100 0020 41F08051 		orr	r1, r1, #268435456
 1101 0024 1164     		str	r1, [r2, #64]
 176:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1102              		.loc 1 176 3 view .LVU249
 1103 0026 126C     		ldr	r2, [r2, #64]
 1104 0028 02F08052 		and	r2, r2, #268435456
 1105 002c 0192     		str	r2, [sp, #4]
 176:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1106              		.loc 1 176 3 view .LVU250
 1107 002e 019A     		ldr	r2, [sp, #4]
 1108              	.LBE16:
 176:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1109              		.loc 1 176 3 view .LVU251
 177:Core/Src/main.c **** 
 1110              		.loc 1 177 3 view .LVU252
 1111              	.LBB17:
 177:Core/Src/main.c **** 
 1112              		.loc 1 177 3 view .LVU253
 1113 0030 0293     		str	r3, [sp, #8]
 177:Core/Src/main.c **** 
 1114              		.loc 1 177 3 view .LVU254
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 47


 1115 0032 1A4B     		ldr	r3, .L78+4
 1116 0034 1A68     		ldr	r2, [r3]
 1117 0036 42F48042 		orr	r2, r2, #16384
 1118 003a 1A60     		str	r2, [r3]
 177:Core/Src/main.c **** 
 1119              		.loc 1 177 3 view .LVU255
 1120 003c 1B68     		ldr	r3, [r3]
 1121 003e 03F48043 		and	r3, r3, #16384
 1122 0042 0293     		str	r3, [sp, #8]
 177:Core/Src/main.c **** 
 1123              		.loc 1 177 3 view .LVU256
 1124 0044 029B     		ldr	r3, [sp, #8]
 1125              	.LBE17:
 177:Core/Src/main.c **** 
 1126              		.loc 1 177 3 view .LVU257
 182:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1127              		.loc 1 182 3 view .LVU258
 182:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1128              		.loc 1 182 36 is_stmt 0 view .LVU259
 1129 0046 0123     		movs	r3, #1
 1130 0048 0893     		str	r3, [sp, #32]
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1131              		.loc 1 183 3 is_stmt 1 view .LVU260
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1132              		.loc 1 183 30 is_stmt 0 view .LVU261
 1133 004a 4FF48033 		mov	r3, #65536
 1134 004e 0993     		str	r3, [sp, #36]
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1135              		.loc 1 184 3 is_stmt 1 view .LVU262
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1136              		.loc 1 184 34 is_stmt 0 view .LVU263
 1137 0050 0223     		movs	r3, #2
 1138 0052 0E93     		str	r3, [sp, #56]
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1139              		.loc 1 185 3 is_stmt 1 view .LVU264
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1140              		.loc 1 185 35 is_stmt 0 view .LVU265
 1141 0054 4FF48003 		mov	r3, #4194304
 1142 0058 0F93     		str	r3, [sp, #60]
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1143              		.loc 1 186 3 is_stmt 1 view .LVU266
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1144              		.loc 1 186 30 is_stmt 0 view .LVU267
 1145 005a 0423     		movs	r3, #4
 1146 005c 1093     		str	r3, [sp, #64]
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1147              		.loc 1 187 3 is_stmt 1 view .LVU268
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1148              		.loc 1 187 30 is_stmt 0 view .LVU269
 1149 005e 9022     		movs	r2, #144
 1150 0060 1192     		str	r2, [sp, #68]
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1151              		.loc 1 188 3 is_stmt 1 view .LVU270
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1152              		.loc 1 188 30 is_stmt 0 view .LVU271
 1153 0062 1293     		str	r3, [sp, #72]
 189:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 48


 1154              		.loc 1 189 3 is_stmt 1 view .LVU272
 189:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1155              		.loc 1 189 30 is_stmt 0 view .LVU273
 1156 0064 1393     		str	r3, [sp, #76]
 190:Core/Src/main.c ****   {
 1157              		.loc 1 190 3 is_stmt 1 view .LVU274
 190:Core/Src/main.c ****   {
 1158              		.loc 1 190 7 is_stmt 0 view .LVU275
 1159 0066 08A8     		add	r0, sp, #32
 1160 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1161              	.LVL58:
 190:Core/Src/main.c ****   {
 1162              		.loc 1 190 6 view .LVU276
 1163 006c 80B9     		cbnz	r0, .L76
 197:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1164              		.loc 1 197 3 is_stmt 1 view .LVU277
 197:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1165              		.loc 1 197 31 is_stmt 0 view .LVU278
 1166 006e 0F23     		movs	r3, #15
 1167 0070 0393     		str	r3, [sp, #12]
 199:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1168              		.loc 1 199 3 is_stmt 1 view .LVU279
 199:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1169              		.loc 1 199 34 is_stmt 0 view .LVU280
 1170 0072 0221     		movs	r1, #2
 1171 0074 0491     		str	r1, [sp, #16]
 200:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1172              		.loc 1 200 3 is_stmt 1 view .LVU281
 200:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1173              		.loc 1 200 35 is_stmt 0 view .LVU282
 1174 0076 0023     		movs	r3, #0
 1175 0078 0593     		str	r3, [sp, #20]
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1176              		.loc 1 201 3 is_stmt 1 view .LVU283
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1177              		.loc 1 201 36 is_stmt 0 view .LVU284
 1178 007a 4FF48052 		mov	r2, #4096
 1179 007e 0692     		str	r2, [sp, #24]
 202:Core/Src/main.c **** 
 1180              		.loc 1 202 3 is_stmt 1 view .LVU285
 202:Core/Src/main.c **** 
 1181              		.loc 1 202 36 is_stmt 0 view .LVU286
 1182 0080 0793     		str	r3, [sp, #28]
 204:Core/Src/main.c ****   {
 1183              		.loc 1 204 3 is_stmt 1 view .LVU287
 204:Core/Src/main.c ****   {
 1184              		.loc 1 204 7 is_stmt 0 view .LVU288
 1185 0082 03A8     		add	r0, sp, #12
 1186 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1187              	.LVL59:
 204:Core/Src/main.c ****   {
 1188              		.loc 1 204 6 view .LVU289
 1189 0088 20B9     		cbnz	r0, .L77
 208:Core/Src/main.c **** 
 1190              		.loc 1 208 1 view .LVU290
 1191 008a 15B0     		add	sp, sp, #84
 1192              	.LCFI33:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 49


 1193              		.cfi_remember_state
 1194              		.cfi_def_cfa_offset 4
 1195              		@ sp needed
 1196 008c 5DF804FB 		ldr	pc, [sp], #4
 1197              	.L76:
 1198              	.LCFI34:
 1199              		.cfi_restore_state
 192:Core/Src/main.c ****   }
 1200              		.loc 1 192 5 is_stmt 1 view .LVU291
 1201 0090 FFF7FEFF 		bl	Error_Handler
 1202              	.LVL60:
 1203              	.L77:
 206:Core/Src/main.c ****   }
 1204              		.loc 1 206 5 view .LVU292
 1205 0094 FFF7FEFF 		bl	Error_Handler
 1206              	.LVL61:
 1207              	.L79:
 1208              		.align	2
 1209              	.L78:
 1210 0098 00380240 		.word	1073887232
 1211 009c 00700040 		.word	1073770496
 1212              		.cfi_endproc
 1213              	.LFE138:
 1215              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1216              		.align	2
 1217              	.LC2:
 1218 0000 436F7265 		.ascii	"Core/Src/main.c\000"
 1218      2F537263 
 1218      2F6D6169 
 1218      6E2E6300 
 1219              		.align	2
 1220              	.LC3:
 1221 0010 74657374 		.ascii	"test_add\000"
 1221      5F616464 
 1221      00
 1222 0019 000000   		.align	2
 1223              	.LC4:
 1224 001c 31323334 		.ascii	"1234567\015\012\000"
 1224      3536370D 
 1224      0A00
 1225              		.section	.text.main,"ax",%progbits
 1226              		.align	1
 1227              		.global	main
 1228              		.syntax unified
 1229              		.thumb
 1230              		.thumb_func
 1231              		.fpu fpv4-sp-d16
 1233              	main:
 1234              	.LFB137:
  90:Core/Src/main.c **** 
 1235              		.loc 1 90 1 view -0
 1236              		.cfi_startproc
 1237              		@ args = 0, pretend = 0, frame = 280
 1238              		@ frame_needed = 0, uses_anonymous_args = 0
 1239 0000 10B5     		push	{r4, lr}
 1240              	.LCFI35:
 1241              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 50


 1242              		.cfi_offset 4, -8
 1243              		.cfi_offset 14, -4
 1244 0002 C8B0     		sub	sp, sp, #288
 1245              	.LCFI36:
 1246              		.cfi_def_cfa_offset 296
  99:Core/Src/main.c **** 
 1247              		.loc 1 99 3 view .LVU294
 1248 0004 FFF7FEFF 		bl	HAL_Init
 1249              	.LVL62:
 106:Core/Src/main.c **** 
 1250              		.loc 1 106 3 view .LVU295
 1251 0008 FFF7FEFF 		bl	SystemClock_Config
 1252              	.LVL63:
 113:Core/Src/main.c ****   MX_USART1_UART_Init();
 1253              		.loc 1 113 3 view .LVU296
 1254 000c FFF7FEFF 		bl	MX_GPIO_Init
 1255              	.LVL64:
 114:Core/Src/main.c ****   MX_USART2_UART_Init();
 1256              		.loc 1 114 3 view .LVU297
 1257 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 1258              	.LVL65:
 115:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1259              		.loc 1 115 3 view .LVU298
 1260 0014 FFF7FEFF 		bl	MX_USART2_UART_Init
 1261              	.LVL66:
 118:Core/Src/main.c ****   UNITY_BEGIN();
 1262              		.loc 1 118 3 view .LVU299
 1263 0018 0122     		movs	r2, #1
 1264 001a 2049     		ldr	r1, .L87
 1265 001c 2048     		ldr	r0, .L87+4
 1266 001e FFF7FEFF 		bl	HAL_UART_Receive_IT
 1267              	.LVL67:
 119:Core/Src/main.c ****   RUN_TEST(test_add);
 1268              		.loc 1 119 3 view .LVU300
 1269 0022 2048     		ldr	r0, .L87+8
 1270 0024 FFF7FEFF 		bl	UnityBegin
 1271              	.LVL68:
 120:Core/Src/main.c ****   UNITY_END();
 1272              		.loc 1 120 3 view .LVU301
 1273 0028 7822     		movs	r2, #120
 1274 002a 1F49     		ldr	r1, .L87+12
 1275 002c 1F48     		ldr	r0, .L87+16
 1276 002e FFF7FEFF 		bl	UnityDefaultTestRun
 1277              	.LVL69:
 121:Core/Src/main.c ****   char string_buffer[256];
 1278              		.loc 1 121 3 view .LVU302
 1279 0032 FFF7FEFF 		bl	UnityEnd
 1280              	.LVL70:
 122:Core/Src/main.c **** 
 1281              		.loc 1 122 3 view .LVU303
 124:Core/Src/main.c **** 
 1282              		.loc 1 124 3 view .LVU304
 1283 0036 1E48     		ldr	r0, .L87+20
 1284 0038 FFF7FEFF 		bl	yahdlc_set_state
 1285              	.LVL71:
 126:Core/Src/main.c ****   control.frame = YAHDLC_FRAME_DATA;
 1286              		.loc 1 126 3 view .LVU305
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 51


 127:Core/Src/main.c ****   control.seq_no = 0;
 1287              		.loc 1 127 3 view .LVU306
 127:Core/Src/main.c ****   control.seq_no = 0;
 1288              		.loc 1 127 17 is_stmt 0 view .LVU307
 1289 003c 0024     		movs	r4, #0
 1290 003e 8DF81C41 		strb	r4, [sp, #284]
 128:Core/Src/main.c **** 
 1291              		.loc 1 128 3 is_stmt 1 view .LVU308
 128:Core/Src/main.c **** 
 1292              		.loc 1 128 18 is_stmt 0 view .LVU309
 1293 0042 9DF81D31 		ldrb	r3, [sp, #285]	@ zero_extendqisi2
 1294 0046 64F30203 		bfi	r3, r4, #0, #3
 1295 004a 8DF81D31 		strb	r3, [sp, #285]
 130:Core/Src/main.c ****   uint8_t output_frame[256];
 1296              		.loc 1 130 3 is_stmt 1 view .LVU310
 130:Core/Src/main.c ****   uint8_t output_frame[256];
 1297              		.loc 1 130 11 is_stmt 0 view .LVU311
 1298 004e 194A     		ldr	r2, .L87+24
 1299 0050 44AB     		add	r3, sp, #272
 1300 0052 07CA     		ldm	r2, {r0, r1, r2}
 1301 0054 03C3     		stmia	r3!, {r0, r1}
 1302 0056 1A80     		strh	r2, [r3]	@ movhi
 131:Core/Src/main.c ****   int frame_len;
 1303              		.loc 1 131 3 is_stmt 1 view .LVU312
 132:Core/Src/main.c **** 
 1304              		.loc 1 132 3 view .LVU313
 134:Core/Src/main.c ****   for(int i=0; i<frame_len; i++)
 1305              		.loc 1 134 3 view .LVU314
 1306 0058 03AB     		add	r3, sp, #12
 1307 005a 0093     		str	r3, [sp]
 1308 005c 04AB     		add	r3, sp, #16
 1309 005e 0922     		movs	r2, #9
 1310 0060 44A9     		add	r1, sp, #272
 1311 0062 47A8     		add	r0, sp, #284
 1312 0064 FFF7FEFF 		bl	yahdlc_frame_data
 1313              	.LVL72:
 135:Core/Src/main.c ****   {
 1314              		.loc 1 135 3 view .LVU315
 1315              	.LBB18:
 135:Core/Src/main.c ****   {
 1316              		.loc 1 135 7 view .LVU316
 135:Core/Src/main.c ****   {
 1317              		.loc 1 135 3 is_stmt 0 view .LVU317
 1318 0068 04E0     		b	.L81
 1319              	.LVL73:
 1320              	.L82:
 138:Core/Src/main.c ****   }
 1321              		.loc 1 138 5 is_stmt 1 discriminator 3 view .LVU318
 1322 006a 04AB     		add	r3, sp, #16
 1323 006c 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 1324 006e FFF7FEFF 		bl	uart_sendchar
 1325              	.LVL74:
 135:Core/Src/main.c ****   {
 1326              		.loc 1 135 29 discriminator 3 view .LVU319
 135:Core/Src/main.c ****   {
 1327              		.loc 1 135 30 is_stmt 0 discriminator 3 view .LVU320
 1328 0072 0134     		adds	r4, r4, #1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 52


 1329              	.LVL75:
 1330              	.L81:
 135:Core/Src/main.c ****   {
 1331              		.loc 1 135 16 is_stmt 1 discriminator 1 view .LVU321
 135:Core/Src/main.c ****   {
 1332              		.loc 1 135 17 is_stmt 0 discriminator 1 view .LVU322
 1333 0074 039B     		ldr	r3, [sp, #12]
 135:Core/Src/main.c ****   {
 1334              		.loc 1 135 3 discriminator 1 view .LVU323
 1335 0076 A342     		cmp	r3, r4
 1336 0078 F7DC     		bgt	.L82
 1337 007a 09E0     		b	.L84
 1338              	.L86:
 1339              	.LBE18:
 151:Core/Src/main.c ****       delaytimer = 1000;
 1340              		.loc 1 151 7 is_stmt 1 view .LVU324
 1341 007c 4021     		movs	r1, #64
 1342 007e 0E48     		ldr	r0, .L87+28
 1343 0080 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1344              	.LVL76:
 152:Core/Src/main.c ****       // for(int i=0; i<frame_len; i++)
 1345              		.loc 1 152 7 view .LVU325
 152:Core/Src/main.c ****       // for(int i=0; i<frame_len; i++)
 1346              		.loc 1 152 18 is_stmt 0 view .LVU326
 1347 0084 0D4B     		ldr	r3, .L87+32
 1348 0086 4FF47A72 		mov	r2, #1000
 1349 008a 1A80     		strh	r2, [r3]	@ movhi
 1350              	.L83:
 159:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 1351              		.loc 1 159 5 is_stmt 1 view .LVU327
 1352 008c FFF7FEFF 		bl	ProcessDataFromUART
 1353              	.LVL77:
 146:Core/Src/main.c ****   {
 1354              		.loc 1 146 9 view .LVU328
 1355              	.L84:
 146:Core/Src/main.c ****   {
 1356              		.loc 1 146 3 view .LVU329
 149:Core/Src/main.c ****     {
 1357              		.loc 1 149 5 view .LVU330
 149:Core/Src/main.c ****     {
 1358              		.loc 1 149 19 is_stmt 0 view .LVU331
 1359 0090 0A4B     		ldr	r3, .L87+32
 1360 0092 1B88     		ldrh	r3, [r3]
 149:Core/Src/main.c ****     {
 1361              		.loc 1 149 7 view .LVU332
 1362 0094 002B     		cmp	r3, #0
 1363 0096 F1D0     		beq	.L86
 1364 0098 F8E7     		b	.L83
 1365              	.L88:
 1366 009a 00BF     		.align	2
 1367              	.L87:
 1368 009c 00000000 		.word	.LANCHOR3
 1369 00a0 00000000 		.word	.LANCHOR0
 1370 00a4 00000000 		.word	.LC2
 1371 00a8 10000000 		.word	.LC3
 1372 00ac 00000000 		.word	test_add
 1373 00b0 00000000 		.word	.LANCHOR7
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 53


 1374 00b4 1C000000 		.word	.LC4
 1375 00b8 00000240 		.word	1073872896
 1376 00bc 00000000 		.word	.LANCHOR8
 1377              		.cfi_endproc
 1378              	.LFE137:
 1380              		.global	state
 1381              		.global	t
 1382              		.global	buf_rx
 1383              		.global	data_rx
 1384              		.global	newReceive
 1385              		.global	delaytimer
 1386              		.global	timeoutReceive
 1387              		.global	huart2
 1388              		.global	huart1
 1389              		.section	.bss.buf_rx,"aw",%nobits
 1390              		.align	2
 1391              		.set	.LANCHOR4,. + 0
 1394              	buf_rx:
 1395 0000 00000000 		.space	256
 1395      00000000 
 1395      00000000 
 1395      00000000 
 1395      00000000 
 1396              		.section	.bss.data_rx,"aw",%nobits
 1397              		.align	2
 1398              		.set	.LANCHOR3,. + 0
 1401              	data_rx:
 1402 0000 0000     		.space	2
 1403              		.section	.bss.huart1,"aw",%nobits
 1404              		.align	2
 1405              		.set	.LANCHOR0,. + 0
 1408              	huart1:
 1409 0000 00000000 		.space	72
 1409      00000000 
 1409      00000000 
 1409      00000000 
 1409      00000000 
 1410              		.section	.bss.huart2,"aw",%nobits
 1411              		.align	2
 1412              		.set	.LANCHOR1,. + 0
 1415              	huart2:
 1416 0000 00000000 		.space	72
 1416      00000000 
 1416      00000000 
 1416      00000000 
 1416      00000000 
 1417              		.section	.bss.newReceive,"aw",%nobits
 1418              		.set	.LANCHOR6,. + 0
 1421              	newReceive:
 1422 0000 00       		.space	1
 1423              		.section	.bss.state,"aw",%nobits
 1424              		.align	2
 1425              		.set	.LANCHOR7,. + 0
 1428              	state:
 1429 0000 00000000 		.space	20
 1429      00000000 
 1429      00000000 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 54


 1429      00000000 
 1429      00000000 
 1430              		.section	.bss.t,"aw",%nobits
 1431              		.align	1
 1432              		.set	.LANCHOR5,. + 0
 1435              	t:
 1436 0000 0000     		.space	2
 1437              		.section	.data.delaytimer,"aw"
 1438              		.align	1
 1439              		.set	.LANCHOR8,. + 0
 1442              	delaytimer:
 1443 0000 E803     		.short	1000
 1444              		.section	.data.timeoutReceive,"aw"
 1445              		.align	1
 1446              		.set	.LANCHOR2,. + 0
 1449              	timeoutReceive:
 1450 0000 4600     		.short	70
 1451              		.text
 1452              	.Letext0:
 1453              		.file 3 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\includ
 1454              		.file 4 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\includ
 1455              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1456              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1457              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1458              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1459              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1460              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1461              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1462              		.file 12 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\lib\\gcc\\arm-none-e
 1463              		.file 13 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\inclu
 1464              		.file 14 "Core/test/unity_internals.h"
 1465              		.file 15 "Core/test/yahdlc.h"
 1466              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1467              		.file 17 "<built-in>"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 55


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:25     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:117    .text.MX_GPIO_Init:00000060 $d
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:123    .text.uart_printf:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:130    .text.uart_printf:00000000 uart_printf
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:219    .text.uart_printf:00000040 $d
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:224    .text.uart_sendchar:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:231    .text.uart_sendchar:00000000 uart_sendchar
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:267    .text.uart_sendchar:0000001c $d
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:272    .text.debug_printf:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:279    .text.debug_printf:00000000 debug_printf
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:368    .text.debug_printf:00000040 $d
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:373    .text.debug_sendchar:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:380    .text.debug_sendchar:00000000 debug_sendchar
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:416    .text.debug_sendchar:0000001c $d
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:421    .text.add:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:428    .text.add:00000000 add
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:446    .text.test_add:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:453    .text.test_add:00000000 test_add
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:531    .text.setUp:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:538    .text.setUp:00000000 setUp
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:551    .text.tearDown:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:558    .text.tearDown:00000000 tearDown
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:571    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:578    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:631    .text.HAL_UART_RxCpltCallback:00000034 $d
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:640    .rodata.ProcessDataFromUART.str1.4:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:648    .text.ProcessDataFromUART:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:655    .text.ProcessDataFromUART:00000000 ProcessDataFromUART
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:874    .text.ProcessDataFromUART:000000e4 $d
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:885    .text.Error_Handler:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:892    .text.Error_Handler:00000000 Error_Handler
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:924    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:930    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:985    .text.MX_USART1_UART_Init:0000002c $d
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:991    .text.MX_USART2_UART_Init:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:997    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:1052   .text.MX_USART2_UART_Init:0000002c $d
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:1058   .text.SystemClock_Config:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:1065   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:1210   .text.SystemClock_Config:00000098 $d
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:1216   .rodata.main.str1.4:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:1226   .text.main:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:1233   .text.main:00000000 main
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:1368   .text.main:0000009c $d
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:1428   .bss.state:00000000 state
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:1435   .bss.t:00000000 t
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:1394   .bss.buf_rx:00000000 buf_rx
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:1401   .bss.data_rx:00000000 data_rx
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:1421   .bss.newReceive:00000000 newReceive
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:1442   .data.delaytimer:00000000 delaytimer
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:1449   .data.timeoutReceive:00000000 timeoutReceive
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:1415   .bss.huart2:00000000 huart2
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:1408   .bss.huart1:00000000 huart1
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:1390   .bss.buf_rx:00000000 $d
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s 			page 56


C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:1397   .bss.data_rx:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:1404   .bss.huart1:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:1411   .bss.huart2:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:1422   .bss.newReceive:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:1424   .bss.state:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:1431   .bss.t:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:1438   .data.delaytimer:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccu3sVvG.s:1445   .data.timeoutReceive:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
vsprintf
HAL_UART_Transmit
UnityAssertEqualNumber
HAL_UART_Receive_IT
memset
yahdlc_get_data
yahdlc_frame_data
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
UnityBegin
UnityDefaultTestRun
UnityEnd
yahdlc_set_state
HAL_GPIO_TogglePin
