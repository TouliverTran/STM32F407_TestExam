ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB141:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** #include <stdarg.h>
  26:Core/Src/main.c **** #include <string.h>
  27:Core/Src/main.c **** #include <assert.h>
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** #include "unity.h"
  30:Core/Src/main.c **** #include "minihdlc.h"
  31:Core/Src/main.c **** #include "yahdlc.h"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 2


  32:Core/Src/main.c **** /* USER CODE END Includes */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  50:Core/Src/main.c **** UART_HandleTypeDef huart1;
  51:Core/Src/main.c **** UART_HandleTypeDef huart2;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** extern uint16_t timeoutReceive = 70;
  55:Core/Src/main.c **** extern uint16_t delaytimer = 1000;
  56:Core/Src/main.c **** extern uint8_t newReceive = 0;
  57:Core/Src/main.c **** /* USER CODE END PV */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  60:Core/Src/main.c **** void SystemClock_Config(void);
  61:Core/Src/main.c **** static void MX_GPIO_Init(void);
  62:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  63:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  64:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  65:Core/Src/main.c **** int uart_printf(const char *fmt, ...);
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** int add(int a, int b);
  68:Core/Src/main.c **** void test_add(void);
  69:Core/Src/main.c **** void setUp();
  70:Core/Src/main.c **** void tearDown();
  71:Core/Src/main.c **** void send_char(uint8_t data);
  72:Core/Src/main.c **** void frame_received(const uint8_t *frame_buffer, uint16_t frame_length);
  73:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart);
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** extern int debug_printf(const char *fmt, ...);
  76:Core/Src/main.c **** extern void debug_sendchar(const char pdata);
  77:Core/Src/main.c **** void ProcessDataFromUART(void);
  78:Core/Src/main.c **** /* USER CODE END PFP */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  81:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  82:Core/Src/main.c **** uint8_t data_rx[2];
  83:Core/Src/main.c **** uint8_t buf_rx[256];
  84:Core/Src/main.c **** uint16_t t = 0;
  85:Core/Src/main.c **** yahdlc_state_t state;
  86:Core/Src/main.c **** /* USER CODE END 0 */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** /**
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 3


  89:Core/Src/main.c ****   * @brief  The application entry point.
  90:Core/Src/main.c ****   * @retval int
  91:Core/Src/main.c ****   */
  92:Core/Src/main.c **** int main(void)
  93:Core/Src/main.c **** {
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE END 1 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 102:Core/Src/main.c ****   HAL_Init();
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE END Init */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* Configure the system clock */
 109:Core/Src/main.c ****   SystemClock_Config();
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE END SysInit */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* Initialize all configured peripherals */
 116:Core/Src/main.c ****   MX_GPIO_Init();
 117:Core/Src/main.c ****   MX_USART1_UART_Init();
 118:Core/Src/main.c ****   MX_USART2_UART_Init();
 119:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 120:Core/Src/main.c ****   debug_printf("HELLO WORLD!!!\r\n");
 121:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1, data_rx, 1);
 122:Core/Src/main.c ****   UNITY_BEGIN();
 123:Core/Src/main.c ****   RUN_TEST(test_add);
 124:Core/Src/main.c ****   UNITY_END();
 125:Core/Src/main.c ****   minihdlc_init(send_char, frame_received);
 126:Core/Src/main.c ****   char string_buffer[256];
 127:Core/Src/main.c ****   for (int i = 0; i < 10; i++)
 128:Core/Src/main.c ****   {
 129:Core/Src/main.c ****       snprintf(string_buffer, sizeof(string_buffer), "i = %d\r\n", i);
 130:Core/Src/main.c ****       minihdlc_send_frame((const uint8_t *)string_buffer, strlen(string_buffer));
 131:Core/Src/main.c ****   }
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   yahdlc_set_state(&state);
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   yahdlc_control_t control;
 136:Core/Src/main.c ****   control.frame = YAHDLC_FRAME_DATA;
 137:Core/Src/main.c ****   control.seq_no = 0;
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   uint8_t input_data[] = "123456\r\n";
 140:Core/Src/main.c ****   uint8_t output_frame[256];
 141:Core/Src/main.c ****   int frame_len;
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   yahdlc_frame_data(&control, input_data, sizeof(input_data), output_frame, &frame_len);
 144:Core/Src/main.c ****   for(int i=0; i<frame_len; i++)
 145:Core/Src/main.c ****   {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 4


 146:Core/Src/main.c ****     debug_sendchar(output_frame[i]);
 147:Core/Src/main.c ****     uart_sendchar(output_frame[i]);
 148:Core/Src/main.c ****   }
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /* USER CODE END 2 */
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   /* Infinite loop */
 154:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 155:Core/Src/main.c ****   while (1)
 156:Core/Src/main.c ****   {
 157:Core/Src/main.c ****     /* USER CODE END WHILE */
 158:Core/Src/main.c ****     if(delaytimer == 0)
 159:Core/Src/main.c ****     {
 160:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_6);
 161:Core/Src/main.c ****       delaytimer = 1000;
 162:Core/Src/main.c ****       for(int i=0; i<frame_len; i++)
 163:Core/Src/main.c ****       {
 164:Core/Src/main.c ****         uart_sendchar(output_frame[i]);
 165:Core/Src/main.c ****       }
 166:Core/Src/main.c ****     }
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****     ProcessDataFromUART();
 169:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 170:Core/Src/main.c ****   }
 171:Core/Src/main.c ****   /* USER CODE END 3 */
 172:Core/Src/main.c **** }
 173:Core/Src/main.c **** 
 174:Core/Src/main.c **** /**
 175:Core/Src/main.c ****   * @brief System Clock Configuration
 176:Core/Src/main.c ****   * @retval None
 177:Core/Src/main.c ****   */
 178:Core/Src/main.c **** void SystemClock_Config(void)
 179:Core/Src/main.c **** {
 180:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 181:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 184:Core/Src/main.c ****   */
 185:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 186:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 189:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 190:Core/Src/main.c ****   */
 191:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 192:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 199:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 200:Core/Src/main.c ****   {
 201:Core/Src/main.c ****     Error_Handler();
 202:Core/Src/main.c ****   }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 5


 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 205:Core/Src/main.c ****   */
 206:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 207:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 208:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 209:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 210:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 211:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 214:Core/Src/main.c ****   {
 215:Core/Src/main.c ****     Error_Handler();
 216:Core/Src/main.c ****   }
 217:Core/Src/main.c **** }
 218:Core/Src/main.c **** 
 219:Core/Src/main.c **** /**
 220:Core/Src/main.c ****   * @brief USART1 Initialization Function
 221:Core/Src/main.c ****   * @param None
 222:Core/Src/main.c ****   * @retval None
 223:Core/Src/main.c ****   */
 224:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 225:Core/Src/main.c **** {
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 234:Core/Src/main.c ****   huart1.Instance = USART1;
 235:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 236:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 237:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 238:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 239:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 240:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 241:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 242:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 243:Core/Src/main.c ****   {
 244:Core/Src/main.c ****     Error_Handler();
 245:Core/Src/main.c ****   }
 246:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 249:Core/Src/main.c **** 
 250:Core/Src/main.c **** }
 251:Core/Src/main.c **** 
 252:Core/Src/main.c **** /**
 253:Core/Src/main.c ****   * @brief USART2 Initialization Function
 254:Core/Src/main.c ****   * @param None
 255:Core/Src/main.c ****   * @retval None
 256:Core/Src/main.c ****   */
 257:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 258:Core/Src/main.c **** {
 259:Core/Src/main.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 6


 260:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 267:Core/Src/main.c ****   huart2.Instance = USART2;
 268:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 269:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 270:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 271:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 272:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 273:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 274:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 275:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 276:Core/Src/main.c ****   {
 277:Core/Src/main.c ****     Error_Handler();
 278:Core/Src/main.c ****   }
 279:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 282:Core/Src/main.c **** 
 283:Core/Src/main.c **** }
 284:Core/Src/main.c **** 
 285:Core/Src/main.c **** /**
 286:Core/Src/main.c ****   * @brief GPIO Initialization Function
 287:Core/Src/main.c ****   * @param None
 288:Core/Src/main.c ****   * @retval None
 289:Core/Src/main.c ****   */
 290:Core/Src/main.c **** static void MX_GPIO_Init(void)
 291:Core/Src/main.c **** {
  28              		.loc 1 291 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 292:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 292 3 view .LVU1
  42              		.loc 1 292 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 293:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 294:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 295:Core/Src/main.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 7


 296:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 297:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  49              		.loc 1 297 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 297 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
  53              		.loc 1 297 3 view .LVU5
  54 0012 134B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F08002 		orr	r2, r2, #128
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 297 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F08002 		and	r2, r2, #128
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 297 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 297 3 view .LVU8
 298:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  66              		.loc 1 298 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 298 3 view .LVU10
  69 0026 0294     		str	r4, [sp, #8]
  70              		.loc 1 298 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F00102 		orr	r2, r2, #1
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 298 3 view .LVU12
  75 0030 1B6B     		ldr	r3, [r3, #48]
  76 0032 03F00103 		and	r3, r3, #1
  77 0036 0293     		str	r3, [sp, #8]
  78              		.loc 1 298 3 view .LVU13
  79 0038 029B     		ldr	r3, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 298 3 view .LVU14
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 301:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, GPIO_PIN_RESET);
  82              		.loc 1 301 3 view .LVU15
  83 003a 0A4D     		ldr	r5, .L3+4
  84 003c 2246     		mov	r2, r4
  85 003e 4021     		movs	r1, #64
  86 0040 2846     		mov	r0, r5
  87 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL0:
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****   /*Configure GPIO pin : PA6 */
 304:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_6;
  89              		.loc 1 304 3 view .LVU16
  90              		.loc 1 304 23 is_stmt 0 view .LVU17
  91 0046 4023     		movs	r3, #64
  92 0048 0393     		str	r3, [sp, #12]
 305:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  93              		.loc 1 305 3 is_stmt 1 view .LVU18
  94              		.loc 1 305 24 is_stmt 0 view .LVU19
  95 004a 0123     		movs	r3, #1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 8


  96 004c 0493     		str	r3, [sp, #16]
 306:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  97              		.loc 1 306 3 is_stmt 1 view .LVU20
  98              		.loc 1 306 24 is_stmt 0 view .LVU21
  99 004e 0594     		str	r4, [sp, #20]
 307:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 100              		.loc 1 307 3 is_stmt 1 view .LVU22
 101              		.loc 1 307 25 is_stmt 0 view .LVU23
 102 0050 0694     		str	r4, [sp, #24]
 308:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 103              		.loc 1 308 3 is_stmt 1 view .LVU24
 104 0052 03A9     		add	r1, sp, #12
 105 0054 2846     		mov	r0, r5
 106 0056 FFF7FEFF 		bl	HAL_GPIO_Init
 107              	.LVL1:
 309:Core/Src/main.c **** 
 310:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 311:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 312:Core/Src/main.c **** }
 108              		.loc 1 312 1 is_stmt 0 view .LVU25
 109 005a 09B0     		add	sp, sp, #36
 110              	.LCFI2:
 111              		.cfi_def_cfa_offset 12
 112              		@ sp needed
 113 005c 30BD     		pop	{r4, r5, pc}
 114              	.L4:
 115 005e 00BF     		.align	2
 116              	.L3:
 117 0060 00380240 		.word	1073887232
 118 0064 00000240 		.word	1073872896
 119              		.cfi_endproc
 120              	.LFE141:
 122              		.section	.text.uart_printf,"ax",%progbits
 123              		.align	1
 124              		.global	uart_printf
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu fpv4-sp-d16
 130              	uart_printf:
 131              	.LVL2:
 132              	.LFB142:
 313:Core/Src/main.c **** 
 314:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 315:Core/Src/main.c **** int uart_printf(const char *fmt, ...)
 316:Core/Src/main.c **** {
 133              		.loc 1 316 1 is_stmt 1 view -0
 134              		.cfi_startproc
 135              		@ args = 4, pretend = 16, frame = 1032
 136              		@ frame_needed = 0, uses_anonymous_args = 1
 137              		.loc 1 316 1 is_stmt 0 view .LVU27
 138 0000 0FB4     		push	{r0, r1, r2, r3}
 139              	.LCFI3:
 140              		.cfi_def_cfa_offset 16
 141              		.cfi_offset 0, -16
 142              		.cfi_offset 1, -12
 143              		.cfi_offset 2, -8
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 9


 144              		.cfi_offset 3, -4
 145 0002 30B5     		push	{r4, r5, lr}
 146              	.LCFI4:
 147              		.cfi_def_cfa_offset 28
 148              		.cfi_offset 4, -28
 149              		.cfi_offset 5, -24
 150              		.cfi_offset 14, -20
 151 0004 ADF20C4D 		subw	sp, sp, #1036
 152              	.LCFI5:
 153              		.cfi_def_cfa_offset 1064
 154 0008 0DF58362 		add	r2, sp, #1048
 155 000c 52F8041B 		ldr	r1, [r2], #4
 317:Core/Src/main.c ****   char buf[1024];
 156              		.loc 1 317 3 is_stmt 1 view .LVU28
 318:Core/Src/main.c ****   int len, i;
 157              		.loc 1 318 3 view .LVU29
 319:Core/Src/main.c ****   va_list args;
 158              		.loc 1 319 3 view .LVU30
 320:Core/Src/main.c ****   va_start (args, fmt);
 159              		.loc 1 320 3 view .LVU31
 160 0010 0192     		str	r2, [sp, #4]
 321:Core/Src/main.c **** 
 322:Core/Src/main.c ****   len = vsprintf(buf, fmt, args);
 161              		.loc 1 322 3 view .LVU32
 162              		.loc 1 322 9 is_stmt 0 view .LVU33
 163 0012 02A8     		add	r0, sp, #8
 164 0014 FFF7FEFF 		bl	vsprintf
 165              	.LVL3:
 166 0018 0546     		mov	r5, r0
 167              	.LVL4:
 323:Core/Src/main.c ****   for (i=0; i<len; i++)
 168              		.loc 1 323 3 is_stmt 1 view .LVU34
 169              		.loc 1 323 9 is_stmt 0 view .LVU35
 170 001a 0024     		movs	r4, #0
 171              		.loc 1 323 3 view .LVU36
 172 001c 07E0     		b	.L6
 173              	.LVL5:
 174              	.L7:
 324:Core/Src/main.c ****   {
 325:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, &buf[i], sizeof(char), 10);
 175              		.loc 1 325 5 is_stmt 1 discriminator 3 view .LVU37
 176 001e 0A23     		movs	r3, #10
 177 0020 0122     		movs	r2, #1
 178 0022 02A9     		add	r1, sp, #8
 179 0024 2144     		add	r1, r1, r4
 180 0026 0648     		ldr	r0, .L9
 181 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 182              	.LVL6:
 323:Core/Src/main.c ****   for (i=0; i<len; i++)
 183              		.loc 1 323 20 discriminator 3 view .LVU38
 323:Core/Src/main.c ****   for (i=0; i<len; i++)
 184              		.loc 1 323 21 is_stmt 0 discriminator 3 view .LVU39
 185 002c 0134     		adds	r4, r4, #1
 186              	.LVL7:
 187              	.L6:
 323:Core/Src/main.c ****   for (i=0; i<len; i++)
 188              		.loc 1 323 13 is_stmt 1 discriminator 1 view .LVU40
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 10


 323:Core/Src/main.c ****   for (i=0; i<len; i++)
 189              		.loc 1 323 3 is_stmt 0 discriminator 1 view .LVU41
 190 002e AC42     		cmp	r4, r5
 191 0030 F5DB     		blt	.L7
 326:Core/Src/main.c ****   }
 327:Core/Src/main.c ****   va_end(args);
 192              		.loc 1 327 3 is_stmt 1 view .LVU42
 328:Core/Src/main.c ****   return len;
 193              		.loc 1 328 3 view .LVU43
 329:Core/Src/main.c **** }
 194              		.loc 1 329 1 is_stmt 0 view .LVU44
 195 0032 2846     		mov	r0, r5
 196 0034 0DF20C4D 		addw	sp, sp, #1036
 197              	.LCFI6:
 198              		.cfi_def_cfa_offset 28
 199              		@ sp needed
 200 0038 BDE83040 		pop	{r4, r5, lr}
 201              	.LCFI7:
 202              		.cfi_restore 14
 203              		.cfi_restore 5
 204              		.cfi_restore 4
 205              		.cfi_def_cfa_offset 16
 206              	.LVL8:
 207              		.loc 1 329 1 view .LVU45
 208 003c 04B0     		add	sp, sp, #16
 209              	.LCFI8:
 210              		.cfi_restore 3
 211              		.cfi_restore 2
 212              		.cfi_restore 1
 213              		.cfi_restore 0
 214              		.cfi_def_cfa_offset 0
 215 003e 7047     		bx	lr
 216              	.L10:
 217              		.align	2
 218              	.L9:
 219 0040 00000000 		.word	.LANCHOR0
 220              		.cfi_endproc
 221              	.LFE142:
 223              		.section	.text.uart_sendchar,"ax",%progbits
 224              		.align	1
 225              		.global	uart_sendchar
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu fpv4-sp-d16
 231              	uart_sendchar:
 232              	.LVL9:
 233              	.LFB143:
 330:Core/Src/main.c **** 
 331:Core/Src/main.c **** void uart_sendchar(const char pdata)
 332:Core/Src/main.c **** {
 234              		.loc 1 332 1 is_stmt 1 view -0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 8
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		.loc 1 332 1 is_stmt 0 view .LVU47
 239 0000 00B5     		push	{lr}
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 11


 240              	.LCFI9:
 241              		.cfi_def_cfa_offset 4
 242              		.cfi_offset 14, -4
 243 0002 83B0     		sub	sp, sp, #12
 244              	.LCFI10:
 245              		.cfi_def_cfa_offset 16
 333:Core/Src/main.c ****   char temp = pdata;
 246              		.loc 1 333 3 is_stmt 1 view .LVU48
 247              		.loc 1 333 8 is_stmt 0 view .LVU49
 248 0004 8DF80700 		strb	r0, [sp, #7]
 334:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, &temp, sizeof(char), 10);
 249              		.loc 1 334 3 is_stmt 1 view .LVU50
 250 0008 0A23     		movs	r3, #10
 251 000a 0122     		movs	r2, #1
 252 000c 0DF10701 		add	r1, sp, #7
 253 0010 0248     		ldr	r0, .L13
 254              	.LVL10:
 255              		.loc 1 334 3 is_stmt 0 view .LVU51
 256 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 257              	.LVL11:
 335:Core/Src/main.c ****   // if ('\n' == pdata)
 336:Core/Src/main.c ****   // {
 337:Core/Src/main.c ****   //   temp = '\r';
 338:Core/Src/main.c ****   //   HAL_UART_Transmit(&huart1, &temp, sizeof(char), 10);
 339:Core/Src/main.c ****   // }
 340:Core/Src/main.c **** }
 258              		.loc 1 340 1 view .LVU52
 259 0016 03B0     		add	sp, sp, #12
 260              	.LCFI11:
 261              		.cfi_def_cfa_offset 4
 262              		@ sp needed
 263 0018 5DF804FB 		ldr	pc, [sp], #4
 264              	.L14:
 265              		.align	2
 266              	.L13:
 267 001c 00000000 		.word	.LANCHOR0
 268              		.cfi_endproc
 269              	.LFE143:
 271              		.section	.text.send_char,"ax",%progbits
 272              		.align	1
 273              		.global	send_char
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 277              		.fpu fpv4-sp-d16
 279              	send_char:
 280              	.LVL12:
 281              	.LFB150:
 341:Core/Src/main.c **** 
 342:Core/Src/main.c **** int debug_printf(const char *fmt, ...)
 343:Core/Src/main.c **** {
 344:Core/Src/main.c ****   char buf[1024];
 345:Core/Src/main.c ****   int len, i;
 346:Core/Src/main.c ****   va_list args;
 347:Core/Src/main.c ****   va_start (args, fmt);
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****   len = vsprintf(buf, fmt, args);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 12


 350:Core/Src/main.c ****   for (i=0; i<len; i++)
 351:Core/Src/main.c ****   {
 352:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, &buf[i], sizeof(char), 10);
 353:Core/Src/main.c ****   }
 354:Core/Src/main.c ****   va_end(args);
 355:Core/Src/main.c ****   return len;
 356:Core/Src/main.c **** }
 357:Core/Src/main.c **** 
 358:Core/Src/main.c **** void debug_sendchar(const char pdata)
 359:Core/Src/main.c **** {
 360:Core/Src/main.c ****   char temp = pdata;
 361:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, &temp, sizeof(char), 10);
 362:Core/Src/main.c ****   // if ('\n' == pdata)
 363:Core/Src/main.c ****   // {
 364:Core/Src/main.c ****   //   temp = '\r';
 365:Core/Src/main.c ****   //   HAL_UART_Transmit(&huart1, &temp, sizeof(char), 10);
 366:Core/Src/main.c ****   // }
 367:Core/Src/main.c **** }
 368:Core/Src/main.c **** 
 369:Core/Src/main.c **** int add(int a, int b){
 370:Core/Src/main.c ****     return a + b;
 371:Core/Src/main.c **** }
 372:Core/Src/main.c **** 
 373:Core/Src/main.c **** void test_add(void){
 374:Core/Src/main.c ****     for(int i=0; i<9; i++){
 375:Core/Src/main.c ****         for(int j=0; j<9; j++){
 376:Core/Src/main.c ****             TEST_ASSERT_EQUAL_INT((i+j), add(i,j));
 377:Core/Src/main.c ****             TEST_ASSERT_EQUAL_INT((i+j+1), add(i,j));
 378:Core/Src/main.c ****         }
 379:Core/Src/main.c ****     }
 380:Core/Src/main.c **** }
 381:Core/Src/main.c **** 
 382:Core/Src/main.c **** void setUp(){
 383:Core/Src/main.c **** 
 384:Core/Src/main.c **** }
 385:Core/Src/main.c **** void tearDown(){
 386:Core/Src/main.c **** 
 387:Core/Src/main.c **** }
 388:Core/Src/main.c **** 
 389:Core/Src/main.c **** void send_char(uint8_t data)
 390:Core/Src/main.c **** {
 282              		.loc 1 390 1 is_stmt 1 view -0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		.loc 1 390 1 is_stmt 0 view .LVU54
 287 0000 08B5     		push	{r3, lr}
 288              	.LCFI12:
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 3, -8
 291              		.cfi_offset 14, -4
 391:Core/Src/main.c ****     uart_sendchar(data);
 292              		.loc 1 391 5 is_stmt 1 view .LVU55
 293 0002 FFF7FEFF 		bl	uart_sendchar
 294              	.LVL13:
 392:Core/Src/main.c **** }
 295              		.loc 1 392 1 is_stmt 0 view .LVU56
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 13


 296 0006 08BD     		pop	{r3, pc}
 297              		.cfi_endproc
 298              	.LFE150:
 300              		.section	.text.debug_printf,"ax",%progbits
 301              		.align	1
 302              		.global	debug_printf
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 306              		.fpu fpv4-sp-d16
 308              	debug_printf:
 309              	.LVL14:
 310              	.LFB144:
 343:Core/Src/main.c ****   char buf[1024];
 311              		.loc 1 343 1 is_stmt 1 view -0
 312              		.cfi_startproc
 313              		@ args = 4, pretend = 16, frame = 1032
 314              		@ frame_needed = 0, uses_anonymous_args = 1
 343:Core/Src/main.c ****   char buf[1024];
 315              		.loc 1 343 1 is_stmt 0 view .LVU58
 316 0000 0FB4     		push	{r0, r1, r2, r3}
 317              	.LCFI13:
 318              		.cfi_def_cfa_offset 16
 319              		.cfi_offset 0, -16
 320              		.cfi_offset 1, -12
 321              		.cfi_offset 2, -8
 322              		.cfi_offset 3, -4
 323 0002 30B5     		push	{r4, r5, lr}
 324              	.LCFI14:
 325              		.cfi_def_cfa_offset 28
 326              		.cfi_offset 4, -28
 327              		.cfi_offset 5, -24
 328              		.cfi_offset 14, -20
 329 0004 ADF20C4D 		subw	sp, sp, #1036
 330              	.LCFI15:
 331              		.cfi_def_cfa_offset 1064
 332 0008 0DF58362 		add	r2, sp, #1048
 333 000c 52F8041B 		ldr	r1, [r2], #4
 344:Core/Src/main.c ****   int len, i;
 334              		.loc 1 344 3 is_stmt 1 view .LVU59
 345:Core/Src/main.c ****   va_list args;
 335              		.loc 1 345 3 view .LVU60
 346:Core/Src/main.c ****   va_start (args, fmt);
 336              		.loc 1 346 3 view .LVU61
 347:Core/Src/main.c **** 
 337              		.loc 1 347 3 view .LVU62
 338 0010 0192     		str	r2, [sp, #4]
 349:Core/Src/main.c ****   for (i=0; i<len; i++)
 339              		.loc 1 349 3 view .LVU63
 349:Core/Src/main.c ****   for (i=0; i<len; i++)
 340              		.loc 1 349 9 is_stmt 0 view .LVU64
 341 0012 02A8     		add	r0, sp, #8
 342 0014 FFF7FEFF 		bl	vsprintf
 343              	.LVL15:
 344 0018 0546     		mov	r5, r0
 345              	.LVL16:
 350:Core/Src/main.c ****   {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 14


 346              		.loc 1 350 3 is_stmt 1 view .LVU65
 350:Core/Src/main.c ****   {
 347              		.loc 1 350 9 is_stmt 0 view .LVU66
 348 001a 0024     		movs	r4, #0
 350:Core/Src/main.c ****   {
 349              		.loc 1 350 3 view .LVU67
 350 001c 07E0     		b	.L18
 351              	.LVL17:
 352              	.L19:
 352:Core/Src/main.c ****   }
 353              		.loc 1 352 5 is_stmt 1 discriminator 3 view .LVU68
 354 001e 0A23     		movs	r3, #10
 355 0020 0122     		movs	r2, #1
 356 0022 02A9     		add	r1, sp, #8
 357 0024 2144     		add	r1, r1, r4
 358 0026 0648     		ldr	r0, .L21
 359 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 360              	.LVL18:
 350:Core/Src/main.c ****   {
 361              		.loc 1 350 20 discriminator 3 view .LVU69
 350:Core/Src/main.c ****   {
 362              		.loc 1 350 21 is_stmt 0 discriminator 3 view .LVU70
 363 002c 0134     		adds	r4, r4, #1
 364              	.LVL19:
 365              	.L18:
 350:Core/Src/main.c ****   {
 366              		.loc 1 350 13 is_stmt 1 discriminator 1 view .LVU71
 350:Core/Src/main.c ****   {
 367              		.loc 1 350 3 is_stmt 0 discriminator 1 view .LVU72
 368 002e AC42     		cmp	r4, r5
 369 0030 F5DB     		blt	.L19
 354:Core/Src/main.c ****   return len;
 370              		.loc 1 354 3 is_stmt 1 view .LVU73
 355:Core/Src/main.c **** }
 371              		.loc 1 355 3 view .LVU74
 356:Core/Src/main.c **** 
 372              		.loc 1 356 1 is_stmt 0 view .LVU75
 373 0032 2846     		mov	r0, r5
 374 0034 0DF20C4D 		addw	sp, sp, #1036
 375              	.LCFI16:
 376              		.cfi_def_cfa_offset 28
 377              		@ sp needed
 378 0038 BDE83040 		pop	{r4, r5, lr}
 379              	.LCFI17:
 380              		.cfi_restore 14
 381              		.cfi_restore 5
 382              		.cfi_restore 4
 383              		.cfi_def_cfa_offset 16
 384              	.LVL20:
 356:Core/Src/main.c **** 
 385              		.loc 1 356 1 view .LVU76
 386 003c 04B0     		add	sp, sp, #16
 387              	.LCFI18:
 388              		.cfi_restore 3
 389              		.cfi_restore 2
 390              		.cfi_restore 1
 391              		.cfi_restore 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 15


 392              		.cfi_def_cfa_offset 0
 393 003e 7047     		bx	lr
 394              	.L22:
 395              		.align	2
 396              	.L21:
 397 0040 00000000 		.word	.LANCHOR1
 398              		.cfi_endproc
 399              	.LFE144:
 401              		.section	.text.debug_sendchar,"ax",%progbits
 402              		.align	1
 403              		.global	debug_sendchar
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu fpv4-sp-d16
 409              	debug_sendchar:
 410              	.LVL21:
 411              	.LFB145:
 359:Core/Src/main.c ****   char temp = pdata;
 412              		.loc 1 359 1 is_stmt 1 view -0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 8
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 359:Core/Src/main.c ****   char temp = pdata;
 416              		.loc 1 359 1 is_stmt 0 view .LVU78
 417 0000 00B5     		push	{lr}
 418              	.LCFI19:
 419              		.cfi_def_cfa_offset 4
 420              		.cfi_offset 14, -4
 421 0002 83B0     		sub	sp, sp, #12
 422              	.LCFI20:
 423              		.cfi_def_cfa_offset 16
 360:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, &temp, sizeof(char), 10);
 424              		.loc 1 360 3 is_stmt 1 view .LVU79
 360:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, &temp, sizeof(char), 10);
 425              		.loc 1 360 8 is_stmt 0 view .LVU80
 426 0004 8DF80700 		strb	r0, [sp, #7]
 361:Core/Src/main.c ****   // if ('\n' == pdata)
 427              		.loc 1 361 3 is_stmt 1 view .LVU81
 428 0008 0A23     		movs	r3, #10
 429 000a 0122     		movs	r2, #1
 430 000c 0DF10701 		add	r1, sp, #7
 431 0010 0248     		ldr	r0, .L25
 432              	.LVL22:
 361:Core/Src/main.c ****   // if ('\n' == pdata)
 433              		.loc 1 361 3 is_stmt 0 view .LVU82
 434 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 435              	.LVL23:
 367:Core/Src/main.c **** 
 436              		.loc 1 367 1 view .LVU83
 437 0016 03B0     		add	sp, sp, #12
 438              	.LCFI21:
 439              		.cfi_def_cfa_offset 4
 440              		@ sp needed
 441 0018 5DF804FB 		ldr	pc, [sp], #4
 442              	.L26:
 443              		.align	2
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 16


 444              	.L25:
 445 001c 00000000 		.word	.LANCHOR1
 446              		.cfi_endproc
 447              	.LFE145:
 449              		.section	.rodata.frame_received.str1.4,"aMS",%progbits,1
 450              		.align	2
 451              	.LC0:
 452 0000 0D0A5265 		.ascii	"\015\012Received frame: \000"
 452      63656976 
 452      65642066 
 452      72616D65 
 452      3A2000
 453              		.section	.text.frame_received,"ax",%progbits
 454              		.align	1
 455              		.global	frame_received
 456              		.syntax unified
 457              		.thumb
 458              		.thumb_func
 459              		.fpu fpv4-sp-d16
 461              	frame_received:
 462              	.LVL24:
 463              	.LFB151:
 393:Core/Src/main.c **** 
 394:Core/Src/main.c **** void frame_received(const uint8_t *frame_buffer, uint16_t frame_length)
 395:Core/Src/main.c **** {
 464              		.loc 1 395 1 is_stmt 1 view -0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468              		.loc 1 395 1 is_stmt 0 view .LVU85
 469 0000 70B5     		push	{r4, r5, r6, lr}
 470              	.LCFI22:
 471              		.cfi_def_cfa_offset 16
 472              		.cfi_offset 4, -16
 473              		.cfi_offset 5, -12
 474              		.cfi_offset 6, -8
 475              		.cfi_offset 14, -4
 476 0002 0646     		mov	r6, r0
 477 0004 0D46     		mov	r5, r1
 396:Core/Src/main.c ****   debug_printf("\r\nReceived frame: ");
 478              		.loc 1 396 3 is_stmt 1 view .LVU86
 479 0006 0648     		ldr	r0, .L31
 480              	.LVL25:
 481              		.loc 1 396 3 is_stmt 0 view .LVU87
 482 0008 FFF7FEFF 		bl	debug_printf
 483              	.LVL26:
 397:Core/Src/main.c ****   for (uint16_t i = 0; i < frame_length; i++)
 484              		.loc 1 397 3 is_stmt 1 view .LVU88
 485              	.LBB6:
 486              		.loc 1 397 8 view .LVU89
 487              		.loc 1 397 17 is_stmt 0 view .LVU90
 488 000c 0024     		movs	r4, #0
 489              		.loc 1 397 3 view .LVU91
 490 000e 04E0     		b	.L28
 491              	.LVL27:
 492              	.L29:
 398:Core/Src/main.c ****   {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 17


 399:Core/Src/main.c ****       debug_sendchar(frame_buffer[i]);
 493              		.loc 1 399 7 is_stmt 1 discriminator 3 view .LVU92
 494 0010 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 495 0012 FFF7FEFF 		bl	debug_sendchar
 496              	.LVL28:
 397:Core/Src/main.c ****   for (uint16_t i = 0; i < frame_length; i++)
 497              		.loc 1 397 42 discriminator 3 view .LVU93
 397:Core/Src/main.c ****   for (uint16_t i = 0; i < frame_length; i++)
 498              		.loc 1 397 43 is_stmt 0 discriminator 3 view .LVU94
 499 0016 0134     		adds	r4, r4, #1
 500              	.LVL29:
 397:Core/Src/main.c ****   for (uint16_t i = 0; i < frame_length; i++)
 501              		.loc 1 397 43 discriminator 3 view .LVU95
 502 0018 A4B2     		uxth	r4, r4
 503              	.LVL30:
 504              	.L28:
 397:Core/Src/main.c ****   for (uint16_t i = 0; i < frame_length; i++)
 505              		.loc 1 397 24 is_stmt 1 discriminator 1 view .LVU96
 397:Core/Src/main.c ****   for (uint16_t i = 0; i < frame_length; i++)
 506              		.loc 1 397 3 is_stmt 0 discriminator 1 view .LVU97
 507 001a AC42     		cmp	r4, r5
 508 001c F8D3     		bcc	.L29
 509              	.LBE6:
 400:Core/Src/main.c ****   }
 401:Core/Src/main.c **** }
 510              		.loc 1 401 1 view .LVU98
 511 001e 70BD     		pop	{r4, r5, r6, pc}
 512              	.LVL31:
 513              	.L32:
 514              		.loc 1 401 1 view .LVU99
 515              		.align	2
 516              	.L31:
 517 0020 00000000 		.word	.LC0
 518              		.cfi_endproc
 519              	.LFE151:
 521              		.section	.text.add,"ax",%progbits
 522              		.align	1
 523              		.global	add
 524              		.syntax unified
 525              		.thumb
 526              		.thumb_func
 527              		.fpu fpv4-sp-d16
 529              	add:
 530              	.LVL32:
 531              	.LFB146:
 369:Core/Src/main.c ****     return a + b;
 532              		.loc 1 369 22 is_stmt 1 view -0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              		@ link register save eliminated.
 370:Core/Src/main.c **** }
 537              		.loc 1 370 5 view .LVU101
 371:Core/Src/main.c **** 
 538              		.loc 1 371 1 is_stmt 0 view .LVU102
 539 0000 0844     		add	r0, r0, r1
 540              	.LVL33:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 18


 371:Core/Src/main.c **** 
 541              		.loc 1 371 1 view .LVU103
 542 0002 7047     		bx	lr
 543              		.cfi_endproc
 544              	.LFE146:
 546              		.section	.text.test_add,"ax",%progbits
 547              		.align	1
 548              		.global	test_add
 549              		.syntax unified
 550              		.thumb
 551              		.thumb_func
 552              		.fpu fpv4-sp-d16
 554              	test_add:
 555              	.LFB147:
 373:Core/Src/main.c ****     for(int i=0; i<9; i++){
 556              		.loc 1 373 20 is_stmt 1 view -0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 0, uses_anonymous_args = 0
 560 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 561              	.LCFI23:
 562              		.cfi_def_cfa_offset 24
 563              		.cfi_offset 4, -24
 564              		.cfi_offset 5, -20
 565              		.cfi_offset 6, -16
 566              		.cfi_offset 7, -12
 567              		.cfi_offset 8, -8
 568              		.cfi_offset 14, -4
 569 0004 82B0     		sub	sp, sp, #8
 570              	.LCFI24:
 571              		.cfi_def_cfa_offset 32
 374:Core/Src/main.c ****         for(int j=0; j<9; j++){
 572              		.loc 1 374 5 view .LVU105
 573              	.LBB7:
 374:Core/Src/main.c ****         for(int j=0; j<9; j++){
 574              		.loc 1 374 9 view .LVU106
 575              	.LVL34:
 374:Core/Src/main.c ****         for(int j=0; j<9; j++){
 576              		.loc 1 374 13 is_stmt 0 view .LVU107
 577 0006 4FF00008 		mov	r8, #0
 374:Core/Src/main.c ****         for(int j=0; j<9; j++){
 578              		.loc 1 374 5 view .LVU108
 579 000a 1CE0     		b	.L35
 580              	.LVL35:
 581              	.L36:
 582              	.LBB8:
 376:Core/Src/main.c ****             TEST_ASSERT_EQUAL_INT((i+j+1), add(i,j));
 583              		.loc 1 376 13 is_stmt 1 discriminator 3 view .LVU109
 584 000c 08EB0406 		add	r6, r8, r4
 585 0010 2146     		mov	r1, r4
 586 0012 4046     		mov	r0, r8
 587 0014 FFF7FEFF 		bl	add
 588              	.LVL36:
 589 0018 0546     		mov	r5, r0
 590 001a 1427     		movs	r7, #20
 591 001c 0097     		str	r7, [sp]
 592 001e 4FF4BC73 		mov	r3, #376
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 19


 593 0022 0022     		movs	r2, #0
 594 0024 0146     		mov	r1, r0
 595 0026 3046     		mov	r0, r6
 596 0028 FFF7FEFF 		bl	UnityAssertEqualNumber
 597              	.LVL37:
 377:Core/Src/main.c ****         }
 598              		.loc 1 377 13 discriminator 3 view .LVU110
 599 002c 0097     		str	r7, [sp]
 600 002e 40F27913 		movw	r3, #377
 601 0032 0022     		movs	r2, #0
 602 0034 2946     		mov	r1, r5
 603 0036 701C     		adds	r0, r6, #1
 604 0038 FFF7FEFF 		bl	UnityAssertEqualNumber
 605              	.LVL38:
 375:Core/Src/main.c ****             TEST_ASSERT_EQUAL_INT((i+j), add(i,j));
 606              		.loc 1 375 27 discriminator 3 view .LVU111
 375:Core/Src/main.c ****             TEST_ASSERT_EQUAL_INT((i+j), add(i,j));
 607              		.loc 1 375 28 is_stmt 0 discriminator 3 view .LVU112
 608 003c 0134     		adds	r4, r4, #1
 609              	.LVL39:
 610              	.L37:
 375:Core/Src/main.c ****             TEST_ASSERT_EQUAL_INT((i+j), add(i,j));
 611              		.loc 1 375 22 is_stmt 1 discriminator 1 view .LVU113
 375:Core/Src/main.c ****             TEST_ASSERT_EQUAL_INT((i+j), add(i,j));
 612              		.loc 1 375 9 is_stmt 0 discriminator 1 view .LVU114
 613 003e 082C     		cmp	r4, #8
 614 0040 E4DD     		ble	.L36
 615              	.LBE8:
 374:Core/Src/main.c ****         for(int j=0; j<9; j++){
 616              		.loc 1 374 23 is_stmt 1 discriminator 2 view .LVU115
 374:Core/Src/main.c ****         for(int j=0; j<9; j++){
 617              		.loc 1 374 24 is_stmt 0 discriminator 2 view .LVU116
 618 0042 08F10108 		add	r8, r8, #1
 619              	.LVL40:
 620              	.L35:
 374:Core/Src/main.c ****         for(int j=0; j<9; j++){
 621              		.loc 1 374 18 is_stmt 1 discriminator 1 view .LVU117
 374:Core/Src/main.c ****         for(int j=0; j<9; j++){
 622              		.loc 1 374 5 is_stmt 0 discriminator 1 view .LVU118
 623 0046 B8F1080F 		cmp	r8, #8
 624 004a 01DC     		bgt	.L40
 625              	.LBB9:
 375:Core/Src/main.c ****             TEST_ASSERT_EQUAL_INT((i+j), add(i,j));
 626              		.loc 1 375 17 view .LVU119
 627 004c 0024     		movs	r4, #0
 628 004e F6E7     		b	.L37
 629              	.L40:
 630              	.LBE9:
 631              	.LBE7:
 380:Core/Src/main.c **** 
 632              		.loc 1 380 1 view .LVU120
 633 0050 02B0     		add	sp, sp, #8
 634              	.LCFI25:
 635              		.cfi_def_cfa_offset 24
 636              		@ sp needed
 637 0052 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 380:Core/Src/main.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 20


 638              		.loc 1 380 1 view .LVU121
 639              		.cfi_endproc
 640              	.LFE147:
 642              		.section	.text.setUp,"ax",%progbits
 643              		.align	1
 644              		.global	setUp
 645              		.syntax unified
 646              		.thumb
 647              		.thumb_func
 648              		.fpu fpv4-sp-d16
 650              	setUp:
 651              	.LFB148:
 382:Core/Src/main.c **** 
 652              		.loc 1 382 13 is_stmt 1 view -0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656              		@ link register save eliminated.
 384:Core/Src/main.c **** void tearDown(){
 657              		.loc 1 384 1 view .LVU123
 658 0000 7047     		bx	lr
 659              		.cfi_endproc
 660              	.LFE148:
 662              		.section	.text.tearDown,"ax",%progbits
 663              		.align	1
 664              		.global	tearDown
 665              		.syntax unified
 666              		.thumb
 667              		.thumb_func
 668              		.fpu fpv4-sp-d16
 670              	tearDown:
 671              	.LFB149:
 385:Core/Src/main.c **** 
 672              		.loc 1 385 16 view -0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 0
 675              		@ frame_needed = 0, uses_anonymous_args = 0
 676              		@ link register save eliminated.
 387:Core/Src/main.c **** 
 677              		.loc 1 387 1 view .LVU125
 678 0000 7047     		bx	lr
 679              		.cfi_endproc
 680              	.LFE149:
 682              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 683              		.align	1
 684              		.global	HAL_UART_RxCpltCallback
 685              		.syntax unified
 686              		.thumb
 687              		.thumb_func
 688              		.fpu fpv4-sp-d16
 690              	HAL_UART_RxCpltCallback:
 691              	.LVL41:
 692              	.LFB152:
 402:Core/Src/main.c **** 
 403:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 404:Core/Src/main.c **** {
 693              		.loc 1 404 1 view -0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 21


 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 0
 696              		@ frame_needed = 0, uses_anonymous_args = 0
 697              		.loc 1 404 1 is_stmt 0 view .LVU127
 698 0000 08B5     		push	{r3, lr}
 699              	.LCFI26:
 700              		.cfi_def_cfa_offset 8
 701              		.cfi_offset 3, -8
 702              		.cfi_offset 14, -4
 405:Core/Src/main.c ****   timeoutReceive = 70;
 703              		.loc 1 405 3 is_stmt 1 view .LVU128
 704              		.loc 1 405 18 is_stmt 0 view .LVU129
 705 0002 0C4B     		ldr	r3, .L46
 706 0004 4622     		movs	r2, #70
 707 0006 1A80     		strh	r2, [r3]	@ movhi
 406:Core/Src/main.c ****   // debug_sendchar(data_rx[0]);
 407:Core/Src/main.c ****   memcpy(buf_rx+t, data_rx, 1);
 708              		.loc 1 407 3 is_stmt 1 view .LVU130
 709 0008 0B4B     		ldr	r3, .L46+4
 710 000a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 711              	.LVL42:
 712              		.loc 1 407 3 is_stmt 0 view .LVU131
 713 000c 0B4A     		ldr	r2, .L46+8
 714 000e 1388     		ldrh	r3, [r2]
 715 0010 0B49     		ldr	r1, .L46+12
 716 0012 C854     		strb	r0, [r1, r3]
 408:Core/Src/main.c ****   if (++t >= 256) t = 0;
 717              		.loc 1 408 3 is_stmt 1 view .LVU132
 718              		.loc 1 408 7 is_stmt 0 view .LVU133
 719 0014 1388     		ldrh	r3, [r2]
 720 0016 0133     		adds	r3, r3, #1
 721 0018 9BB2     		uxth	r3, r3
 722              		.loc 1 408 6 view .LVU134
 723 001a 1380     		strh	r3, [r2]	@ movhi
 724 001c FF2B     		cmp	r3, #255
 725 001e 02D9     		bls	.L44
 726              		.loc 1 408 19 is_stmt 1 discriminator 1 view .LVU135
 727              		.loc 1 408 21 is_stmt 0 discriminator 1 view .LVU136
 728 0020 1346     		mov	r3, r2
 729 0022 0022     		movs	r2, #0
 730 0024 1A80     		strh	r2, [r3]	@ movhi
 731              	.L44:
 409:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1, data_rx, 1);
 732              		.loc 1 409 3 is_stmt 1 view .LVU137
 733 0026 0122     		movs	r2, #1
 734 0028 0349     		ldr	r1, .L46+4
 735 002a 0648     		ldr	r0, .L46+16
 736 002c FFF7FEFF 		bl	HAL_UART_Receive_IT
 737              	.LVL43:
 410:Core/Src/main.c **** }
 738              		.loc 1 410 1 is_stmt 0 view .LVU138
 739 0030 08BD     		pop	{r3, pc}
 740              	.L47:
 741 0032 00BF     		.align	2
 742              	.L46:
 743 0034 00000000 		.word	.LANCHOR2
 744 0038 00000000 		.word	.LANCHOR3
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 22


 745 003c 00000000 		.word	.LANCHOR5
 746 0040 00000000 		.word	.LANCHOR4
 747 0044 00000000 		.word	.LANCHOR0
 748              		.cfi_endproc
 749              	.LFE152:
 751              		.section	.rodata.ProcessDataFromUART.str1.4,"aMS",%progbits,1
 752              		.align	2
 753              	.LC1:
 754 0000 52656365 		.ascii	"Received data: %s\012\000"
 754      69766564 
 754      20646174 
 754      613A2025 
 754      730A00
 755 0013 00       		.align	2
 756              	.LC2:
 757 0014 4572726F 		.ascii	"Error decoding frame %d\015\012\000"
 757      72206465 
 757      636F6469 
 757      6E672066 
 757      72616D65 
 758 002e 0000     		.align	2
 759              	.LC3:
 760 0030 74203D20 		.ascii	"t = %d buf_rx:\015\012\000"
 760      25642062 
 760      75665F72 
 760      783A0D0A 
 760      00
 761 0041 000000   		.align	2
 762              	.LC4:
 763 0044 30782530 		.ascii	"0x%02x, \000"
 763      32782C20 
 763      00
 764 004d 000000   		.align	2
 765              	.LC5:
 766 0050 0D0A7265 		.ascii	"\015\012received_len = %d received_data:\015\012\000"
 766      63656976 
 766      65645F6C 
 766      656E203D 
 766      20256420 
 767              		.section	.text.ProcessDataFromUART,"ax",%progbits
 768              		.align	1
 769              		.global	ProcessDataFromUART
 770              		.syntax unified
 771              		.thumb
 772              		.thumb_func
 773              		.fpu fpv4-sp-d16
 775              	ProcessDataFromUART:
 776              	.LFB153:
 411:Core/Src/main.c **** 
 412:Core/Src/main.c **** void ProcessDataFromUART(void)
 413:Core/Src/main.c **** {
 777              		.loc 1 413 1 is_stmt 1 view -0
 778              		.cfi_startproc
 779              		@ args = 0, pretend = 0, frame = 264
 780              		@ frame_needed = 0, uses_anonymous_args = 0
 414:Core/Src/main.c **** 	/* Neu khong co du lieu thi khong xu ly */
 415:Core/Src/main.c **** 	if(newReceive == 0)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 23


 781              		.loc 1 415 2 view .LVU140
 782              		.loc 1 415 16 is_stmt 0 view .LVU141
 783 0000 2B4B     		ldr	r3, .L64
 784 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 785              		.loc 1 415 4 view .LVU142
 786 0004 03B9     		cbnz	r3, .L63
 787 0006 7047     		bx	lr
 788              	.L63:
 413:Core/Src/main.c **** 	/* Neu khong co du lieu thi khong xu ly */
 789              		.loc 1 413 1 view .LVU143
 790 0008 10B5     		push	{r4, lr}
 791              	.LCFI27:
 792              		.cfi_def_cfa_offset 8
 793              		.cfi_offset 4, -8
 794              		.cfi_offset 14, -4
 795 000a C4B0     		sub	sp, sp, #272
 796              	.LCFI28:
 797              		.cfi_def_cfa_offset 280
 416:Core/Src/main.c **** 		return;
 417:Core/Src/main.c **** 	
 418:Core/Src/main.c **** 	/* Xoa co bao co du lieu */
 419:Core/Src/main.c **** 	newReceive = 0;
 798              		.loc 1 419 2 is_stmt 1 view .LVU144
 799              		.loc 1 419 13 is_stmt 0 view .LVU145
 800 000c 0021     		movs	r1, #0
 801 000e 284B     		ldr	r3, .L64
 802 0010 1970     		strb	r1, [r3]
 420:Core/Src/main.c **** 	/* Xu ly lenh */
 421:Core/Src/main.c ****   int ret;
 803              		.loc 1 421 3 is_stmt 1 view .LVU146
 422:Core/Src/main.c ****   uint8_t received_data[256] = {0};
 804              		.loc 1 422 3 view .LVU147
 805              		.loc 1 422 11 is_stmt 0 view .LVU148
 806 0012 0491     		str	r1, [sp, #16]
 807 0014 FC22     		movs	r2, #252
 808 0016 05A8     		add	r0, sp, #20
 809 0018 FFF7FEFF 		bl	memset
 810              	.LVL44:
 423:Core/Src/main.c ****   int received_len = t;
 811              		.loc 1 423 3 is_stmt 1 view .LVU149
 812              		.loc 1 423 7 is_stmt 0 view .LVU150
 813 001c 254B     		ldr	r3, .L64+4
 814 001e 1A88     		ldrh	r2, [r3]
 815 0020 03AB     		add	r3, sp, #12
 816 0022 0392     		str	r2, [sp, #12]
 424:Core/Src/main.c **** 
 425:Core/Src/main.c ****   ret = yahdlc_get_data(&state, buf_rx, t, received_data, &received_len);
 817              		.loc 1 425 3 is_stmt 1 view .LVU151
 818              		.loc 1 425 9 is_stmt 0 view .LVU152
 819 0024 0093     		str	r3, [sp]
 820 0026 04AB     		add	r3, sp, #16
 821 0028 2349     		ldr	r1, .L64+8
 822 002a 2448     		ldr	r0, .L64+12
 823 002c FFF7FEFF 		bl	yahdlc_get_data
 824              	.LVL45:
 426:Core/Src/main.c ****   if (ret == 0) {
 825              		.loc 1 426 3 is_stmt 1 view .LVU153
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 24


 826              		.loc 1 426 6 is_stmt 0 view .LVU154
 827 0030 0446     		mov	r4, r0
 828 0032 B8B9     		cbnz	r0, .L51
 427:Core/Src/main.c ****       debug_printf("Received data: %s\n", received_data);
 829              		.loc 1 427 7 is_stmt 1 view .LVU155
 830 0034 04A9     		add	r1, sp, #16
 831 0036 2248     		ldr	r0, .L64+16
 832              	.LVL46:
 833              		.loc 1 427 7 is_stmt 0 view .LVU156
 834 0038 FFF7FEFF 		bl	debug_printf
 835              	.LVL47:
 428:Core/Src/main.c ****       for(int i=0; i<t; i++)
 836              		.loc 1 428 7 is_stmt 1 view .LVU157
 837              	.LBB10:
 838              		.loc 1 428 11 view .LVU158
 839              		.loc 1 428 7 is_stmt 0 view .LVU159
 840 003c 04E0     		b	.L52
 841              	.LVL48:
 842              	.L53:
 429:Core/Src/main.c ****       {
 430:Core/Src/main.c ****         debug_sendchar(received_data[i]);
 843              		.loc 1 430 9 is_stmt 1 discriminator 3 view .LVU160
 844 003e 04AB     		add	r3, sp, #16
 845 0040 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 846 0042 FFF7FEFF 		bl	debug_sendchar
 847              	.LVL49:
 428:Core/Src/main.c ****       for(int i=0; i<t; i++)
 848              		.loc 1 428 25 discriminator 3 view .LVU161
 428:Core/Src/main.c ****       for(int i=0; i<t; i++)
 849              		.loc 1 428 26 is_stmt 0 discriminator 3 view .LVU162
 850 0046 0134     		adds	r4, r4, #1
 851              	.LVL50:
 852              	.L52:
 428:Core/Src/main.c ****       for(int i=0; i<t; i++)
 853              		.loc 1 428 20 is_stmt 1 discriminator 1 view .LVU163
 428:Core/Src/main.c ****       for(int i=0; i<t; i++)
 854              		.loc 1 428 21 is_stmt 0 discriminator 1 view .LVU164
 855 0048 1A4B     		ldr	r3, .L64+4
 856 004a 1B88     		ldrh	r3, [r3]
 428:Core/Src/main.c ****       for(int i=0; i<t; i++)
 857              		.loc 1 428 7 discriminator 1 view .LVU165
 858 004c A342     		cmp	r3, r4
 859 004e F6DC     		bgt	.L53
 860              	.LVL51:
 861              	.L54:
 428:Core/Src/main.c ****       for(int i=0; i<t; i++)
 862              		.loc 1 428 7 discriminator 1 view .LVU166
 863              	.LBE10:
 431:Core/Src/main.c ****       }
 432:Core/Src/main.c ****   } else {
 433:Core/Src/main.c ****       debug_printf("Error decoding frame %d\r\n", ret);
 434:Core/Src/main.c ****       debug_printf("t = %d buf_rx:\r\n", t);
 435:Core/Src/main.c ****       for(int i=0; i<t; i++)
 436:Core/Src/main.c ****       {
 437:Core/Src/main.c ****         debug_printf("0x%02x, ", buf_rx[i]);
 438:Core/Src/main.c ****       }
 439:Core/Src/main.c ****       debug_printf("\r\nreceived_len = %d received_data:\r\n", received_len);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 25


 440:Core/Src/main.c ****       for(int i=0; i<received_len; i++)
 441:Core/Src/main.c ****       {
 442:Core/Src/main.c ****         debug_printf("0x%02x, ", received_data[i]);
 443:Core/Src/main.c ****       }
 444:Core/Src/main.c ****   }
 445:Core/Src/main.c **** 	/* Xoa bo dem nhan */
 446:Core/Src/main.c **** 	t = 0;
 864              		.loc 1 446 2 is_stmt 1 discriminator 1 view .LVU167
 865              		.loc 1 446 4 is_stmt 0 discriminator 1 view .LVU168
 866 0050 0021     		movs	r1, #0
 867 0052 184B     		ldr	r3, .L64+4
 868 0054 1980     		strh	r1, [r3]	@ movhi
 447:Core/Src/main.c **** 	memset(buf_rx, 0, 256);
 869              		.loc 1 447 2 is_stmt 1 discriminator 1 view .LVU169
 870 0056 4FF48072 		mov	r2, #256
 871 005a 1748     		ldr	r0, .L64+8
 872 005c FFF7FEFF 		bl	memset
 873              	.LVL52:
 448:Core/Src/main.c **** }
 874              		.loc 1 448 1 is_stmt 0 discriminator 1 view .LVU170
 875 0060 44B0     		add	sp, sp, #272
 876              	.LCFI29:
 877              		.cfi_remember_state
 878              		.cfi_def_cfa_offset 8
 879              		@ sp needed
 880 0062 10BD     		pop	{r4, pc}
 881              	.LVL53:
 882              	.L51:
 883              	.LCFI30:
 884              		.cfi_restore_state
 433:Core/Src/main.c ****       debug_printf("t = %d buf_rx:\r\n", t);
 885              		.loc 1 433 7 is_stmt 1 view .LVU171
 886 0064 0146     		mov	r1, r0
 887 0066 1748     		ldr	r0, .L64+20
 888              	.LVL54:
 433:Core/Src/main.c ****       debug_printf("t = %d buf_rx:\r\n", t);
 889              		.loc 1 433 7 is_stmt 0 view .LVU172
 890 0068 FFF7FEFF 		bl	debug_printf
 891              	.LVL55:
 434:Core/Src/main.c ****       for(int i=0; i<t; i++)
 892              		.loc 1 434 7 is_stmt 1 view .LVU173
 893 006c 114B     		ldr	r3, .L64+4
 894 006e 1988     		ldrh	r1, [r3]
 895 0070 1548     		ldr	r0, .L64+24
 896 0072 FFF7FEFF 		bl	debug_printf
 897              	.LVL56:
 435:Core/Src/main.c ****       {
 898              		.loc 1 435 7 view .LVU174
 899              	.LBB11:
 435:Core/Src/main.c ****       {
 900              		.loc 1 435 11 view .LVU175
 435:Core/Src/main.c ****       {
 901              		.loc 1 435 15 is_stmt 0 view .LVU176
 902 0076 0024     		movs	r4, #0
 903              	.LVL57:
 435:Core/Src/main.c ****       {
 904              		.loc 1 435 7 view .LVU177
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 26


 905 0078 05E0     		b	.L55
 906              	.LVL58:
 907              	.L56:
 437:Core/Src/main.c ****       }
 908              		.loc 1 437 9 is_stmt 1 discriminator 3 view .LVU178
 909 007a 0F4B     		ldr	r3, .L64+8
 910 007c 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 911 007e 1348     		ldr	r0, .L64+28
 912 0080 FFF7FEFF 		bl	debug_printf
 913              	.LVL59:
 435:Core/Src/main.c ****       {
 914              		.loc 1 435 25 discriminator 3 view .LVU179
 435:Core/Src/main.c ****       {
 915              		.loc 1 435 26 is_stmt 0 discriminator 3 view .LVU180
 916 0084 0134     		adds	r4, r4, #1
 917              	.LVL60:
 918              	.L55:
 435:Core/Src/main.c ****       {
 919              		.loc 1 435 20 is_stmt 1 discriminator 1 view .LVU181
 435:Core/Src/main.c ****       {
 920              		.loc 1 435 21 is_stmt 0 discriminator 1 view .LVU182
 921 0086 0B4B     		ldr	r3, .L64+4
 922 0088 1B88     		ldrh	r3, [r3]
 435:Core/Src/main.c ****       {
 923              		.loc 1 435 7 discriminator 1 view .LVU183
 924 008a A342     		cmp	r3, r4
 925 008c F5DC     		bgt	.L56
 926              	.LBE11:
 439:Core/Src/main.c ****       for(int i=0; i<received_len; i++)
 927              		.loc 1 439 7 is_stmt 1 view .LVU184
 928 008e 0399     		ldr	r1, [sp, #12]
 929 0090 0F48     		ldr	r0, .L64+32
 930 0092 FFF7FEFF 		bl	debug_printf
 931              	.LVL61:
 440:Core/Src/main.c ****       {
 932              		.loc 1 440 7 view .LVU185
 933              	.LBB12:
 440:Core/Src/main.c ****       {
 934              		.loc 1 440 11 view .LVU186
 440:Core/Src/main.c ****       {
 935              		.loc 1 440 15 is_stmt 0 view .LVU187
 936 0096 0024     		movs	r4, #0
 937              	.LVL62:
 440:Core/Src/main.c ****       {
 938              		.loc 1 440 7 view .LVU188
 939 0098 05E0     		b	.L57
 940              	.LVL63:
 941              	.L58:
 442:Core/Src/main.c ****       }
 942              		.loc 1 442 9 is_stmt 1 discriminator 3 view .LVU189
 943 009a 04AB     		add	r3, sp, #16
 944 009c 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 945 009e 0B48     		ldr	r0, .L64+28
 946 00a0 FFF7FEFF 		bl	debug_printf
 947              	.LVL64:
 440:Core/Src/main.c ****       {
 948              		.loc 1 440 36 discriminator 3 view .LVU190
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 27


 440:Core/Src/main.c ****       {
 949              		.loc 1 440 37 is_stmt 0 discriminator 3 view .LVU191
 950 00a4 0134     		adds	r4, r4, #1
 951              	.LVL65:
 952              	.L57:
 440:Core/Src/main.c ****       {
 953              		.loc 1 440 20 is_stmt 1 discriminator 1 view .LVU192
 440:Core/Src/main.c ****       {
 954              		.loc 1 440 21 is_stmt 0 discriminator 1 view .LVU193
 955 00a6 039B     		ldr	r3, [sp, #12]
 440:Core/Src/main.c ****       {
 956              		.loc 1 440 7 discriminator 1 view .LVU194
 957 00a8 A342     		cmp	r3, r4
 958 00aa F6DC     		bgt	.L58
 959 00ac D0E7     		b	.L54
 960              	.L65:
 961 00ae 00BF     		.align	2
 962              	.L64:
 963 00b0 00000000 		.word	.LANCHOR6
 964 00b4 00000000 		.word	.LANCHOR5
 965 00b8 00000000 		.word	.LANCHOR4
 966 00bc 00000000 		.word	.LANCHOR7
 967 00c0 00000000 		.word	.LC1
 968 00c4 14000000 		.word	.LC2
 969 00c8 30000000 		.word	.LC3
 970 00cc 44000000 		.word	.LC4
 971 00d0 50000000 		.word	.LC5
 972              	.LBE12:
 973              		.cfi_endproc
 974              	.LFE153:
 976              		.section	.text.Error_Handler,"ax",%progbits
 977              		.align	1
 978              		.global	Error_Handler
 979              		.syntax unified
 980              		.thumb
 981              		.thumb_func
 982              		.fpu fpv4-sp-d16
 984              	Error_Handler:
 985              	.LFB154:
 449:Core/Src/main.c **** 
 450:Core/Src/main.c **** /* USER CODE END 4 */
 451:Core/Src/main.c **** 
 452:Core/Src/main.c **** /**
 453:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 454:Core/Src/main.c ****   * @retval None
 455:Core/Src/main.c ****   */
 456:Core/Src/main.c **** void Error_Handler(void)
 457:Core/Src/main.c **** {
 986              		.loc 1 457 1 is_stmt 1 view -0
 987              		.cfi_startproc
 988              		@ Volatile: function does not return.
 989              		@ args = 0, pretend = 0, frame = 0
 990              		@ frame_needed = 0, uses_anonymous_args = 0
 991              		@ link register save eliminated.
 458:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 459:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 460:Core/Src/main.c ****   __disable_irq();
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 28


 992              		.loc 1 460 3 view .LVU196
 993              	.LBB13:
 994              	.LBI13:
 995              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 29


  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 30


 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 31


 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 32


 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 33


 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 34


 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 35


 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 36


 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 37


 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 38


 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 39


 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 40


 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 41


 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 42


 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 43


 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 44


 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 996              		.loc 2 960 27 view .LVU197
 997              	.LBB14:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 998              		.loc 2 962 3 view .LVU198
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 45


 999              		.syntax unified
 1000              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1001 0000 72B6     		cpsid i
 1002              	@ 0 "" 2
 1003              		.thumb
 1004              		.syntax unified
 1005              	.L67:
 1006              	.LBE14:
 1007              	.LBE13:
 461:Core/Src/main.c ****   while (1)
 1008              		.loc 1 461 3 discriminator 1 view .LVU199
 462:Core/Src/main.c ****   {
 463:Core/Src/main.c ****   }
 1009              		.loc 1 463 3 discriminator 1 view .LVU200
 461:Core/Src/main.c ****   while (1)
 1010              		.loc 1 461 9 discriminator 1 view .LVU201
 1011 0002 FEE7     		b	.L67
 1012              		.cfi_endproc
 1013              	.LFE154:
 1015              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 1016              		.align	1
 1017              		.syntax unified
 1018              		.thumb
 1019              		.thumb_func
 1020              		.fpu fpv4-sp-d16
 1022              	MX_USART1_UART_Init:
 1023              	.LFB139:
 225:Core/Src/main.c **** 
 1024              		.loc 1 225 1 view -0
 1025              		.cfi_startproc
 1026              		@ args = 0, pretend = 0, frame = 0
 1027              		@ frame_needed = 0, uses_anonymous_args = 0
 1028 0000 08B5     		push	{r3, lr}
 1029              	.LCFI31:
 1030              		.cfi_def_cfa_offset 8
 1031              		.cfi_offset 3, -8
 1032              		.cfi_offset 14, -4
 234:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 1033              		.loc 1 234 3 view .LVU203
 234:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 1034              		.loc 1 234 19 is_stmt 0 view .LVU204
 1035 0002 0A48     		ldr	r0, .L72
 1036 0004 0A4B     		ldr	r3, .L72+4
 1037 0006 0360     		str	r3, [r0]
 235:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1038              		.loc 1 235 3 is_stmt 1 view .LVU205
 235:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1039              		.loc 1 235 24 is_stmt 0 view .LVU206
 1040 0008 4FF4E133 		mov	r3, #115200
 1041 000c 4360     		str	r3, [r0, #4]
 236:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1042              		.loc 1 236 3 is_stmt 1 view .LVU207
 236:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1043              		.loc 1 236 26 is_stmt 0 view .LVU208
 1044 000e 0023     		movs	r3, #0
 1045 0010 8360     		str	r3, [r0, #8]
 237:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 46


 1046              		.loc 1 237 3 is_stmt 1 view .LVU209
 237:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1047              		.loc 1 237 24 is_stmt 0 view .LVU210
 1048 0012 C360     		str	r3, [r0, #12]
 238:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1049              		.loc 1 238 3 is_stmt 1 view .LVU211
 238:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1050              		.loc 1 238 22 is_stmt 0 view .LVU212
 1051 0014 0361     		str	r3, [r0, #16]
 239:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1052              		.loc 1 239 3 is_stmt 1 view .LVU213
 239:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1053              		.loc 1 239 20 is_stmt 0 view .LVU214
 1054 0016 0C22     		movs	r2, #12
 1055 0018 4261     		str	r2, [r0, #20]
 240:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1056              		.loc 1 240 3 is_stmt 1 view .LVU215
 240:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1057              		.loc 1 240 25 is_stmt 0 view .LVU216
 1058 001a 8361     		str	r3, [r0, #24]
 241:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1059              		.loc 1 241 3 is_stmt 1 view .LVU217
 241:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1060              		.loc 1 241 28 is_stmt 0 view .LVU218
 1061 001c C361     		str	r3, [r0, #28]
 242:Core/Src/main.c ****   {
 1062              		.loc 1 242 3 is_stmt 1 view .LVU219
 242:Core/Src/main.c ****   {
 1063              		.loc 1 242 7 is_stmt 0 view .LVU220
 1064 001e FFF7FEFF 		bl	HAL_UART_Init
 1065              	.LVL66:
 242:Core/Src/main.c ****   {
 1066              		.loc 1 242 6 view .LVU221
 1067 0022 00B9     		cbnz	r0, .L71
 250:Core/Src/main.c **** 
 1068              		.loc 1 250 1 view .LVU222
 1069 0024 08BD     		pop	{r3, pc}
 1070              	.L71:
 244:Core/Src/main.c ****   }
 1071              		.loc 1 244 5 is_stmt 1 view .LVU223
 1072 0026 FFF7FEFF 		bl	Error_Handler
 1073              	.LVL67:
 1074              	.L73:
 1075 002a 00BF     		.align	2
 1076              	.L72:
 1077 002c 00000000 		.word	.LANCHOR0
 1078 0030 00100140 		.word	1073811456
 1079              		.cfi_endproc
 1080              	.LFE139:
 1082              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 1083              		.align	1
 1084              		.syntax unified
 1085              		.thumb
 1086              		.thumb_func
 1087              		.fpu fpv4-sp-d16
 1089              	MX_USART2_UART_Init:
 1090              	.LFB140:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 47


 258:Core/Src/main.c **** 
 1091              		.loc 1 258 1 view -0
 1092              		.cfi_startproc
 1093              		@ args = 0, pretend = 0, frame = 0
 1094              		@ frame_needed = 0, uses_anonymous_args = 0
 1095 0000 08B5     		push	{r3, lr}
 1096              	.LCFI32:
 1097              		.cfi_def_cfa_offset 8
 1098              		.cfi_offset 3, -8
 1099              		.cfi_offset 14, -4
 267:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1100              		.loc 1 267 3 view .LVU225
 267:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1101              		.loc 1 267 19 is_stmt 0 view .LVU226
 1102 0002 0A48     		ldr	r0, .L78
 1103 0004 0A4B     		ldr	r3, .L78+4
 1104 0006 0360     		str	r3, [r0]
 268:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1105              		.loc 1 268 3 is_stmt 1 view .LVU227
 268:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1106              		.loc 1 268 24 is_stmt 0 view .LVU228
 1107 0008 4FF4E133 		mov	r3, #115200
 1108 000c 4360     		str	r3, [r0, #4]
 269:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1109              		.loc 1 269 3 is_stmt 1 view .LVU229
 269:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1110              		.loc 1 269 26 is_stmt 0 view .LVU230
 1111 000e 0023     		movs	r3, #0
 1112 0010 8360     		str	r3, [r0, #8]
 270:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1113              		.loc 1 270 3 is_stmt 1 view .LVU231
 270:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1114              		.loc 1 270 24 is_stmt 0 view .LVU232
 1115 0012 C360     		str	r3, [r0, #12]
 271:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1116              		.loc 1 271 3 is_stmt 1 view .LVU233
 271:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1117              		.loc 1 271 22 is_stmt 0 view .LVU234
 1118 0014 0361     		str	r3, [r0, #16]
 272:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1119              		.loc 1 272 3 is_stmt 1 view .LVU235
 272:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1120              		.loc 1 272 20 is_stmt 0 view .LVU236
 1121 0016 0C22     		movs	r2, #12
 1122 0018 4261     		str	r2, [r0, #20]
 273:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1123              		.loc 1 273 3 is_stmt 1 view .LVU237
 273:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1124              		.loc 1 273 25 is_stmt 0 view .LVU238
 1125 001a 8361     		str	r3, [r0, #24]
 274:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1126              		.loc 1 274 3 is_stmt 1 view .LVU239
 274:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1127              		.loc 1 274 28 is_stmt 0 view .LVU240
 1128 001c C361     		str	r3, [r0, #28]
 275:Core/Src/main.c ****   {
 1129              		.loc 1 275 3 is_stmt 1 view .LVU241
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 48


 275:Core/Src/main.c ****   {
 1130              		.loc 1 275 7 is_stmt 0 view .LVU242
 1131 001e FFF7FEFF 		bl	HAL_UART_Init
 1132              	.LVL68:
 275:Core/Src/main.c ****   {
 1133              		.loc 1 275 6 view .LVU243
 1134 0022 00B9     		cbnz	r0, .L77
 283:Core/Src/main.c **** 
 1135              		.loc 1 283 1 view .LVU244
 1136 0024 08BD     		pop	{r3, pc}
 1137              	.L77:
 277:Core/Src/main.c ****   }
 1138              		.loc 1 277 5 is_stmt 1 view .LVU245
 1139 0026 FFF7FEFF 		bl	Error_Handler
 1140              	.LVL69:
 1141              	.L79:
 1142 002a 00BF     		.align	2
 1143              	.L78:
 1144 002c 00000000 		.word	.LANCHOR1
 1145 0030 00440040 		.word	1073759232
 1146              		.cfi_endproc
 1147              	.LFE140:
 1149              		.section	.text.SystemClock_Config,"ax",%progbits
 1150              		.align	1
 1151              		.global	SystemClock_Config
 1152              		.syntax unified
 1153              		.thumb
 1154              		.thumb_func
 1155              		.fpu fpv4-sp-d16
 1157              	SystemClock_Config:
 1158              	.LFB138:
 179:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1159              		.loc 1 179 1 view -0
 1160              		.cfi_startproc
 1161              		@ args = 0, pretend = 0, frame = 80
 1162              		@ frame_needed = 0, uses_anonymous_args = 0
 1163 0000 00B5     		push	{lr}
 1164              	.LCFI33:
 1165              		.cfi_def_cfa_offset 4
 1166              		.cfi_offset 14, -4
 1167 0002 95B0     		sub	sp, sp, #84
 1168              	.LCFI34:
 1169              		.cfi_def_cfa_offset 88
 180:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1170              		.loc 1 180 3 view .LVU247
 180:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1171              		.loc 1 180 22 is_stmt 0 view .LVU248
 1172 0004 3022     		movs	r2, #48
 1173 0006 0021     		movs	r1, #0
 1174 0008 08A8     		add	r0, sp, #32
 1175 000a FFF7FEFF 		bl	memset
 1176              	.LVL70:
 181:Core/Src/main.c **** 
 1177              		.loc 1 181 3 is_stmt 1 view .LVU249
 181:Core/Src/main.c **** 
 1178              		.loc 1 181 22 is_stmt 0 view .LVU250
 1179 000e 0023     		movs	r3, #0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 49


 1180 0010 0393     		str	r3, [sp, #12]
 1181 0012 0493     		str	r3, [sp, #16]
 1182 0014 0593     		str	r3, [sp, #20]
 1183 0016 0693     		str	r3, [sp, #24]
 1184 0018 0793     		str	r3, [sp, #28]
 185:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1185              		.loc 1 185 3 is_stmt 1 view .LVU251
 1186              	.LBB15:
 185:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1187              		.loc 1 185 3 view .LVU252
 1188 001a 0193     		str	r3, [sp, #4]
 185:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1189              		.loc 1 185 3 view .LVU253
 1190 001c 1E4A     		ldr	r2, .L86
 1191 001e 116C     		ldr	r1, [r2, #64]
 1192 0020 41F08051 		orr	r1, r1, #268435456
 1193 0024 1164     		str	r1, [r2, #64]
 185:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1194              		.loc 1 185 3 view .LVU254
 1195 0026 126C     		ldr	r2, [r2, #64]
 1196 0028 02F08052 		and	r2, r2, #268435456
 1197 002c 0192     		str	r2, [sp, #4]
 185:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1198              		.loc 1 185 3 view .LVU255
 1199 002e 019A     		ldr	r2, [sp, #4]
 1200              	.LBE15:
 185:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1201              		.loc 1 185 3 view .LVU256
 186:Core/Src/main.c **** 
 1202              		.loc 1 186 3 view .LVU257
 1203              	.LBB16:
 186:Core/Src/main.c **** 
 1204              		.loc 1 186 3 view .LVU258
 1205 0030 0293     		str	r3, [sp, #8]
 186:Core/Src/main.c **** 
 1206              		.loc 1 186 3 view .LVU259
 1207 0032 1A4B     		ldr	r3, .L86+4
 1208 0034 1A68     		ldr	r2, [r3]
 1209 0036 42F48042 		orr	r2, r2, #16384
 1210 003a 1A60     		str	r2, [r3]
 186:Core/Src/main.c **** 
 1211              		.loc 1 186 3 view .LVU260
 1212 003c 1B68     		ldr	r3, [r3]
 1213 003e 03F48043 		and	r3, r3, #16384
 1214 0042 0293     		str	r3, [sp, #8]
 186:Core/Src/main.c **** 
 1215              		.loc 1 186 3 view .LVU261
 1216 0044 029B     		ldr	r3, [sp, #8]
 1217              	.LBE16:
 186:Core/Src/main.c **** 
 1218              		.loc 1 186 3 view .LVU262
 191:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1219              		.loc 1 191 3 view .LVU263
 191:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1220              		.loc 1 191 36 is_stmt 0 view .LVU264
 1221 0046 0123     		movs	r3, #1
 1222 0048 0893     		str	r3, [sp, #32]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 50


 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1223              		.loc 1 192 3 is_stmt 1 view .LVU265
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1224              		.loc 1 192 30 is_stmt 0 view .LVU266
 1225 004a 4FF48033 		mov	r3, #65536
 1226 004e 0993     		str	r3, [sp, #36]
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1227              		.loc 1 193 3 is_stmt 1 view .LVU267
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1228              		.loc 1 193 34 is_stmt 0 view .LVU268
 1229 0050 0223     		movs	r3, #2
 1230 0052 0E93     		str	r3, [sp, #56]
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1231              		.loc 1 194 3 is_stmt 1 view .LVU269
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1232              		.loc 1 194 35 is_stmt 0 view .LVU270
 1233 0054 4FF48003 		mov	r3, #4194304
 1234 0058 0F93     		str	r3, [sp, #60]
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1235              		.loc 1 195 3 is_stmt 1 view .LVU271
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1236              		.loc 1 195 30 is_stmt 0 view .LVU272
 1237 005a 0423     		movs	r3, #4
 1238 005c 1093     		str	r3, [sp, #64]
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1239              		.loc 1 196 3 is_stmt 1 view .LVU273
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1240              		.loc 1 196 30 is_stmt 0 view .LVU274
 1241 005e 9022     		movs	r2, #144
 1242 0060 1192     		str	r2, [sp, #68]
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1243              		.loc 1 197 3 is_stmt 1 view .LVU275
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1244              		.loc 1 197 30 is_stmt 0 view .LVU276
 1245 0062 1293     		str	r3, [sp, #72]
 198:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1246              		.loc 1 198 3 is_stmt 1 view .LVU277
 198:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1247              		.loc 1 198 30 is_stmt 0 view .LVU278
 1248 0064 1393     		str	r3, [sp, #76]
 199:Core/Src/main.c ****   {
 1249              		.loc 1 199 3 is_stmt 1 view .LVU279
 199:Core/Src/main.c ****   {
 1250              		.loc 1 199 7 is_stmt 0 view .LVU280
 1251 0066 08A8     		add	r0, sp, #32
 1252 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1253              	.LVL71:
 199:Core/Src/main.c ****   {
 1254              		.loc 1 199 6 view .LVU281
 1255 006c 80B9     		cbnz	r0, .L84
 206:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1256              		.loc 1 206 3 is_stmt 1 view .LVU282
 206:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1257              		.loc 1 206 31 is_stmt 0 view .LVU283
 1258 006e 0F23     		movs	r3, #15
 1259 0070 0393     		str	r3, [sp, #12]
 208:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 51


 1260              		.loc 1 208 3 is_stmt 1 view .LVU284
 208:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1261              		.loc 1 208 34 is_stmt 0 view .LVU285
 1262 0072 0221     		movs	r1, #2
 1263 0074 0491     		str	r1, [sp, #16]
 209:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1264              		.loc 1 209 3 is_stmt 1 view .LVU286
 209:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1265              		.loc 1 209 35 is_stmt 0 view .LVU287
 1266 0076 0023     		movs	r3, #0
 1267 0078 0593     		str	r3, [sp, #20]
 210:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1268              		.loc 1 210 3 is_stmt 1 view .LVU288
 210:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1269              		.loc 1 210 36 is_stmt 0 view .LVU289
 1270 007a 4FF48052 		mov	r2, #4096
 1271 007e 0692     		str	r2, [sp, #24]
 211:Core/Src/main.c **** 
 1272              		.loc 1 211 3 is_stmt 1 view .LVU290
 211:Core/Src/main.c **** 
 1273              		.loc 1 211 36 is_stmt 0 view .LVU291
 1274 0080 0793     		str	r3, [sp, #28]
 213:Core/Src/main.c ****   {
 1275              		.loc 1 213 3 is_stmt 1 view .LVU292
 213:Core/Src/main.c ****   {
 1276              		.loc 1 213 7 is_stmt 0 view .LVU293
 1277 0082 03A8     		add	r0, sp, #12
 1278 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1279              	.LVL72:
 213:Core/Src/main.c ****   {
 1280              		.loc 1 213 6 view .LVU294
 1281 0088 20B9     		cbnz	r0, .L85
 217:Core/Src/main.c **** 
 1282              		.loc 1 217 1 view .LVU295
 1283 008a 15B0     		add	sp, sp, #84
 1284              	.LCFI35:
 1285              		.cfi_remember_state
 1286              		.cfi_def_cfa_offset 4
 1287              		@ sp needed
 1288 008c 5DF804FB 		ldr	pc, [sp], #4
 1289              	.L84:
 1290              	.LCFI36:
 1291              		.cfi_restore_state
 201:Core/Src/main.c ****   }
 1292              		.loc 1 201 5 is_stmt 1 view .LVU296
 1293 0090 FFF7FEFF 		bl	Error_Handler
 1294              	.LVL73:
 1295              	.L85:
 215:Core/Src/main.c ****   }
 1296              		.loc 1 215 5 view .LVU297
 1297 0094 FFF7FEFF 		bl	Error_Handler
 1298              	.LVL74:
 1299              	.L87:
 1300              		.align	2
 1301              	.L86:
 1302 0098 00380240 		.word	1073887232
 1303 009c 00700040 		.word	1073770496
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 52


 1304              		.cfi_endproc
 1305              	.LFE138:
 1307              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1308              		.align	2
 1309              	.LC6:
 1310 0000 48454C4C 		.ascii	"HELLO WORLD!!!\015\012\000"
 1310      4F20574F 
 1310      524C4421 
 1310      21210D0A 
 1310      00
 1311 0011 000000   		.align	2
 1312              	.LC7:
 1313 0014 436F7265 		.ascii	"Core/Src/main.c\000"
 1313      2F537263 
 1313      2F6D6169 
 1313      6E2E6300 
 1314              		.align	2
 1315              	.LC8:
 1316 0024 74657374 		.ascii	"test_add\000"
 1316      5F616464 
 1316      00
 1317 002d 000000   		.align	2
 1318              	.LC9:
 1319 0030 69203D20 		.ascii	"i = %d\015\012\000"
 1319      25640D0A 
 1319      00
 1320 0039 000000   		.align	2
 1321              	.LC10:
 1322 003c 31323334 		.ascii	"123456\015\012\000"
 1322      35360D0A 
 1322      00
 1323              		.section	.text.main,"ax",%progbits
 1324              		.align	1
 1325              		.global	main
 1326              		.syntax unified
 1327              		.thumb
 1328              		.thumb_func
 1329              		.fpu fpv4-sp-d16
 1331              	main:
 1332              	.LFB137:
  93:Core/Src/main.c **** 
 1333              		.loc 1 93 1 view -0
 1334              		.cfi_startproc
 1335              		@ args = 0, pretend = 0, frame = 536
 1336              		@ frame_needed = 0, uses_anonymous_args = 0
 1337 0000 30B5     		push	{r4, r5, lr}
 1338              	.LCFI37:
 1339              		.cfi_def_cfa_offset 12
 1340              		.cfi_offset 4, -12
 1341              		.cfi_offset 5, -8
 1342              		.cfi_offset 14, -4
 1343 0002 ADF5097D 		sub	sp, sp, #548
 1344              	.LCFI38:
 1345              		.cfi_def_cfa_offset 560
 102:Core/Src/main.c **** 
 1346              		.loc 1 102 3 view .LVU299
 1347 0006 FFF7FEFF 		bl	HAL_Init
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 53


 1348              	.LVL75:
 109:Core/Src/main.c **** 
 1349              		.loc 1 109 3 view .LVU300
 1350 000a FFF7FEFF 		bl	SystemClock_Config
 1351              	.LVL76:
 116:Core/Src/main.c ****   MX_USART1_UART_Init();
 1352              		.loc 1 116 3 view .LVU301
 1353 000e FFF7FEFF 		bl	MX_GPIO_Init
 1354              	.LVL77:
 117:Core/Src/main.c ****   MX_USART2_UART_Init();
 1355              		.loc 1 117 3 view .LVU302
 1356 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 1357              	.LVL78:
 118:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1358              		.loc 1 118 3 view .LVU303
 1359 0016 FFF7FEFF 		bl	MX_USART2_UART_Init
 1360              	.LVL79:
 120:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1, data_rx, 1);
 1361              		.loc 1 120 3 view .LVU304
 1362 001a 3348     		ldr	r0, .L98
 1363 001c FFF7FEFF 		bl	debug_printf
 1364              	.LVL80:
 121:Core/Src/main.c ****   UNITY_BEGIN();
 1365              		.loc 1 121 3 view .LVU305
 1366 0020 0122     		movs	r2, #1
 1367 0022 3249     		ldr	r1, .L98+4
 1368 0024 3248     		ldr	r0, .L98+8
 1369 0026 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1370              	.LVL81:
 122:Core/Src/main.c ****   RUN_TEST(test_add);
 1371              		.loc 1 122 3 view .LVU306
 1372 002a 3248     		ldr	r0, .L98+12
 1373 002c FFF7FEFF 		bl	UnityBegin
 1374              	.LVL82:
 123:Core/Src/main.c ****   UNITY_END();
 1375              		.loc 1 123 3 view .LVU307
 1376 0030 7B22     		movs	r2, #123
 1377 0032 3149     		ldr	r1, .L98+16
 1378 0034 3148     		ldr	r0, .L98+20
 1379 0036 FFF7FEFF 		bl	UnityDefaultTestRun
 1380              	.LVL83:
 124:Core/Src/main.c ****   minihdlc_init(send_char, frame_received);
 1381              		.loc 1 124 3 view .LVU308
 1382 003a FFF7FEFF 		bl	UnityEnd
 1383              	.LVL84:
 125:Core/Src/main.c ****   char string_buffer[256];
 1384              		.loc 1 125 3 view .LVU309
 1385 003e 3049     		ldr	r1, .L98+24
 1386 0040 3048     		ldr	r0, .L98+28
 1387 0042 FFF7FEFF 		bl	minihdlc_init
 1388              	.LVL85:
 126:Core/Src/main.c ****   for (int i = 0; i < 10; i++)
 1389              		.loc 1 126 3 view .LVU310
 127:Core/Src/main.c ****   {
 1390              		.loc 1 127 3 view .LVU311
 1391              	.LBB17:
 127:Core/Src/main.c ****   {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 54


 1392              		.loc 1 127 8 view .LVU312
 127:Core/Src/main.c ****   {
 1393              		.loc 1 127 12 is_stmt 0 view .LVU313
 1394 0046 0024     		movs	r4, #0
 127:Core/Src/main.c ****   {
 1395              		.loc 1 127 3 view .LVU314
 1396 0048 0EE0     		b	.L89
 1397              	.LVL86:
 1398              	.L90:
 129:Core/Src/main.c ****       minihdlc_send_frame((const uint8_t *)string_buffer, strlen(string_buffer));
 1399              		.loc 1 129 7 is_stmt 1 discriminator 3 view .LVU315
 1400 004a 2346     		mov	r3, r4
 1401 004c 2E4A     		ldr	r2, .L98+32
 1402 004e 4FF48071 		mov	r1, #256
 1403 0052 48A8     		add	r0, sp, #288
 1404 0054 FFF7FEFF 		bl	snprintf
 1405              	.LVL87:
 130:Core/Src/main.c ****   }
 1406              		.loc 1 130 7 discriminator 3 view .LVU316
 130:Core/Src/main.c ****   }
 1407              		.loc 1 130 59 is_stmt 0 discriminator 3 view .LVU317
 1408 0058 48A8     		add	r0, sp, #288
 1409 005a FFF7FEFF 		bl	strlen
 1410              	.LVL88:
 130:Core/Src/main.c ****   }
 1411              		.loc 1 130 7 discriminator 3 view .LVU318
 1412 005e C1B2     		uxtb	r1, r0
 1413 0060 48A8     		add	r0, sp, #288
 1414 0062 FFF7FEFF 		bl	minihdlc_send_frame
 1415              	.LVL89:
 127:Core/Src/main.c ****   {
 1416              		.loc 1 127 27 is_stmt 1 discriminator 3 view .LVU319
 127:Core/Src/main.c ****   {
 1417              		.loc 1 127 28 is_stmt 0 discriminator 3 view .LVU320
 1418 0066 0134     		adds	r4, r4, #1
 1419              	.LVL90:
 1420              	.L89:
 127:Core/Src/main.c ****   {
 1421              		.loc 1 127 19 is_stmt 1 discriminator 1 view .LVU321
 127:Core/Src/main.c ****   {
 1422              		.loc 1 127 3 is_stmt 0 discriminator 1 view .LVU322
 1423 0068 092C     		cmp	r4, #9
 1424 006a EEDD     		ble	.L90
 1425              	.LBE17:
 133:Core/Src/main.c **** 
 1426              		.loc 1 133 3 is_stmt 1 view .LVU323
 1427 006c 2748     		ldr	r0, .L98+36
 1428 006e FFF7FEFF 		bl	yahdlc_set_state
 1429              	.LVL91:
 135:Core/Src/main.c ****   control.frame = YAHDLC_FRAME_DATA;
 1430              		.loc 1 135 3 view .LVU324
 136:Core/Src/main.c ****   control.seq_no = 0;
 1431              		.loc 1 136 3 view .LVU325
 136:Core/Src/main.c ****   control.seq_no = 0;
 1432              		.loc 1 136 17 is_stmt 0 view .LVU326
 1433 0072 0024     		movs	r4, #0
 1434              	.LVL92:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 55


 136:Core/Src/main.c ****   control.seq_no = 0;
 1435              		.loc 1 136 17 view .LVU327
 1436 0074 8DF81C41 		strb	r4, [sp, #284]
 137:Core/Src/main.c **** 
 1437              		.loc 1 137 3 is_stmt 1 view .LVU328
 137:Core/Src/main.c **** 
 1438              		.loc 1 137 18 is_stmt 0 view .LVU329
 1439 0078 9DF81D31 		ldrb	r3, [sp, #285]	@ zero_extendqisi2
 1440 007c 64F30203 		bfi	r3, r4, #0, #3
 1441 0080 8DF81D31 		strb	r3, [sp, #285]
 139:Core/Src/main.c ****   uint8_t output_frame[256];
 1442              		.loc 1 139 3 is_stmt 1 view .LVU330
 139:Core/Src/main.c ****   uint8_t output_frame[256];
 1443              		.loc 1 139 11 is_stmt 0 view .LVU331
 1444 0084 224A     		ldr	r2, .L98+40
 1445 0086 44AB     		add	r3, sp, #272
 1446 0088 07CA     		ldm	r2, {r0, r1, r2}
 1447 008a 03C3     		stmia	r3!, {r0, r1}
 1448 008c 1A70     		strb	r2, [r3]
 140:Core/Src/main.c ****   int frame_len;
 1449              		.loc 1 140 3 is_stmt 1 view .LVU332
 141:Core/Src/main.c **** 
 1450              		.loc 1 141 3 view .LVU333
 143:Core/Src/main.c ****   for(int i=0; i<frame_len; i++)
 1451              		.loc 1 143 3 view .LVU334
 1452 008e 03AB     		add	r3, sp, #12
 1453 0090 0093     		str	r3, [sp]
 1454 0092 04AB     		add	r3, sp, #16
 1455 0094 0922     		movs	r2, #9
 1456 0096 44A9     		add	r1, sp, #272
 1457 0098 47A8     		add	r0, sp, #284
 1458 009a FFF7FEFF 		bl	yahdlc_frame_data
 1459              	.LVL93:
 144:Core/Src/main.c ****   {
 1460              		.loc 1 144 3 view .LVU335
 1461              	.LBB18:
 144:Core/Src/main.c ****   {
 1462              		.loc 1 144 7 view .LVU336
 144:Core/Src/main.c ****   {
 1463              		.loc 1 144 3 is_stmt 0 view .LVU337
 1464 009e 07E0     		b	.L91
 1465              	.LVL94:
 1466              	.L92:
 146:Core/Src/main.c ****     uart_sendchar(output_frame[i]);
 1467              		.loc 1 146 5 is_stmt 1 discriminator 3 view .LVU338
 146:Core/Src/main.c ****     uart_sendchar(output_frame[i]);
 1468              		.loc 1 146 32 is_stmt 0 discriminator 3 view .LVU339
 1469 00a0 04AD     		add	r5, sp, #16
 146:Core/Src/main.c ****     uart_sendchar(output_frame[i]);
 1470              		.loc 1 146 5 discriminator 3 view .LVU340
 1471 00a2 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 1472 00a4 FFF7FEFF 		bl	debug_sendchar
 1473              	.LVL95:
 147:Core/Src/main.c ****   }
 1474              		.loc 1 147 5 is_stmt 1 discriminator 3 view .LVU341
 1475 00a8 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 1476 00aa FFF7FEFF 		bl	uart_sendchar
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 56


 1477              	.LVL96:
 144:Core/Src/main.c ****   {
 1478              		.loc 1 144 29 discriminator 3 view .LVU342
 144:Core/Src/main.c ****   {
 1479              		.loc 1 144 30 is_stmt 0 discriminator 3 view .LVU343
 1480 00ae 0134     		adds	r4, r4, #1
 1481              	.LVL97:
 1482              	.L91:
 144:Core/Src/main.c ****   {
 1483              		.loc 1 144 16 is_stmt 1 discriminator 1 view .LVU344
 144:Core/Src/main.c ****   {
 1484              		.loc 1 144 17 is_stmt 0 discriminator 1 view .LVU345
 1485 00b0 039B     		ldr	r3, [sp, #12]
 144:Core/Src/main.c ****   {
 1486              		.loc 1 144 3 discriminator 1 view .LVU346
 1487 00b2 A342     		cmp	r3, r4
 1488 00b4 F4DC     		bgt	.L92
 1489 00b6 01E0     		b	.L96
 1490              	.LVL98:
 1491              	.L93:
 144:Core/Src/main.c ****   {
 1492              		.loc 1 144 3 discriminator 1 view .LVU347
 1493              	.LBE18:
 168:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 1494              		.loc 1 168 5 is_stmt 1 view .LVU348
 1495 00b8 FFF7FEFF 		bl	ProcessDataFromUART
 1496              	.LVL99:
 155:Core/Src/main.c ****   {
 1497              		.loc 1 155 9 view .LVU349
 1498              	.L96:
 155:Core/Src/main.c ****   {
 1499              		.loc 1 155 3 view .LVU350
 158:Core/Src/main.c ****     {
 1500              		.loc 1 158 5 view .LVU351
 158:Core/Src/main.c ****     {
 1501              		.loc 1 158 19 is_stmt 0 view .LVU352
 1502 00bc 154B     		ldr	r3, .L98+44
 1503 00be 1B88     		ldrh	r3, [r3]
 158:Core/Src/main.c ****     {
 1504              		.loc 1 158 7 view .LVU353
 1505 00c0 002B     		cmp	r3, #0
 1506 00c2 F9D1     		bne	.L93
 160:Core/Src/main.c ****       delaytimer = 1000;
 1507              		.loc 1 160 7 is_stmt 1 view .LVU354
 1508 00c4 4021     		movs	r1, #64
 1509 00c6 1448     		ldr	r0, .L98+48
 1510 00c8 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1511              	.LVL100:
 161:Core/Src/main.c ****       for(int i=0; i<frame_len; i++)
 1512              		.loc 1 161 7 view .LVU355
 161:Core/Src/main.c ****       for(int i=0; i<frame_len; i++)
 1513              		.loc 1 161 18 is_stmt 0 view .LVU356
 1514 00cc 114B     		ldr	r3, .L98+44
 1515 00ce 4FF47A72 		mov	r2, #1000
 1516 00d2 1A80     		strh	r2, [r3]	@ movhi
 162:Core/Src/main.c ****       {
 1517              		.loc 1 162 7 is_stmt 1 view .LVU357
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 57


 1518              	.LBB19:
 162:Core/Src/main.c ****       {
 1519              		.loc 1 162 11 view .LVU358
 1520              	.LVL101:
 162:Core/Src/main.c ****       {
 1521              		.loc 1 162 15 is_stmt 0 view .LVU359
 1522 00d4 0024     		movs	r4, #0
 1523              	.LVL102:
 1524              	.L94:
 162:Core/Src/main.c ****       {
 1525              		.loc 1 162 20 is_stmt 1 discriminator 1 view .LVU360
 162:Core/Src/main.c ****       {
 1526              		.loc 1 162 21 is_stmt 0 discriminator 1 view .LVU361
 1527 00d6 039B     		ldr	r3, [sp, #12]
 162:Core/Src/main.c ****       {
 1528              		.loc 1 162 7 discriminator 1 view .LVU362
 1529 00d8 A342     		cmp	r3, r4
 1530 00da EDDD     		ble	.L93
 164:Core/Src/main.c ****       }
 1531              		.loc 1 164 9 is_stmt 1 discriminator 3 view .LVU363
 1532 00dc 04AB     		add	r3, sp, #16
 1533 00de 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 1534 00e0 FFF7FEFF 		bl	uart_sendchar
 1535              	.LVL103:
 162:Core/Src/main.c ****       {
 1536              		.loc 1 162 33 discriminator 3 view .LVU364
 162:Core/Src/main.c ****       {
 1537              		.loc 1 162 34 is_stmt 0 discriminator 3 view .LVU365
 1538 00e4 0134     		adds	r4, r4, #1
 1539              	.LVL104:
 162:Core/Src/main.c ****       {
 1540              		.loc 1 162 34 discriminator 3 view .LVU366
 1541 00e6 F6E7     		b	.L94
 1542              	.L99:
 1543              		.align	2
 1544              	.L98:
 1545 00e8 00000000 		.word	.LC6
 1546 00ec 00000000 		.word	.LANCHOR3
 1547 00f0 00000000 		.word	.LANCHOR0
 1548 00f4 14000000 		.word	.LC7
 1549 00f8 24000000 		.word	.LC8
 1550 00fc 00000000 		.word	test_add
 1551 0100 00000000 		.word	frame_received
 1552 0104 00000000 		.word	send_char
 1553 0108 30000000 		.word	.LC9
 1554 010c 00000000 		.word	.LANCHOR7
 1555 0110 3C000000 		.word	.LC10
 1556 0114 00000000 		.word	.LANCHOR8
 1557 0118 00000240 		.word	1073872896
 1558              	.LBE19:
 1559              		.cfi_endproc
 1560              	.LFE137:
 1562              		.global	state
 1563              		.global	t
 1564              		.global	buf_rx
 1565              		.global	data_rx
 1566              		.global	newReceive
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 58


 1567              		.global	delaytimer
 1568              		.global	timeoutReceive
 1569              		.global	huart2
 1570              		.global	huart1
 1571              		.section	.bss.buf_rx,"aw",%nobits
 1572              		.align	2
 1573              		.set	.LANCHOR4,. + 0
 1576              	buf_rx:
 1577 0000 00000000 		.space	256
 1577      00000000 
 1577      00000000 
 1577      00000000 
 1577      00000000 
 1578              		.section	.bss.data_rx,"aw",%nobits
 1579              		.align	2
 1580              		.set	.LANCHOR3,. + 0
 1583              	data_rx:
 1584 0000 0000     		.space	2
 1585              		.section	.bss.huart1,"aw",%nobits
 1586              		.align	2
 1587              		.set	.LANCHOR0,. + 0
 1590              	huart1:
 1591 0000 00000000 		.space	72
 1591      00000000 
 1591      00000000 
 1591      00000000 
 1591      00000000 
 1592              		.section	.bss.huart2,"aw",%nobits
 1593              		.align	2
 1594              		.set	.LANCHOR1,. + 0
 1597              	huart2:
 1598 0000 00000000 		.space	72
 1598      00000000 
 1598      00000000 
 1598      00000000 
 1598      00000000 
 1599              		.section	.bss.newReceive,"aw",%nobits
 1600              		.set	.LANCHOR6,. + 0
 1603              	newReceive:
 1604 0000 00       		.space	1
 1605              		.section	.bss.state,"aw",%nobits
 1606              		.align	2
 1607              		.set	.LANCHOR7,. + 0
 1610              	state:
 1611 0000 00000000 		.space	20
 1611      00000000 
 1611      00000000 
 1611      00000000 
 1611      00000000 
 1612              		.section	.bss.t,"aw",%nobits
 1613              		.align	1
 1614              		.set	.LANCHOR5,. + 0
 1617              	t:
 1618 0000 0000     		.space	2
 1619              		.section	.data.delaytimer,"aw"
 1620              		.align	1
 1621              		.set	.LANCHOR8,. + 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 59


 1624              	delaytimer:
 1625 0000 E803     		.short	1000
 1626              		.section	.data.timeoutReceive,"aw"
 1627              		.align	1
 1628              		.set	.LANCHOR2,. + 0
 1631              	timeoutReceive:
 1632 0000 4600     		.short	70
 1633              		.text
 1634              	.Letext0:
 1635              		.file 3 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\includ
 1636              		.file 4 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\includ
 1637              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1638              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1639              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1640              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1641              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1642              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1643              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1644              		.file 12 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\lib\\gcc\\arm-none-e
 1645              		.file 13 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\inclu
 1646              		.file 14 "Core/test/unity_internals.h"
 1647              		.file 15 "Core/test/yahdlc.h"
 1648              		.file 16 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\inclu
 1649              		.file 17 "Core/test/minihdlc.h"
 1650              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1651              		.file 19 "<built-in>"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 60


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:25     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:117    .text.MX_GPIO_Init:00000060 $d
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:123    .text.uart_printf:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:130    .text.uart_printf:00000000 uart_printf
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:219    .text.uart_printf:00000040 $d
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:224    .text.uart_sendchar:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:231    .text.uart_sendchar:00000000 uart_sendchar
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:267    .text.uart_sendchar:0000001c $d
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:272    .text.send_char:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:279    .text.send_char:00000000 send_char
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:301    .text.debug_printf:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:308    .text.debug_printf:00000000 debug_printf
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:397    .text.debug_printf:00000040 $d
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:402    .text.debug_sendchar:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:409    .text.debug_sendchar:00000000 debug_sendchar
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:445    .text.debug_sendchar:0000001c $d
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:450    .rodata.frame_received.str1.4:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:454    .text.frame_received:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:461    .text.frame_received:00000000 frame_received
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:517    .text.frame_received:00000020 $d
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:522    .text.add:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:529    .text.add:00000000 add
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:547    .text.test_add:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:554    .text.test_add:00000000 test_add
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:643    .text.setUp:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:650    .text.setUp:00000000 setUp
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:663    .text.tearDown:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:670    .text.tearDown:00000000 tearDown
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:683    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:690    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:743    .text.HAL_UART_RxCpltCallback:00000034 $d
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:752    .rodata.ProcessDataFromUART.str1.4:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:768    .text.ProcessDataFromUART:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:775    .text.ProcessDataFromUART:00000000 ProcessDataFromUART
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:963    .text.ProcessDataFromUART:000000b0 $d
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:977    .text.Error_Handler:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:984    .text.Error_Handler:00000000 Error_Handler
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1016   .text.MX_USART1_UART_Init:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1022   .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1077   .text.MX_USART1_UART_Init:0000002c $d
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1083   .text.MX_USART2_UART_Init:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1089   .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1144   .text.MX_USART2_UART_Init:0000002c $d
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1150   .text.SystemClock_Config:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1157   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1302   .text.SystemClock_Config:00000098 $d
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1308   .rodata.main.str1.4:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1324   .text.main:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1331   .text.main:00000000 main
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1545   .text.main:000000e8 $d
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1610   .bss.state:00000000 state
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1617   .bss.t:00000000 t
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1576   .bss.buf_rx:00000000 buf_rx
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1583   .bss.data_rx:00000000 data_rx
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s 			page 61


C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1603   .bss.newReceive:00000000 newReceive
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1624   .data.delaytimer:00000000 delaytimer
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1631   .data.timeoutReceive:00000000 timeoutReceive
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1597   .bss.huart2:00000000 huart2
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1590   .bss.huart1:00000000 huart1
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1572   .bss.buf_rx:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1579   .bss.data_rx:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1586   .bss.huart1:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1593   .bss.huart2:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1604   .bss.newReceive:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1606   .bss.state:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1613   .bss.t:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1620   .data.delaytimer:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccSVRcUX.s:1627   .data.timeoutReceive:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
vsprintf
HAL_UART_Transmit
UnityAssertEqualNumber
HAL_UART_Receive_IT
memset
yahdlc_get_data
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
UnityBegin
UnityDefaultTestRun
UnityEnd
minihdlc_init
snprintf
strlen
minihdlc_send_frame
yahdlc_set_state
yahdlc_frame_data
HAL_GPIO_TogglePin
