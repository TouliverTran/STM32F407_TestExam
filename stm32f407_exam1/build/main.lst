ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB142:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "string.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include <stdio.h>
  26:Core/Src/main.c **** #include <stdarg.h>
  27:Core/Src/main.c **** #include <string.h>
  28:Core/Src/main.c **** #include <assert.h>
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** #include "unity.h"
  31:Core/Src/main.c **** #include "yahdlc.h"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 2


  32:Core/Src/main.c **** #include "function.h"
  33:Core/Src/main.c **** #include "function_test.h"
  34:Core/Src/main.c **** #include "stub_eth_transceive.h"
  35:Core/Src/main.c **** /* USER CODE END Includes */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PTD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PD */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PD */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  48:Core/Src/main.c **** /* USER CODE BEGIN PM */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PM */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** ETH_TxPacketConfig TxConfig;
  55:Core/Src/main.c **** ETH_DMADescTypeDef  DMARxDscrTab[ETH_RX_DESC_CNT]; /* Ethernet Rx DMA Descriptors */
  56:Core/Src/main.c **** ETH_DMADescTypeDef  DMATxDscrTab[ETH_TX_DESC_CNT]; /* Ethernet Tx DMA Descriptors */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** ETH_HandleTypeDef heth;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** UART_HandleTypeDef huart1;
  61:Core/Src/main.c **** UART_HandleTypeDef huart2;
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE BEGIN PV */
  64:Core/Src/main.c **** extern uint16_t timeoutReceive = 70;
  65:Core/Src/main.c **** extern uint16_t delaytimer = 1000;
  66:Core/Src/main.c **** extern uint8_t newReceive = 0;
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** yahdlc_control_t control ={0};
  69:Core/Src/main.c **** uint8_t yahdlc_send_frame[BUF_SIZE] = {0};
  70:Core/Src/main.c **** /* USER CODE END PV */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  73:Core/Src/main.c **** void SystemClock_Config(void);
  74:Core/Src/main.c **** static void MX_GPIO_Init(void);
  75:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  76:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  77:Core/Src/main.c **** static void MX_ETH_Init(void);
  78:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  79:Core/Src/main.c **** int uart_printf(const char *fmt, ...);
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart);
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** extern int debug_printf(const char *fmt, ...);
  84:Core/Src/main.c **** void debug_sendchar(const char pdata);
  85:Core/Src/main.c **** void append_char_to_buffer(char *buffer, size_t buffer_size, char c);
  86:Core/Src/main.c **** void ProcessDataFromUART(void);
  87:Core/Src/main.c **** /* USER CODE END PFP */
  88:Core/Src/main.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 3


  89:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  90:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  91:Core/Src/main.c **** uint8_t data_rx[2];
  92:Core/Src/main.c **** uint8_t buf_rx[BUF_SIZE];
  93:Core/Src/main.c **** uint16_t t = 0;
  94:Core/Src/main.c **** yahdlc_state_t state;
  95:Core/Src/main.c **** /* USER CODE END 0 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** /**
  98:Core/Src/main.c ****   * @brief  The application entry point.
  99:Core/Src/main.c ****   * @retval int
 100:Core/Src/main.c ****   */
 101:Core/Src/main.c **** int main(void)
 102:Core/Src/main.c **** {
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE END 1 */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 111:Core/Src/main.c ****   HAL_Init();
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE END Init */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* Configure the system clock */
 118:Core/Src/main.c ****   SystemClock_Config();
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* USER CODE END SysInit */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* Initialize all configured peripherals */
 125:Core/Src/main.c ****   MX_GPIO_Init();
 126:Core/Src/main.c ****   MX_USART1_UART_Init();
 127:Core/Src/main.c ****   MX_USART2_UART_Init();
 128:Core/Src/main.c ****   MX_ETH_Init();
 129:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 130:Core/Src/main.c ****   // debug_printf("HELLO WORLD!!!\r\n");
 131:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1, data_rx, 1);
 132:Core/Src/main.c ****   memset(yahdlc_send_frame, 0, BUF_SIZE);
 133:Core/Src/main.c ****   tc_add();
 134:Core/Src/main.c ****   debug_printf("%s\n",yahdlc_send_frame);
 135:Core/Src/main.c ****   memset(yahdlc_send_frame, 0, BUF_SIZE);
 136:Core/Src/main.c ****   tc_subtract();
 137:Core/Src/main.c ****   debug_printf("%s\n",yahdlc_send_frame);
 138:Core/Src/main.c ****   memset(yahdlc_send_frame, 0, BUF_SIZE);
 139:Core/Src/main.c ****   tc_multiply();
 140:Core/Src/main.c ****   debug_printf("%s\n",yahdlc_send_frame);
 141:Core/Src/main.c ****   memset(yahdlc_send_frame, 0, BUF_SIZE);
 142:Core/Src/main.c ****   tc_divide();
 143:Core/Src/main.c ****   debug_printf("%s\n",yahdlc_send_frame);
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   yahdlc_set_state(&state);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 4


 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   control.frame = YAHDLC_FRAME_DATA;
 148:Core/Src/main.c ****   control.seq_no = 0;
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   uint8_t input_data[] = "1234567\r\n";
 151:Core/Src/main.c ****   int frame_len;
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   yahdlc_frame_data(&control, input_data, sizeof(input_data)-1, yahdlc_send_frame, &frame_len);
 154:Core/Src/main.c ****   for(int i=0; i<frame_len; i++)
 155:Core/Src/main.c ****   {
 156:Core/Src/main.c ****     // debug_sendchar(yahdlc_send_frame[i]);
 157:Core/Src/main.c ****     uart_sendchar(yahdlc_send_frame[i]);
 158:Core/Src/main.c ****   }
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   struct phy_device *phydev;
 162:Core/Src/main.c ****   vsc85xx_config_init(phydev);
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /* USER CODE END 2 */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /* Infinite loop */
 167:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 168:Core/Src/main.c ****   while (1)
 169:Core/Src/main.c ****   {
 170:Core/Src/main.c ****     /* USER CODE END WHILE */
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 173:Core/Src/main.c ****   }
 174:Core/Src/main.c ****   /* USER CODE END 3 */
 175:Core/Src/main.c **** }
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** /**
 178:Core/Src/main.c ****   * @brief System Clock Configuration
 179:Core/Src/main.c ****   * @retval None
 180:Core/Src/main.c ****   */
 181:Core/Src/main.c **** void SystemClock_Config(void)
 182:Core/Src/main.c **** {
 183:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 184:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 187:Core/Src/main.c ****   */
 188:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 189:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 192:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 193:Core/Src/main.c ****   */
 194:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 195:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 202:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 5


 203:Core/Src/main.c ****   {
 204:Core/Src/main.c ****     Error_Handler();
 205:Core/Src/main.c ****   }
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 208:Core/Src/main.c ****   */
 209:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 210:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 211:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 212:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 213:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 214:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 217:Core/Src/main.c ****   {
 218:Core/Src/main.c ****     Error_Handler();
 219:Core/Src/main.c ****   }
 220:Core/Src/main.c **** }
 221:Core/Src/main.c **** 
 222:Core/Src/main.c **** /**
 223:Core/Src/main.c ****   * @brief ETH Initialization Function
 224:Core/Src/main.c ****   * @param None
 225:Core/Src/main.c ****   * @retval None
 226:Core/Src/main.c ****   */
 227:Core/Src/main.c **** static void MX_ETH_Init(void)
 228:Core/Src/main.c **** {
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   /* USER CODE BEGIN ETH_Init 0 */
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****   /* USER CODE END ETH_Init 0 */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****    static uint8_t MACAddr[6];
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /* USER CODE BEGIN ETH_Init 1 */
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   /* USER CODE END ETH_Init 1 */
 239:Core/Src/main.c ****   heth.Instance = ETH;
 240:Core/Src/main.c ****   MACAddr[0] = 0x00;
 241:Core/Src/main.c ****   MACAddr[1] = 0x80;
 242:Core/Src/main.c ****   MACAddr[2] = 0xE1;
 243:Core/Src/main.c ****   MACAddr[3] = 0x00;
 244:Core/Src/main.c ****   MACAddr[4] = 0x00;
 245:Core/Src/main.c ****   MACAddr[5] = 0x00;
 246:Core/Src/main.c ****   heth.Init.MACAddr = &MACAddr[0];
 247:Core/Src/main.c ****   heth.Init.MediaInterface = HAL_ETH_RMII_MODE;
 248:Core/Src/main.c ****   heth.Init.TxDesc = DMATxDscrTab;
 249:Core/Src/main.c ****   heth.Init.RxDesc = DMARxDscrTab;
 250:Core/Src/main.c ****   heth.Init.RxBuffLen = 1524;
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /* USER CODE BEGIN MACADDRESS */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /* USER CODE END MACADDRESS */
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   if (HAL_ETH_Init(&heth) != HAL_OK)
 257:Core/Src/main.c ****   {
 258:Core/Src/main.c ****     Error_Handler();
 259:Core/Src/main.c ****   }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 6


 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   memset(&TxConfig, 0 , sizeof(ETH_TxPacketConfig));
 262:Core/Src/main.c ****   TxConfig.Attributes = ETH_TX_PACKETS_FEATURES_CSUM | ETH_TX_PACKETS_FEATURES_CRCPAD;
 263:Core/Src/main.c ****   TxConfig.ChecksumCtrl = ETH_CHECKSUM_IPHDR_PAYLOAD_INSERT_PHDR_CALC;
 264:Core/Src/main.c ****   TxConfig.CRCPadCtrl = ETH_CRC_PAD_INSERT;
 265:Core/Src/main.c ****   /* USER CODE BEGIN ETH_Init 2 */
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /* USER CODE END ETH_Init 2 */
 268:Core/Src/main.c **** 
 269:Core/Src/main.c **** }
 270:Core/Src/main.c **** 
 271:Core/Src/main.c **** /**
 272:Core/Src/main.c ****   * @brief USART1 Initialization Function
 273:Core/Src/main.c ****   * @param None
 274:Core/Src/main.c ****   * @retval None
 275:Core/Src/main.c ****   */
 276:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 277:Core/Src/main.c **** {
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 286:Core/Src/main.c ****   huart1.Instance = USART1;
 287:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 288:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 289:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 290:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 291:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 292:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 293:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 294:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 295:Core/Src/main.c ****   {
 296:Core/Src/main.c ****     Error_Handler();
 297:Core/Src/main.c ****   }
 298:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 301:Core/Src/main.c **** 
 302:Core/Src/main.c **** }
 303:Core/Src/main.c **** 
 304:Core/Src/main.c **** /**
 305:Core/Src/main.c ****   * @brief USART2 Initialization Function
 306:Core/Src/main.c ****   * @param None
 307:Core/Src/main.c ****   * @retval None
 308:Core/Src/main.c ****   */
 309:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 310:Core/Src/main.c **** {
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 7


 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 319:Core/Src/main.c ****   huart2.Instance = USART2;
 320:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 321:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 322:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 323:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 324:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 325:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 326:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 327:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 328:Core/Src/main.c ****   {
 329:Core/Src/main.c ****     Error_Handler();
 330:Core/Src/main.c ****   }
 331:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 334:Core/Src/main.c **** 
 335:Core/Src/main.c **** }
 336:Core/Src/main.c **** 
 337:Core/Src/main.c **** /**
 338:Core/Src/main.c ****   * @brief GPIO Initialization Function
 339:Core/Src/main.c ****   * @param None
 340:Core/Src/main.c ****   * @retval None
 341:Core/Src/main.c ****   */
 342:Core/Src/main.c **** static void MX_GPIO_Init(void)
 343:Core/Src/main.c **** {
  28              		.loc 1 343 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 8BB0     		sub	sp, sp, #44
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 56
 344:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 344 3 view .LVU1
  42              		.loc 1 344 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0594     		str	r4, [sp, #20]
  45 0008 0694     		str	r4, [sp, #24]
  46 000a 0794     		str	r4, [sp, #28]
  47 000c 0894     		str	r4, [sp, #32]
  48 000e 0994     		str	r4, [sp, #36]
 345:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 346:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 347:Core/Src/main.c **** 
 348:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 349:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  49              		.loc 1 349 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 349 3 view .LVU4
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 8


  52 0010 0094     		str	r4, [sp]
  53              		.loc 1 349 3 view .LVU5
  54 0012 224B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F08002 		orr	r2, r2, #128
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 349 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F08002 		and	r2, r2, #128
  61 0022 0092     		str	r2, [sp]
  62              		.loc 1 349 3 view .LVU7
  63 0024 009A     		ldr	r2, [sp]
  64              	.LBE4:
  65              		.loc 1 349 3 view .LVU8
 350:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  66              		.loc 1 350 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 350 3 view .LVU10
  69 0026 0194     		str	r4, [sp, #4]
  70              		.loc 1 350 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F00402 		orr	r2, r2, #4
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 350 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F00402 		and	r2, r2, #4
  77 0036 0192     		str	r2, [sp, #4]
  78              		.loc 1 350 3 view .LVU13
  79 0038 019A     		ldr	r2, [sp, #4]
  80              	.LBE5:
  81              		.loc 1 350 3 view .LVU14
 351:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  82              		.loc 1 351 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 351 3 view .LVU16
  85 003a 0294     		str	r4, [sp, #8]
  86              		.loc 1 351 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
  88 003e 42F00102 		orr	r2, r2, #1
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 351 3 view .LVU18
  91 0044 1A6B     		ldr	r2, [r3, #48]
  92 0046 02F00102 		and	r2, r2, #1
  93 004a 0292     		str	r2, [sp, #8]
  94              		.loc 1 351 3 view .LVU19
  95 004c 029A     		ldr	r2, [sp, #8]
  96              	.LBE6:
  97              		.loc 1 351 3 view .LVU20
 352:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  98              		.loc 1 352 3 view .LVU21
  99              	.LBB7:
 100              		.loc 1 352 3 view .LVU22
 101 004e 0394     		str	r4, [sp, #12]
 102              		.loc 1 352 3 view .LVU23
 103 0050 1A6B     		ldr	r2, [r3, #48]
 104 0052 42F00202 		orr	r2, r2, #2
 105 0056 1A63     		str	r2, [r3, #48]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 9


 106              		.loc 1 352 3 view .LVU24
 107 0058 1A6B     		ldr	r2, [r3, #48]
 108 005a 02F00202 		and	r2, r2, #2
 109 005e 0392     		str	r2, [sp, #12]
 110              		.loc 1 352 3 view .LVU25
 111 0060 039A     		ldr	r2, [sp, #12]
 112              	.LBE7:
 113              		.loc 1 352 3 view .LVU26
 353:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 114              		.loc 1 353 3 view .LVU27
 115              	.LBB8:
 116              		.loc 1 353 3 view .LVU28
 117 0062 0494     		str	r4, [sp, #16]
 118              		.loc 1 353 3 view .LVU29
 119 0064 1A6B     		ldr	r2, [r3, #48]
 120 0066 42F00802 		orr	r2, r2, #8
 121 006a 1A63     		str	r2, [r3, #48]
 122              		.loc 1 353 3 view .LVU30
 123 006c 1B6B     		ldr	r3, [r3, #48]
 124 006e 03F00803 		and	r3, r3, #8
 125 0072 0493     		str	r3, [sp, #16]
 126              		.loc 1 353 3 view .LVU31
 127 0074 049B     		ldr	r3, [sp, #16]
 128              	.LBE8:
 129              		.loc 1 353 3 view .LVU32
 354:Core/Src/main.c **** 
 355:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 356:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, GPIO_PIN_RESET);
 130              		.loc 1 356 3 view .LVU33
 131 0076 0A4D     		ldr	r5, .L3+4
 132 0078 2246     		mov	r2, r4
 133 007a 4021     		movs	r1, #64
 134 007c 2846     		mov	r0, r5
 135 007e FFF7FEFF 		bl	HAL_GPIO_WritePin
 136              	.LVL0:
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   /*Configure GPIO pin : PA6 */
 359:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_6;
 137              		.loc 1 359 3 view .LVU34
 138              		.loc 1 359 23 is_stmt 0 view .LVU35
 139 0082 4023     		movs	r3, #64
 140 0084 0593     		str	r3, [sp, #20]
 360:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 141              		.loc 1 360 3 is_stmt 1 view .LVU36
 142              		.loc 1 360 24 is_stmt 0 view .LVU37
 143 0086 0123     		movs	r3, #1
 144 0088 0693     		str	r3, [sp, #24]
 361:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 145              		.loc 1 361 3 is_stmt 1 view .LVU38
 146              		.loc 1 361 24 is_stmt 0 view .LVU39
 147 008a 0794     		str	r4, [sp, #28]
 362:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 148              		.loc 1 362 3 is_stmt 1 view .LVU40
 149              		.loc 1 362 25 is_stmt 0 view .LVU41
 150 008c 0894     		str	r4, [sp, #32]
 363:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 151              		.loc 1 363 3 is_stmt 1 view .LVU42
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 10


 152 008e 05A9     		add	r1, sp, #20
 153 0090 2846     		mov	r0, r5
 154 0092 FFF7FEFF 		bl	HAL_GPIO_Init
 155              	.LVL1:
 364:Core/Src/main.c **** 
 365:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 366:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 367:Core/Src/main.c **** }
 156              		.loc 1 367 1 is_stmt 0 view .LVU43
 157 0096 0BB0     		add	sp, sp, #44
 158              	.LCFI2:
 159              		.cfi_def_cfa_offset 12
 160              		@ sp needed
 161 0098 30BD     		pop	{r4, r5, pc}
 162              	.L4:
 163 009a 00BF     		.align	2
 164              	.L3:
 165 009c 00380240 		.word	1073887232
 166 00a0 00000240 		.word	1073872896
 167              		.cfi_endproc
 168              	.LFE142:
 170              		.section	.text.uart_printf,"ax",%progbits
 171              		.align	1
 172              		.global	uart_printf
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 176              		.fpu fpv4-sp-d16
 178              	uart_printf:
 179              	.LVL2:
 180              	.LFB143:
 368:Core/Src/main.c **** 
 369:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 370:Core/Src/main.c **** int uart_printf(const char *fmt, ...)
 371:Core/Src/main.c **** {
 181              		.loc 1 371 1 is_stmt 1 view -0
 182              		.cfi_startproc
 183              		@ args = 4, pretend = 16, frame = 1032
 184              		@ frame_needed = 0, uses_anonymous_args = 1
 185              		.loc 1 371 1 is_stmt 0 view .LVU45
 186 0000 0FB4     		push	{r0, r1, r2, r3}
 187              	.LCFI3:
 188              		.cfi_def_cfa_offset 16
 189              		.cfi_offset 0, -16
 190              		.cfi_offset 1, -12
 191              		.cfi_offset 2, -8
 192              		.cfi_offset 3, -4
 193 0002 30B5     		push	{r4, r5, lr}
 194              	.LCFI4:
 195              		.cfi_def_cfa_offset 28
 196              		.cfi_offset 4, -28
 197              		.cfi_offset 5, -24
 198              		.cfi_offset 14, -20
 199 0004 ADF20C4D 		subw	sp, sp, #1036
 200              	.LCFI5:
 201              		.cfi_def_cfa_offset 1064
 202 0008 0DF58362 		add	r2, sp, #1048
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 11


 203 000c 52F8041B 		ldr	r1, [r2], #4
 372:Core/Src/main.c ****   char buf[1024];
 204              		.loc 1 372 3 is_stmt 1 view .LVU46
 373:Core/Src/main.c ****   int len, i;
 205              		.loc 1 373 3 view .LVU47
 374:Core/Src/main.c ****   va_list args;
 206              		.loc 1 374 3 view .LVU48
 375:Core/Src/main.c ****   va_start (args, fmt);
 207              		.loc 1 375 3 view .LVU49
 208 0010 0192     		str	r2, [sp, #4]
 376:Core/Src/main.c **** 
 377:Core/Src/main.c ****   len = vsprintf(buf, fmt, args);
 209              		.loc 1 377 3 view .LVU50
 210              		.loc 1 377 9 is_stmt 0 view .LVU51
 211 0012 02A8     		add	r0, sp, #8
 212 0014 FFF7FEFF 		bl	vsprintf
 213              	.LVL3:
 214 0018 0546     		mov	r5, r0
 215              	.LVL4:
 378:Core/Src/main.c ****   for (i=0; i<len; i++)
 216              		.loc 1 378 3 is_stmt 1 view .LVU52
 217              		.loc 1 378 9 is_stmt 0 view .LVU53
 218 001a 0024     		movs	r4, #0
 219              		.loc 1 378 3 view .LVU54
 220 001c 07E0     		b	.L6
 221              	.LVL5:
 222              	.L7:
 379:Core/Src/main.c ****   {
 380:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, &buf[i], sizeof(char), 10);
 223              		.loc 1 380 5 is_stmt 1 discriminator 3 view .LVU55
 224 001e 0A23     		movs	r3, #10
 225 0020 0122     		movs	r2, #1
 226 0022 02A9     		add	r1, sp, #8
 227 0024 2144     		add	r1, r1, r4
 228 0026 0648     		ldr	r0, .L9
 229 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 230              	.LVL6:
 378:Core/Src/main.c ****   for (i=0; i<len; i++)
 231              		.loc 1 378 20 discriminator 3 view .LVU56
 378:Core/Src/main.c ****   for (i=0; i<len; i++)
 232              		.loc 1 378 21 is_stmt 0 discriminator 3 view .LVU57
 233 002c 0134     		adds	r4, r4, #1
 234              	.LVL7:
 235              	.L6:
 378:Core/Src/main.c ****   for (i=0; i<len; i++)
 236              		.loc 1 378 13 is_stmt 1 discriminator 1 view .LVU58
 378:Core/Src/main.c ****   for (i=0; i<len; i++)
 237              		.loc 1 378 3 is_stmt 0 discriminator 1 view .LVU59
 238 002e AC42     		cmp	r4, r5
 239 0030 F5DB     		blt	.L7
 381:Core/Src/main.c ****   }
 382:Core/Src/main.c ****   va_end(args);
 240              		.loc 1 382 3 is_stmt 1 view .LVU60
 383:Core/Src/main.c ****   return len;
 241              		.loc 1 383 3 view .LVU61
 384:Core/Src/main.c **** }
 242              		.loc 1 384 1 is_stmt 0 view .LVU62
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 12


 243 0032 2846     		mov	r0, r5
 244 0034 0DF20C4D 		addw	sp, sp, #1036
 245              	.LCFI6:
 246              		.cfi_def_cfa_offset 28
 247              		@ sp needed
 248 0038 BDE83040 		pop	{r4, r5, lr}
 249              	.LCFI7:
 250              		.cfi_restore 14
 251              		.cfi_restore 5
 252              		.cfi_restore 4
 253              		.cfi_def_cfa_offset 16
 254              	.LVL8:
 255              		.loc 1 384 1 view .LVU63
 256 003c 04B0     		add	sp, sp, #16
 257              	.LCFI8:
 258              		.cfi_restore 3
 259              		.cfi_restore 2
 260              		.cfi_restore 1
 261              		.cfi_restore 0
 262              		.cfi_def_cfa_offset 0
 263 003e 7047     		bx	lr
 264              	.L10:
 265              		.align	2
 266              	.L9:
 267 0040 00000000 		.word	.LANCHOR0
 268              		.cfi_endproc
 269              	.LFE143:
 271              		.section	.text.uart_sendchar,"ax",%progbits
 272              		.align	1
 273              		.global	uart_sendchar
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 277              		.fpu fpv4-sp-d16
 279              	uart_sendchar:
 280              	.LVL9:
 281              	.LFB144:
 385:Core/Src/main.c **** 
 386:Core/Src/main.c **** void uart_sendchar(const char pdata)
 387:Core/Src/main.c **** {
 282              		.loc 1 387 1 is_stmt 1 view -0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 8
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		.loc 1 387 1 is_stmt 0 view .LVU65
 287 0000 00B5     		push	{lr}
 288              	.LCFI9:
 289              		.cfi_def_cfa_offset 4
 290              		.cfi_offset 14, -4
 291 0002 83B0     		sub	sp, sp, #12
 292              	.LCFI10:
 293              		.cfi_def_cfa_offset 16
 388:Core/Src/main.c ****   char temp = pdata;
 294              		.loc 1 388 3 is_stmt 1 view .LVU66
 295              		.loc 1 388 8 is_stmt 0 view .LVU67
 296 0004 8DF80700 		strb	r0, [sp, #7]
 389:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, &temp, sizeof(char), 10);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 13


 297              		.loc 1 389 3 is_stmt 1 view .LVU68
 298 0008 0A23     		movs	r3, #10
 299 000a 0122     		movs	r2, #1
 300 000c 0DF10701 		add	r1, sp, #7
 301 0010 0248     		ldr	r0, .L13
 302              	.LVL10:
 303              		.loc 1 389 3 is_stmt 0 view .LVU69
 304 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 305              	.LVL11:
 390:Core/Src/main.c ****   // if ('\n' == pdata)
 391:Core/Src/main.c ****   // {
 392:Core/Src/main.c ****   //   temp = '\r';
 393:Core/Src/main.c ****   //   HAL_UART_Transmit(&huart1, &temp, sizeof(char), 10);
 394:Core/Src/main.c ****   // }
 395:Core/Src/main.c **** }
 306              		.loc 1 395 1 view .LVU70
 307 0016 03B0     		add	sp, sp, #12
 308              	.LCFI11:
 309              		.cfi_def_cfa_offset 4
 310              		@ sp needed
 311 0018 5DF804FB 		ldr	pc, [sp], #4
 312              	.L14:
 313              		.align	2
 314              	.L13:
 315 001c 00000000 		.word	.LANCHOR0
 316              		.cfi_endproc
 317              	.LFE144:
 319              		.section	.text.debug_printf,"ax",%progbits
 320              		.align	1
 321              		.global	debug_printf
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 325              		.fpu fpv4-sp-d16
 327              	debug_printf:
 328              	.LVL12:
 329              	.LFB145:
 396:Core/Src/main.c **** 
 397:Core/Src/main.c **** int debug_printf(const char *fmt, ...)
 398:Core/Src/main.c **** {
 330              		.loc 1 398 1 is_stmt 1 view -0
 331              		.cfi_startproc
 332              		@ args = 4, pretend = 16, frame = 1032
 333              		@ frame_needed = 0, uses_anonymous_args = 1
 334              		.loc 1 398 1 is_stmt 0 view .LVU72
 335 0000 0FB4     		push	{r0, r1, r2, r3}
 336              	.LCFI12:
 337              		.cfi_def_cfa_offset 16
 338              		.cfi_offset 0, -16
 339              		.cfi_offset 1, -12
 340              		.cfi_offset 2, -8
 341              		.cfi_offset 3, -4
 342 0002 30B5     		push	{r4, r5, lr}
 343              	.LCFI13:
 344              		.cfi_def_cfa_offset 28
 345              		.cfi_offset 4, -28
 346              		.cfi_offset 5, -24
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 14


 347              		.cfi_offset 14, -20
 348 0004 ADF20C4D 		subw	sp, sp, #1036
 349              	.LCFI14:
 350              		.cfi_def_cfa_offset 1064
 351 0008 0DF58362 		add	r2, sp, #1048
 352 000c 52F8041B 		ldr	r1, [r2], #4
 399:Core/Src/main.c ****   char buf[1024];
 353              		.loc 1 399 3 is_stmt 1 view .LVU73
 400:Core/Src/main.c ****   int len, i;
 354              		.loc 1 400 3 view .LVU74
 401:Core/Src/main.c ****   va_list args;
 355              		.loc 1 401 3 view .LVU75
 402:Core/Src/main.c ****   va_start (args, fmt);
 356              		.loc 1 402 3 view .LVU76
 357 0010 0192     		str	r2, [sp, #4]
 403:Core/Src/main.c **** 
 404:Core/Src/main.c ****   len = vsprintf(buf, fmt, args);
 358              		.loc 1 404 3 view .LVU77
 359              		.loc 1 404 9 is_stmt 0 view .LVU78
 360 0012 02A8     		add	r0, sp, #8
 361 0014 FFF7FEFF 		bl	vsprintf
 362              	.LVL13:
 363 0018 0546     		mov	r5, r0
 364              	.LVL14:
 405:Core/Src/main.c ****   for (i=0; i<len; i++)
 365              		.loc 1 405 3 is_stmt 1 view .LVU79
 366              		.loc 1 405 9 is_stmt 0 view .LVU80
 367 001a 0024     		movs	r4, #0
 368              		.loc 1 405 3 view .LVU81
 369 001c 07E0     		b	.L16
 370              	.LVL15:
 371              	.L17:
 406:Core/Src/main.c ****   {
 407:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, &buf[i], sizeof(char), 10);
 372              		.loc 1 407 5 is_stmt 1 discriminator 3 view .LVU82
 373 001e 0A23     		movs	r3, #10
 374 0020 0122     		movs	r2, #1
 375 0022 02A9     		add	r1, sp, #8
 376 0024 2144     		add	r1, r1, r4
 377 0026 0648     		ldr	r0, .L19
 378 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 379              	.LVL16:
 405:Core/Src/main.c ****   for (i=0; i<len; i++)
 380              		.loc 1 405 20 discriminator 3 view .LVU83
 405:Core/Src/main.c ****   for (i=0; i<len; i++)
 381              		.loc 1 405 21 is_stmt 0 discriminator 3 view .LVU84
 382 002c 0134     		adds	r4, r4, #1
 383              	.LVL17:
 384              	.L16:
 405:Core/Src/main.c ****   for (i=0; i<len; i++)
 385              		.loc 1 405 13 is_stmt 1 discriminator 1 view .LVU85
 405:Core/Src/main.c ****   for (i=0; i<len; i++)
 386              		.loc 1 405 3 is_stmt 0 discriminator 1 view .LVU86
 387 002e AC42     		cmp	r4, r5
 388 0030 F5DB     		blt	.L17
 408:Core/Src/main.c ****   }
 409:Core/Src/main.c ****   va_end(args);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 15


 389              		.loc 1 409 3 is_stmt 1 view .LVU87
 410:Core/Src/main.c ****   return len;
 390              		.loc 1 410 3 view .LVU88
 411:Core/Src/main.c **** }
 391              		.loc 1 411 1 is_stmt 0 view .LVU89
 392 0032 2846     		mov	r0, r5
 393 0034 0DF20C4D 		addw	sp, sp, #1036
 394              	.LCFI15:
 395              		.cfi_def_cfa_offset 28
 396              		@ sp needed
 397 0038 BDE83040 		pop	{r4, r5, lr}
 398              	.LCFI16:
 399              		.cfi_restore 14
 400              		.cfi_restore 5
 401              		.cfi_restore 4
 402              		.cfi_def_cfa_offset 16
 403              	.LVL18:
 404              		.loc 1 411 1 view .LVU90
 405 003c 04B0     		add	sp, sp, #16
 406              	.LCFI17:
 407              		.cfi_restore 3
 408              		.cfi_restore 2
 409              		.cfi_restore 1
 410              		.cfi_restore 0
 411              		.cfi_def_cfa_offset 0
 412 003e 7047     		bx	lr
 413              	.L20:
 414              		.align	2
 415              	.L19:
 416 0040 00000000 		.word	.LANCHOR1
 417              		.cfi_endproc
 418              	.LFE145:
 420              		.section	.text.debug_sendchar,"ax",%progbits
 421              		.align	1
 422              		.global	debug_sendchar
 423              		.syntax unified
 424              		.thumb
 425              		.thumb_func
 426              		.fpu fpv4-sp-d16
 428              	debug_sendchar:
 429              	.LVL19:
 430              	.LFB146:
 412:Core/Src/main.c **** 
 413:Core/Src/main.c **** void debug_sendchar(const char pdata)
 414:Core/Src/main.c **** {
 431              		.loc 1 414 1 is_stmt 1 view -0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 8
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435              		.loc 1 414 1 is_stmt 0 view .LVU92
 436 0000 00B5     		push	{lr}
 437              	.LCFI18:
 438              		.cfi_def_cfa_offset 4
 439              		.cfi_offset 14, -4
 440 0002 83B0     		sub	sp, sp, #12
 441              	.LCFI19:
 442              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 16


 415:Core/Src/main.c ****   char temp = pdata;
 443              		.loc 1 415 3 is_stmt 1 view .LVU93
 444              		.loc 1 415 8 is_stmt 0 view .LVU94
 445 0004 8DF80700 		strb	r0, [sp, #7]
 416:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, &temp, sizeof(char), 10);
 446              		.loc 1 416 3 is_stmt 1 view .LVU95
 447 0008 0A23     		movs	r3, #10
 448 000a 0122     		movs	r2, #1
 449 000c 0DF10701 		add	r1, sp, #7
 450 0010 0248     		ldr	r0, .L23
 451              	.LVL20:
 452              		.loc 1 416 3 is_stmt 0 view .LVU96
 453 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 454              	.LVL21:
 417:Core/Src/main.c ****   // if ('\n' == pdata)
 418:Core/Src/main.c ****   // {
 419:Core/Src/main.c ****   //   temp = '\r';
 420:Core/Src/main.c ****   //   HAL_UART_Transmit(&huart1, &temp, sizeof(char), 10);
 421:Core/Src/main.c ****   // }
 422:Core/Src/main.c **** }
 455              		.loc 1 422 1 view .LVU97
 456 0016 03B0     		add	sp, sp, #12
 457              	.LCFI20:
 458              		.cfi_def_cfa_offset 4
 459              		@ sp needed
 460 0018 5DF804FB 		ldr	pc, [sp], #4
 461              	.L24:
 462              		.align	2
 463              	.L23:
 464 001c 00000000 		.word	.LANCHOR1
 465              		.cfi_endproc
 466              	.LFE146:
 468              		.section	.text.append_char_to_buffer,"ax",%progbits
 469              		.align	1
 470              		.global	append_char_to_buffer
 471              		.syntax unified
 472              		.thumb
 473              		.thumb_func
 474              		.fpu fpv4-sp-d16
 476              	append_char_to_buffer:
 477              	.LVL22:
 478              	.LFB147:
 423:Core/Src/main.c **** 
 424:Core/Src/main.c **** void append_char_to_buffer(char *buffer, size_t buffer_size, char c) {
 479              		.loc 1 424 70 is_stmt 1 view -0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483              		.loc 1 424 70 is_stmt 0 view .LVU99
 484 0000 70B5     		push	{r4, r5, r6, lr}
 485              	.LCFI21:
 486              		.cfi_def_cfa_offset 16
 487              		.cfi_offset 4, -16
 488              		.cfi_offset 5, -12
 489              		.cfi_offset 6, -8
 490              		.cfi_offset 14, -4
 491 0002 0446     		mov	r4, r0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 17


 492 0004 0D46     		mov	r5, r1
 493 0006 1646     		mov	r6, r2
 425:Core/Src/main.c ****     size_t len = strlen(buffer);
 494              		.loc 1 425 5 is_stmt 1 view .LVU100
 495              		.loc 1 425 18 is_stmt 0 view .LVU101
 496 0008 FFF7FEFF 		bl	strlen
 497              	.LVL23:
 426:Core/Src/main.c ****     if (len + 1 < buffer_size) {
 498              		.loc 1 426 5 is_stmt 1 view .LVU102
 499              		.loc 1 426 13 is_stmt 0 view .LVU103
 500 000c 431C     		adds	r3, r0, #1
 501              		.loc 1 426 8 view .LVU104
 502 000e AB42     		cmp	r3, r5
 503 0010 02D2     		bcs	.L25
 427:Core/Src/main.c ****         buffer[len] = c;
 504              		.loc 1 427 9 is_stmt 1 view .LVU105
 505              		.loc 1 427 21 is_stmt 0 view .LVU106
 506 0012 2654     		strb	r6, [r4, r0]
 428:Core/Src/main.c ****         buffer[len + 1] = '\0';
 507              		.loc 1 428 9 is_stmt 1 view .LVU107
 508              		.loc 1 428 25 is_stmt 0 view .LVU108
 509 0014 0022     		movs	r2, #0
 510 0016 E254     		strb	r2, [r4, r3]
 511              	.L25:
 429:Core/Src/main.c ****     } else {
 430:Core/Src/main.c ****         return;
 431:Core/Src/main.c ****     }
 432:Core/Src/main.c **** }
 512              		.loc 1 432 1 view .LVU109
 513 0018 70BD     		pop	{r4, r5, r6, pc}
 514              		.loc 1 432 1 view .LVU110
 515              		.cfi_endproc
 516              	.LFE147:
 518              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 519              		.align	1
 520              		.global	HAL_UART_RxCpltCallback
 521              		.syntax unified
 522              		.thumb
 523              		.thumb_func
 524              		.fpu fpv4-sp-d16
 526              	HAL_UART_RxCpltCallback:
 527              	.LVL24:
 528              	.LFB148:
 433:Core/Src/main.c **** 
 434:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 435:Core/Src/main.c **** {
 529              		.loc 1 435 1 is_stmt 1 view -0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533              		.loc 1 435 1 is_stmt 0 view .LVU112
 534 0000 08B5     		push	{r3, lr}
 535              	.LCFI22:
 536              		.cfi_def_cfa_offset 8
 537              		.cfi_offset 3, -8
 538              		.cfi_offset 14, -4
 436:Core/Src/main.c ****   timeoutReceive = 70;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 18


 539              		.loc 1 436 3 is_stmt 1 view .LVU113
 540              		.loc 1 436 18 is_stmt 0 view .LVU114
 541 0002 0C4B     		ldr	r3, .L31
 542 0004 4622     		movs	r2, #70
 543 0006 1A80     		strh	r2, [r3]	@ movhi
 437:Core/Src/main.c ****   // debug_sendchar(data_rx[0]);
 438:Core/Src/main.c ****   memcpy(buf_rx+t, data_rx, 1);
 544              		.loc 1 438 3 is_stmt 1 view .LVU115
 545 0008 0B4B     		ldr	r3, .L31+4
 546 000a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 547              	.LVL25:
 548              		.loc 1 438 3 is_stmt 0 view .LVU116
 549 000c 0B4A     		ldr	r2, .L31+8
 550 000e 1388     		ldrh	r3, [r2]
 551 0010 0B49     		ldr	r1, .L31+12
 552 0012 C854     		strb	r0, [r1, r3]
 439:Core/Src/main.c ****   if (++t >= BUF_SIZE) t = 0;
 553              		.loc 1 439 3 is_stmt 1 view .LVU117
 554              		.loc 1 439 7 is_stmt 0 view .LVU118
 555 0014 1388     		ldrh	r3, [r2]
 556 0016 0133     		adds	r3, r3, #1
 557 0018 9BB2     		uxth	r3, r3
 558              		.loc 1 439 6 view .LVU119
 559 001a 1380     		strh	r3, [r2]	@ movhi
 560 001c B3F5806F 		cmp	r3, #1024
 561 0020 02D3     		bcc	.L29
 562              		.loc 1 439 24 is_stmt 1 discriminator 1 view .LVU120
 563              		.loc 1 439 26 is_stmt 0 discriminator 1 view .LVU121
 564 0022 1346     		mov	r3, r2
 565 0024 0022     		movs	r2, #0
 566 0026 1A80     		strh	r2, [r3]	@ movhi
 567              	.L29:
 440:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1, data_rx, 1);
 568              		.loc 1 440 3 is_stmt 1 view .LVU122
 569 0028 0122     		movs	r2, #1
 570 002a 0349     		ldr	r1, .L31+4
 571 002c 0548     		ldr	r0, .L31+16
 572 002e FFF7FEFF 		bl	HAL_UART_Receive_IT
 573              	.LVL26:
 441:Core/Src/main.c **** }
 574              		.loc 1 441 1 is_stmt 0 view .LVU123
 575 0032 08BD     		pop	{r3, pc}
 576              	.L32:
 577              		.align	2
 578              	.L31:
 579 0034 00000000 		.word	.LANCHOR2
 580 0038 00000000 		.word	.LANCHOR3
 581 003c 00000000 		.word	.LANCHOR5
 582 0040 00000000 		.word	.LANCHOR4
 583 0044 00000000 		.word	.LANCHOR0
 584              		.cfi_endproc
 585              	.LFE148:
 587              		.section	.rodata.ProcessDataFromUART.str1.4,"aMS",%progbits,1
 588              		.align	2
 589              	.LC0:
 590 0000 0D0A636F 		.ascii	"\015\012control field: frame = %d, seq_no = %d\015\012"
 590      6E74726F 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 19


 590      6C206669 
 590      656C643A 
 590      20667261 
 591 002a 00       		.ascii	"\000"
 592 002b 00       		.align	2
 593              	.LC1:
 594 002c 52656365 		.ascii	"Received data: \015\012\000"
 594      69766564 
 594      20646174 
 594      613A200D 
 594      0A00
 595 003e 0000     		.align	2
 596              	.LC2:
 597 0040 74635F00 		.ascii	"tc_\000"
 598              		.align	2
 599              	.LC3:
 600 0044 74635F61 		.ascii	"tc_add\000"
 600      646400
 601 004b 00       		.align	2
 602              	.LC4:
 603 004c 74635F73 		.ascii	"tc_subtract\000"
 603      75627472 
 603      61637400 
 604              		.align	2
 605              	.LC5:
 606 0058 74635F6D 		.ascii	"tc_multiply\000"
 606      756C7469 
 606      706C7900 
 607              		.align	2
 608              	.LC6:
 609 0064 74635F64 		.ascii	"tc_divide\000"
 609      69766964 
 609      6500
 610 006e 0000     		.align	2
 611              	.LC7:
 612 0070 0A3D3D3D 		.ascii	"\012======\012%s\012 - length = %d\012\000"
 612      3D3D3D0A 
 612      25730A20 
 612      2D206C65 
 612      6E677468 
 613              		.section	.text.ProcessDataFromUART,"ax",%progbits
 614              		.align	1
 615              		.global	ProcessDataFromUART
 616              		.syntax unified
 617              		.thumb
 618              		.thumb_func
 619              		.fpu fpv4-sp-d16
 621              	ProcessDataFromUART:
 622              	.LFB149:
 442:Core/Src/main.c **** 
 443:Core/Src/main.c **** void ProcessDataFromUART(void)
 444:Core/Src/main.c **** {
 623              		.loc 1 444 1 is_stmt 1 view -0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 2064
 626              		@ frame_needed = 0, uses_anonymous_args = 0
 445:Core/Src/main.c **** 	/* Neu khong co du lieu thi khong xu ly */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 20


 446:Core/Src/main.c **** 	if(newReceive == 0)
 627              		.loc 1 446 2 view .LVU125
 628              		.loc 1 446 16 is_stmt 0 view .LVU126
 629 0000 724B     		ldr	r3, .L56
 630 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 631              		.loc 1 446 4 view .LVU127
 632 0004 03B9     		cbnz	r3, .L55
 633 0006 7047     		bx	lr
 634              	.L55:
 444:Core/Src/main.c **** 	/* Neu khong co du lieu thi khong xu ly */
 635              		.loc 1 444 1 view .LVU128
 636 0008 70B5     		push	{r4, r5, r6, lr}
 637              	.LCFI23:
 638              		.cfi_def_cfa_offset 16
 639              		.cfi_offset 4, -16
 640              		.cfi_offset 5, -12
 641              		.cfi_offset 6, -8
 642              		.cfi_offset 14, -4
 643 000a ADF6180D 		subw	sp, sp, #2072
 644              	.LCFI24:
 645              		.cfi_def_cfa_offset 2088
 447:Core/Src/main.c **** 		return;
 448:Core/Src/main.c **** 	
 449:Core/Src/main.c **** 	/* Xoa co bao co du lieu */
 450:Core/Src/main.c **** 	newReceive = 0;
 646              		.loc 1 450 2 is_stmt 1 view .LVU129
 647              		.loc 1 450 13 is_stmt 0 view .LVU130
 648 000e 0021     		movs	r1, #0
 649 0010 6E4B     		ldr	r3, .L56
 650 0012 1970     		strb	r1, [r3]
 451:Core/Src/main.c **** 	/* Xu ly lenh */
 452:Core/Src/main.c ****   int ret;
 651              		.loc 1 452 3 is_stmt 1 view .LVU131
 453:Core/Src/main.c ****   uint8_t received_data[BUF_SIZE] = {0};
 652              		.loc 1 453 3 view .LVU132
 653              		.loc 1 453 11 is_stmt 0 view .LVU133
 654 0014 CDF81814 		str	r1, [sp, #1048]
 655 0018 4FF47F72 		mov	r2, #1020
 656 001c 0DF21C40 		addw	r0, sp, #1052
 657 0020 FFF7FEFF 		bl	memset
 658              	.LVL27:
 454:Core/Src/main.c ****   int received_len = t;
 659              		.loc 1 454 3 is_stmt 1 view .LVU134
 660              		.loc 1 454 7 is_stmt 0 view .LVU135
 661 0024 6A4B     		ldr	r3, .L56+4
 662 0026 1A88     		ldrh	r2, [r3]
 663 0028 0DF21443 		addw	r3, sp, #1044
 664 002c CDF81424 		str	r2, [sp, #1044]
 455:Core/Src/main.c ****   ret = yahdlc_get_data(&control, buf_rx, t, received_data, &received_len);
 665              		.loc 1 455 3 is_stmt 1 view .LVU136
 666              		.loc 1 455 9 is_stmt 0 view .LVU137
 667 0030 0093     		str	r3, [sp]
 668 0032 0DF58363 		add	r3, sp, #1048
 669 0036 6749     		ldr	r1, .L56+8
 670 0038 6748     		ldr	r0, .L56+12
 671 003a FFF7FEFF 		bl	yahdlc_get_data
 672              	.LVL28:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 21


 456:Core/Src/main.c ****   if (ret == 0) {
 673              		.loc 1 456 3 is_stmt 1 view .LVU138
 674              		.loc 1 456 6 is_stmt 0 view .LVU139
 675 003e 0446     		mov	r4, r0
 676 0040 0028     		cmp	r0, #0
 677 0042 40F09D80 		bne	.L36
 457:Core/Src/main.c ****     if (control.frame == YAHDLC_FRAME_ACK)
 678              		.loc 1 457 5 is_stmt 1 view .LVU140
 679              		.loc 1 457 16 is_stmt 0 view .LVU141
 680 0046 644B     		ldr	r3, .L56+12
 681 0048 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 682              		.loc 1 457 8 view .LVU142
 683 004a 0129     		cmp	r1, #1
 684 004c 00F0B380 		beq	.L37
 458:Core/Src/main.c ****     {
 459:Core/Src/main.c ****       ; // Do nothing
 460:Core/Src/main.c ****     }
 461:Core/Src/main.c ****     else if (control.frame == YAHDLC_FRAME_NACK)
 685              		.loc 1 461 10 is_stmt 1 view .LVU143
 686              		.loc 1 461 13 is_stmt 0 view .LVU144
 687 0050 0229     		cmp	r1, #2
 688 0052 00F0B080 		beq	.L37
 462:Core/Src/main.c ****     {
 463:Core/Src/main.c ****       ; // Do nothing
 464:Core/Src/main.c ****     }
 465:Core/Src/main.c ****     else if (control.frame == YAHDLC_FRAME_DATA)
 689              		.loc 1 465 10 is_stmt 1 view .LVU145
 690              		.loc 1 465 13 is_stmt 0 view .LVU146
 691 0056 0029     		cmp	r1, #0
 692 0058 40F0AD80 		bne	.L37
 693              	.LBB9:
 466:Core/Src/main.c ****     {
 467:Core/Src/main.c ****       debug_printf("\r\ncontrol field: frame = %d, seq_no = %d\r\n", control.frame, control.seq_no)
 694              		.loc 1 467 7 is_stmt 1 view .LVU147
 695              		.loc 1 467 92 is_stmt 0 view .LVU148
 696 005c 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 697              		.loc 1 467 7 view .LVU149
 698 005e 02F00702 		and	r2, r2, #7
 699 0062 5E48     		ldr	r0, .L56+16
 700              	.LVL29:
 701              		.loc 1 467 7 view .LVU150
 702 0064 FFF7FEFF 		bl	debug_printf
 703              	.LVL30:
 468:Core/Src/main.c ****       debug_printf("Received data: \r\n");
 704              		.loc 1 468 7 is_stmt 1 view .LVU151
 705 0068 5D48     		ldr	r0, .L56+20
 706 006a FFF7FEFF 		bl	debug_printf
 707              	.LVL31:
 469:Core/Src/main.c ****       for(int i=0; i<received_len; i++)
 708              		.loc 1 469 7 view .LVU152
 709              	.LBB10:
 710              		.loc 1 469 11 view .LVU153
 711              		.loc 1 469 7 is_stmt 0 view .LVU154
 712 006e 05E0     		b	.L38
 713              	.LVL32:
 714              	.L39:
 470:Core/Src/main.c ****       {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 22


 471:Core/Src/main.c ****         debug_sendchar(received_data[i]);
 715              		.loc 1 471 9 is_stmt 1 discriminator 3 view .LVU155
 716 0070 0DF58363 		add	r3, sp, #1048
 717 0074 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 718 0076 FFF7FEFF 		bl	debug_sendchar
 719              	.LVL33:
 469:Core/Src/main.c ****       for(int i=0; i<received_len; i++)
 720              		.loc 1 469 36 discriminator 3 view .LVU156
 469:Core/Src/main.c ****       for(int i=0; i<received_len; i++)
 721              		.loc 1 469 37 is_stmt 0 discriminator 3 view .LVU157
 722 007a 0134     		adds	r4, r4, #1
 723              	.LVL34:
 724              	.L38:
 469:Core/Src/main.c ****       for(int i=0; i<received_len; i++)
 725              		.loc 1 469 20 is_stmt 1 discriminator 1 view .LVU158
 469:Core/Src/main.c ****       for(int i=0; i<received_len; i++)
 726              		.loc 1 469 21 is_stmt 0 discriminator 1 view .LVU159
 727 007c DDF81434 		ldr	r3, [sp, #1044]
 469:Core/Src/main.c ****       for(int i=0; i<received_len; i++)
 728              		.loc 1 469 7 discriminator 1 view .LVU160
 729 0080 A342     		cmp	r3, r4
 730 0082 F5DC     		bgt	.L39
 731              	.LBE10:
 472:Core/Src/main.c ****       }
 473:Core/Src/main.c ****       control.frame = YAHDLC_FRAME_ACK;
 732              		.loc 1 473 7 is_stmt 1 view .LVU161
 733              		.loc 1 473 21 is_stmt 0 view .LVU162
 734 0084 5448     		ldr	r0, .L56+12
 735 0086 0123     		movs	r3, #1
 736 0088 0370     		strb	r3, [r0]
 474:Core/Src/main.c ****       control.seq_no += 1;
 737              		.loc 1 474 7 is_stmt 1 view .LVU163
 738              		.loc 1 474 22 is_stmt 0 view .LVU164
 739 008a 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 740 008c C3F30202 		ubfx	r2, r3, #0, #3
 741 0090 0132     		adds	r2, r2, #1
 742 0092 62F30203 		bfi	r3, r2, #0, #3
 743 0096 4370     		strb	r3, [r0, #1]
 475:Core/Src/main.c ****       // Generate the ACK frame
 476:Core/Src/main.c ****       char frame[BUF_SIZE];
 744              		.loc 1 476 7 is_stmt 1 view .LVU165
 477:Core/Src/main.c ****       unsigned int frame_len;
 745              		.loc 1 477 7 view .LVU166
 478:Core/Src/main.c ****       yahdlc_frame_data(&control, NULL, 0, frame, &frame_len);
 746              		.loc 1 478 7 view .LVU167
 747 0098 04AB     		add	r3, sp, #16
 748 009a 0093     		str	r3, [sp]
 749 009c 05AB     		add	r3, sp, #20
 750 009e 0022     		movs	r2, #0
 751 00a0 1146     		mov	r1, r2
 752 00a2 FFF7FEFF 		bl	yahdlc_frame_data
 753              	.LVL35:
 479:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 754              		.loc 1 479 7 view .LVU168
 755              	.LBB11:
 756              		.loc 1 479 12 view .LVU169
 757              		.loc 1 479 25 is_stmt 0 view .LVU170
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 23


 758 00a6 0024     		movs	r4, #0
 759              	.LVL36:
 760              		.loc 1 479 7 view .LVU171
 761 00a8 04E0     		b	.L40
 762              	.LVL37:
 763              	.L41:
 480:Core/Src/main.c ****         uart_sendchar(frame[i]);
 764              		.loc 1 480 9 is_stmt 1 discriminator 3 view .LVU172
 765 00aa 05AB     		add	r3, sp, #20
 766 00ac 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 767 00ae FFF7FEFF 		bl	uart_sendchar
 768              	.LVL38:
 479:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 769              		.loc 1 479 47 discriminator 3 view .LVU173
 479:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 770              		.loc 1 479 48 is_stmt 0 discriminator 3 view .LVU174
 771 00b2 0134     		adds	r4, r4, #1
 772              	.LVL39:
 773              	.L40:
 479:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 774              		.loc 1 479 32 is_stmt 1 discriminator 1 view .LVU175
 479:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 775              		.loc 1 479 34 is_stmt 0 discriminator 1 view .LVU176
 776 00b4 049B     		ldr	r3, [sp, #16]
 479:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 777              		.loc 1 479 7 discriminator 1 view .LVU177
 778 00b6 A342     		cmp	r3, r4
 779 00b8 F7D8     		bhi	.L41
 780              	.LBE11:
 481:Core/Src/main.c ****       }
 482:Core/Src/main.c **** 
 483:Core/Src/main.c ****       // Process receive data buffer
 484:Core/Src/main.c ****       if((strstr((char*)received_data, "tc_")))
 781              		.loc 1 484 7 is_stmt 1 view .LVU178
 782              		.loc 1 484 11 is_stmt 0 view .LVU179
 783 00ba 4A49     		ldr	r1, .L56+24
 784 00bc 0DF58360 		add	r0, sp, #1048
 785 00c0 FFF7FEFF 		bl	strstr
 786              	.LVL40:
 787              		.loc 1 484 9 view .LVU180
 788 00c4 0028     		cmp	r0, #0
 789 00c6 76D0     		beq	.L37
 485:Core/Src/main.c ****       {
 486:Core/Src/main.c ****         memset(yahdlc_send_frame, 0, BUF_SIZE);
 790              		.loc 1 486 9 is_stmt 1 view .LVU181
 791 00c8 4FF48062 		mov	r2, #1024
 792 00cc 0021     		movs	r1, #0
 793 00ce 4648     		ldr	r0, .L56+28
 794 00d0 FFF7FEFF 		bl	memset
 795              	.LVL41:
 487:Core/Src/main.c ****         if((strstr((char*)received_data, "tc_add")))
 796              		.loc 1 487 9 view .LVU182
 797              		.loc 1 487 13 is_stmt 0 view .LVU183
 798 00d4 4549     		ldr	r1, .L56+32
 799 00d6 0DF58360 		add	r0, sp, #1048
 800 00da FFF7FEFF 		bl	strstr
 801              	.LVL42:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 24


 802              		.loc 1 487 11 view .LVU184
 803 00de 50B3     		cbz	r0, .L43
 488:Core/Src/main.c ****         {
 489:Core/Src/main.c ****           tc_add();
 804              		.loc 1 489 11 is_stmt 1 view .LVU185
 805 00e0 FFF7FEFF 		bl	tc_add
 806              	.LVL43:
 807              	.L44:
 490:Core/Src/main.c ****         }
 491:Core/Src/main.c ****         else if((strstr((char*)received_data, "tc_subtract")))
 492:Core/Src/main.c ****         {
 493:Core/Src/main.c ****           tc_subtract();
 494:Core/Src/main.c ****         }
 495:Core/Src/main.c ****         else if((strstr((char*)received_data, "tc_multiply")))
 496:Core/Src/main.c ****         {
 497:Core/Src/main.c ****           tc_multiply();
 498:Core/Src/main.c ****         }
 499:Core/Src/main.c ****         else if((strstr((char*)received_data, "tc_divide")))
 500:Core/Src/main.c ****         {
 501:Core/Src/main.c ****           tc_divide();
 502:Core/Src/main.c ****         }
 503:Core/Src/main.c **** 
 504:Core/Src/main.c ****         debug_printf("\n======\n%s\n - length = %d\n",yahdlc_send_frame, strlen(yahdlc_send_frame))
 808              		.loc 1 504 9 view .LVU186
 809 00e4 404E     		ldr	r6, .L56+28
 810 00e6 3046     		mov	r0, r6
 811 00e8 FFF7FEFF 		bl	strlen
 812              	.LVL44:
 813 00ec 0246     		mov	r2, r0
 814 00ee 3146     		mov	r1, r6
 815 00f0 3F48     		ldr	r0, .L56+36
 816 00f2 FFF7FEFF 		bl	debug_printf
 817              	.LVL45:
 505:Core/Src/main.c **** 
 506:Core/Src/main.c ****         HAL_Delay(1000);
 818              		.loc 1 506 9 view .LVU187
 819 00f6 4FF47A70 		mov	r0, #1000
 820 00fa FFF7FEFF 		bl	HAL_Delay
 821              	.LVL46:
 507:Core/Src/main.c ****         control.frame = YAHDLC_FRAME_DATA;
 822              		.loc 1 507 9 view .LVU188
 823              		.loc 1 507 23 is_stmt 0 view .LVU189
 824 00fe 364D     		ldr	r5, .L56+12
 825 0100 0024     		movs	r4, #0
 826              	.LVL47:
 827              		.loc 1 507 23 view .LVU190
 828 0102 2C70     		strb	r4, [r5]
 508:Core/Src/main.c ****         control.seq_no += 1;
 829              		.loc 1 508 9 is_stmt 1 view .LVU191
 830              		.loc 1 508 24 is_stmt 0 view .LVU192
 831 0104 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 832 0106 C3F30202 		ubfx	r2, r3, #0, #3
 833 010a 0132     		adds	r2, r2, #1
 834 010c 62F30203 		bfi	r3, r2, #0, #3
 835 0110 6B70     		strb	r3, [r5, #1]
 509:Core/Src/main.c ****         memset(frame, 0, BUF_SIZE);
 836              		.loc 1 509 9 is_stmt 1 view .LVU193
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 25


 837 0112 4FF48062 		mov	r2, #1024
 838 0116 2146     		mov	r1, r4
 839 0118 05A8     		add	r0, sp, #20
 840 011a FFF7FEFF 		bl	memset
 841              	.LVL48:
 510:Core/Src/main.c ****         yahdlc_frame_data(&control, yahdlc_send_frame, strlen(yahdlc_send_frame), frame, &frame_len
 842              		.loc 1 510 9 view .LVU194
 843 011e 3046     		mov	r0, r6
 844 0120 FFF7FEFF 		bl	strlen
 845              	.LVL49:
 846 0124 0246     		mov	r2, r0
 847 0126 04AB     		add	r3, sp, #16
 848 0128 0093     		str	r3, [sp]
 849 012a 05AB     		add	r3, sp, #20
 850 012c 3146     		mov	r1, r6
 851 012e 2846     		mov	r0, r5
 852 0130 FFF7FEFF 		bl	yahdlc_frame_data
 853              	.LVL50:
 511:Core/Src/main.c ****         // debug_printf("%s\n - length = %d\n", frame, frame_len);
 512:Core/Src/main.c **** 
 513:Core/Src/main.c ****         for (unsigned int i = 0; i < frame_len; i++) {
 854              		.loc 1 513 9 view .LVU195
 855              	.LBB12:
 856              		.loc 1 513 14 view .LVU196
 857              		.loc 1 513 9 is_stmt 0 view .LVU197
 858 0134 20E0     		b	.L47
 859              	.LVL51:
 860              	.L43:
 861              		.loc 1 513 9 view .LVU198
 862              	.LBE12:
 491:Core/Src/main.c ****         {
 863              		.loc 1 491 14 is_stmt 1 view .LVU199
 491:Core/Src/main.c ****         {
 864              		.loc 1 491 18 is_stmt 0 view .LVU200
 865 0136 2F49     		ldr	r1, .L56+40
 866 0138 0DF58360 		add	r0, sp, #1048
 867 013c FFF7FEFF 		bl	strstr
 868              	.LVL52:
 491:Core/Src/main.c ****         {
 869              		.loc 1 491 16 view .LVU201
 870 0140 10B1     		cbz	r0, .L45
 493:Core/Src/main.c ****         }
 871              		.loc 1 493 11 is_stmt 1 view .LVU202
 872 0142 FFF7FEFF 		bl	tc_subtract
 873              	.LVL53:
 874 0146 CDE7     		b	.L44
 875              	.L45:
 495:Core/Src/main.c ****         {
 876              		.loc 1 495 14 view .LVU203
 495:Core/Src/main.c ****         {
 877              		.loc 1 495 18 is_stmt 0 view .LVU204
 878 0148 2B49     		ldr	r1, .L56+44
 879 014a 0DF58360 		add	r0, sp, #1048
 880 014e FFF7FEFF 		bl	strstr
 881              	.LVL54:
 495:Core/Src/main.c ****         {
 882              		.loc 1 495 16 view .LVU205
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 26


 883 0152 10B1     		cbz	r0, .L46
 497:Core/Src/main.c ****         }
 884              		.loc 1 497 11 is_stmt 1 view .LVU206
 885 0154 FFF7FEFF 		bl	tc_multiply
 886              	.LVL55:
 887 0158 C4E7     		b	.L44
 888              	.L46:
 499:Core/Src/main.c ****         {
 889              		.loc 1 499 14 view .LVU207
 499:Core/Src/main.c ****         {
 890              		.loc 1 499 18 is_stmt 0 view .LVU208
 891 015a 2849     		ldr	r1, .L56+48
 892 015c 0DF58360 		add	r0, sp, #1048
 893 0160 FFF7FEFF 		bl	strstr
 894              	.LVL56:
 499:Core/Src/main.c ****         {
 895              		.loc 1 499 16 view .LVU209
 896 0164 0028     		cmp	r0, #0
 897 0166 BDD0     		beq	.L44
 501:Core/Src/main.c ****         }
 898              		.loc 1 501 11 is_stmt 1 view .LVU210
 899 0168 FFF7FEFF 		bl	tc_divide
 900              	.LVL57:
 901 016c BAE7     		b	.L44
 902              	.LVL58:
 903              	.L48:
 904              	.LBB13:
 514:Core/Src/main.c ****           uart_sendchar(frame[i]);
 905              		.loc 1 514 11 discriminator 3 view .LVU211
 906 016e 05AB     		add	r3, sp, #20
 907 0170 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 908 0172 FFF7FEFF 		bl	uart_sendchar
 909              	.LVL59:
 513:Core/Src/main.c ****           uart_sendchar(frame[i]);
 910              		.loc 1 513 49 discriminator 3 view .LVU212
 513:Core/Src/main.c ****           uart_sendchar(frame[i]);
 911              		.loc 1 513 50 is_stmt 0 discriminator 3 view .LVU213
 912 0176 0134     		adds	r4, r4, #1
 913              	.LVL60:
 914              	.L47:
 513:Core/Src/main.c ****           uart_sendchar(frame[i]);
 915              		.loc 1 513 34 is_stmt 1 discriminator 1 view .LVU214
 513:Core/Src/main.c ****           uart_sendchar(frame[i]);
 916              		.loc 1 513 36 is_stmt 0 discriminator 1 view .LVU215
 917 0178 049B     		ldr	r3, [sp, #16]
 513:Core/Src/main.c ****           uart_sendchar(frame[i]);
 918              		.loc 1 513 9 discriminator 1 view .LVU216
 919 017a A342     		cmp	r3, r4
 920 017c F7D8     		bhi	.L48
 921 017e 1AE0     		b	.L37
 922              	.LVL61:
 923              	.L36:
 513:Core/Src/main.c ****           uart_sendchar(frame[i]);
 924              		.loc 1 513 9 discriminator 1 view .LVU217
 925              	.LBE13:
 926              	.LBE9:
 927              	.LBB14:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 27


 515:Core/Src/main.c ****         }
 516:Core/Src/main.c ****       }
 517:Core/Src/main.c ****     }
 518:Core/Src/main.c ****     else
 519:Core/Src/main.c ****     {
 520:Core/Src/main.c ****       ; // Do nothing
 521:Core/Src/main.c ****     }
 522:Core/Src/main.c ****   } else {
 523:Core/Src/main.c ****       // debug_printf("Error decoding frame %d\r\n", ret);
 524:Core/Src/main.c ****       // debug_printf("t = %d buf_rx:\r\n", t);
 525:Core/Src/main.c ****       // for(int i=0; i<t; i++)
 526:Core/Src/main.c ****       // {
 527:Core/Src/main.c ****       //   debug_printf("0x%02x, ", buf_rx[i]);
 528:Core/Src/main.c ****       // }
 529:Core/Src/main.c ****       // debug_printf("\r\nreceived_len = %d received_data:\r\n", received_len);
 530:Core/Src/main.c ****       // for(int i=0; i<received_len; i++)
 531:Core/Src/main.c ****       // {
 532:Core/Src/main.c ****       //   debug_printf("0x%02x, ", received_data[i]);
 533:Core/Src/main.c ****       // }
 534:Core/Src/main.c ****       yahdlc_control_t control;
 928              		.loc 1 534 7 is_stmt 1 view .LVU218
 535:Core/Src/main.c ****       control.frame = YAHDLC_FRAME_NACK;
 929              		.loc 1 535 7 view .LVU219
 930              		.loc 1 535 21 is_stmt 0 view .LVU220
 931 0180 0223     		movs	r3, #2
 932 0182 8DF80C30 		strb	r3, [sp, #12]
 536:Core/Src/main.c ****       control.seq_no = 0;
 933              		.loc 1 536 7 is_stmt 1 view .LVU221
 934              		.loc 1 536 22 is_stmt 0 view .LVU222
 935 0186 9DF80D30 		ldrb	r3, [sp, #13]	@ zero_extendqisi2
 936 018a 6FF30203 		bfc	r3, #0, #3
 937 018e 8DF80D30 		strb	r3, [sp, #13]
 537:Core/Src/main.c ****       // Generate the ACK frame
 538:Core/Src/main.c ****       char frame[BUF_SIZE];
 938              		.loc 1 538 7 is_stmt 1 view .LVU223
 539:Core/Src/main.c ****       unsigned int frame_len;
 939              		.loc 1 539 7 view .LVU224
 540:Core/Src/main.c ****       yahdlc_frame_data(&control, NULL, 0, frame, &frame_len);
 940              		.loc 1 540 7 view .LVU225
 941 0192 04AB     		add	r3, sp, #16
 942 0194 0093     		str	r3, [sp]
 943 0196 05AB     		add	r3, sp, #20
 944 0198 0022     		movs	r2, #0
 945 019a 1146     		mov	r1, r2
 946 019c 03A8     		add	r0, sp, #12
 947              	.LVL62:
 948              		.loc 1 540 7 is_stmt 0 view .LVU226
 949 019e FFF7FEFF 		bl	yahdlc_frame_data
 950              	.LVL63:
 541:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 951              		.loc 1 541 7 is_stmt 1 view .LVU227
 952              	.LBB15:
 953              		.loc 1 541 12 view .LVU228
 954              		.loc 1 541 25 is_stmt 0 view .LVU229
 955 01a2 0024     		movs	r4, #0
 956              	.LVL64:
 957              		.loc 1 541 7 view .LVU230
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 28


 958 01a4 04E0     		b	.L49
 959              	.LVL65:
 960              	.L50:
 542:Core/Src/main.c ****         uart_sendchar(frame[i]);
 961              		.loc 1 542 9 is_stmt 1 discriminator 3 view .LVU231
 962 01a6 05AB     		add	r3, sp, #20
 963 01a8 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 964 01aa FFF7FEFF 		bl	uart_sendchar
 965              	.LVL66:
 541:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 966              		.loc 1 541 47 discriminator 3 view .LVU232
 541:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 967              		.loc 1 541 48 is_stmt 0 discriminator 3 view .LVU233
 968 01ae 0134     		adds	r4, r4, #1
 969              	.LVL67:
 970              	.L49:
 541:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 971              		.loc 1 541 32 is_stmt 1 discriminator 1 view .LVU234
 541:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 972              		.loc 1 541 34 is_stmt 0 discriminator 1 view .LVU235
 973 01b0 049B     		ldr	r3, [sp, #16]
 541:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 974              		.loc 1 541 7 discriminator 1 view .LVU236
 975 01b2 A342     		cmp	r3, r4
 976 01b4 F7D8     		bhi	.L50
 977              	.LVL68:
 978              	.L37:
 541:Core/Src/main.c ****       for (unsigned int i = 0; i < frame_len; i++) {
 979              		.loc 1 541 7 discriminator 1 view .LVU237
 980              	.LBE15:
 981              	.LBE14:
 543:Core/Src/main.c ****       }
 544:Core/Src/main.c ****   }
 545:Core/Src/main.c **** 	/* Xoa bo dem nhan */
 546:Core/Src/main.c **** 	t = 0;
 982              		.loc 1 546 2 is_stmt 1 discriminator 4 view .LVU238
 983              		.loc 1 546 4 is_stmt 0 discriminator 4 view .LVU239
 984 01b6 0021     		movs	r1, #0
 985 01b8 054B     		ldr	r3, .L56+4
 986 01ba 1980     		strh	r1, [r3]	@ movhi
 547:Core/Src/main.c **** 	memset(buf_rx, 0, BUF_SIZE);
 987              		.loc 1 547 2 is_stmt 1 discriminator 4 view .LVU240
 988 01bc 4FF48062 		mov	r2, #1024
 989 01c0 0448     		ldr	r0, .L56+8
 990 01c2 FFF7FEFF 		bl	memset
 991              	.LVL69:
 548:Core/Src/main.c **** }
 992              		.loc 1 548 1 is_stmt 0 discriminator 4 view .LVU241
 993 01c6 0DF6180D 		addw	sp, sp, #2072
 994              	.LCFI25:
 995              		.cfi_def_cfa_offset 16
 996              		@ sp needed
 997 01ca 70BD     		pop	{r4, r5, r6, pc}
 998              	.L57:
 999              		.align	2
 1000              	.L56:
 1001 01cc 00000000 		.word	.LANCHOR6
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 29


 1002 01d0 00000000 		.word	.LANCHOR5
 1003 01d4 00000000 		.word	.LANCHOR4
 1004 01d8 00000000 		.word	.LANCHOR7
 1005 01dc 00000000 		.word	.LC0
 1006 01e0 2C000000 		.word	.LC1
 1007 01e4 40000000 		.word	.LC2
 1008 01e8 00000000 		.word	.LANCHOR8
 1009 01ec 44000000 		.word	.LC3
 1010 01f0 70000000 		.word	.LC7
 1011 01f4 4C000000 		.word	.LC4
 1012 01f8 58000000 		.word	.LC5
 1013 01fc 64000000 		.word	.LC6
 1014              		.cfi_endproc
 1015              	.LFE149:
 1017              		.section	.text.Error_Handler,"ax",%progbits
 1018              		.align	1
 1019              		.global	Error_Handler
 1020              		.syntax unified
 1021              		.thumb
 1022              		.thumb_func
 1023              		.fpu fpv4-sp-d16
 1025              	Error_Handler:
 1026              	.LFB150:
 549:Core/Src/main.c **** 
 550:Core/Src/main.c **** /* USER CODE END 4 */
 551:Core/Src/main.c **** 
 552:Core/Src/main.c **** /**
 553:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 554:Core/Src/main.c ****   * @retval None
 555:Core/Src/main.c ****   */
 556:Core/Src/main.c **** void Error_Handler(void)
 557:Core/Src/main.c **** {
 1027              		.loc 1 557 1 is_stmt 1 view -0
 1028              		.cfi_startproc
 1029              		@ Volatile: function does not return.
 1030              		@ args = 0, pretend = 0, frame = 0
 1031              		@ frame_needed = 0, uses_anonymous_args = 0
 1032              		@ link register save eliminated.
 558:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 559:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 560:Core/Src/main.c ****   __disable_irq();
 1033              		.loc 1 560 3 view .LVU243
 1034              	.LBB16:
 1035              	.LBI16:
 1036              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 30


  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 31


  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 32


 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 33


 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 34


 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 35


 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 36


 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 37


 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 38


 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 39


 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 40


 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 41


 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 42


 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 43


 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 44


 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 45


 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 46


 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1037              		.loc 2 960 27 view .LVU244
 1038              	.LBB17:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1039              		.loc 2 962 3 view .LVU245
 1040              		.syntax unified
 1041              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1042 0000 72B6     		cpsid i
 1043              	@ 0 "" 2
 1044              		.thumb
 1045              		.syntax unified
 1046              	.L59:
 1047              	.LBE17:
 1048              	.LBE16:
 561:Core/Src/main.c ****   while (1)
 1049              		.loc 1 561 3 discriminator 1 view .LVU246
 562:Core/Src/main.c ****   {
 563:Core/Src/main.c ****   }
 1050              		.loc 1 563 3 discriminator 1 view .LVU247
 561:Core/Src/main.c ****   while (1)
 1051              		.loc 1 561 9 discriminator 1 view .LVU248
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 47


 1052 0002 FEE7     		b	.L59
 1053              		.cfi_endproc
 1054              	.LFE150:
 1056              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 1057              		.align	1
 1058              		.syntax unified
 1059              		.thumb
 1060              		.thumb_func
 1061              		.fpu fpv4-sp-d16
 1063              	MX_USART1_UART_Init:
 1064              	.LFB140:
 277:Core/Src/main.c **** 
 1065              		.loc 1 277 1 view -0
 1066              		.cfi_startproc
 1067              		@ args = 0, pretend = 0, frame = 0
 1068              		@ frame_needed = 0, uses_anonymous_args = 0
 1069 0000 08B5     		push	{r3, lr}
 1070              	.LCFI26:
 1071              		.cfi_def_cfa_offset 8
 1072              		.cfi_offset 3, -8
 1073              		.cfi_offset 14, -4
 286:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 1074              		.loc 1 286 3 view .LVU250
 286:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 1075              		.loc 1 286 19 is_stmt 0 view .LVU251
 1076 0002 0A48     		ldr	r0, .L64
 1077 0004 0A4B     		ldr	r3, .L64+4
 1078 0006 0360     		str	r3, [r0]
 287:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1079              		.loc 1 287 3 is_stmt 1 view .LVU252
 287:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1080              		.loc 1 287 24 is_stmt 0 view .LVU253
 1081 0008 4FF4E133 		mov	r3, #115200
 1082 000c 4360     		str	r3, [r0, #4]
 288:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1083              		.loc 1 288 3 is_stmt 1 view .LVU254
 288:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1084              		.loc 1 288 26 is_stmt 0 view .LVU255
 1085 000e 0023     		movs	r3, #0
 1086 0010 8360     		str	r3, [r0, #8]
 289:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1087              		.loc 1 289 3 is_stmt 1 view .LVU256
 289:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1088              		.loc 1 289 24 is_stmt 0 view .LVU257
 1089 0012 C360     		str	r3, [r0, #12]
 290:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1090              		.loc 1 290 3 is_stmt 1 view .LVU258
 290:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1091              		.loc 1 290 22 is_stmt 0 view .LVU259
 1092 0014 0361     		str	r3, [r0, #16]
 291:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1093              		.loc 1 291 3 is_stmt 1 view .LVU260
 291:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1094              		.loc 1 291 20 is_stmt 0 view .LVU261
 1095 0016 0C22     		movs	r2, #12
 1096 0018 4261     		str	r2, [r0, #20]
 292:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 48


 1097              		.loc 1 292 3 is_stmt 1 view .LVU262
 292:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1098              		.loc 1 292 25 is_stmt 0 view .LVU263
 1099 001a 8361     		str	r3, [r0, #24]
 293:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1100              		.loc 1 293 3 is_stmt 1 view .LVU264
 293:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1101              		.loc 1 293 28 is_stmt 0 view .LVU265
 1102 001c C361     		str	r3, [r0, #28]
 294:Core/Src/main.c ****   {
 1103              		.loc 1 294 3 is_stmt 1 view .LVU266
 294:Core/Src/main.c ****   {
 1104              		.loc 1 294 7 is_stmt 0 view .LVU267
 1105 001e FFF7FEFF 		bl	HAL_UART_Init
 1106              	.LVL70:
 294:Core/Src/main.c ****   {
 1107              		.loc 1 294 6 view .LVU268
 1108 0022 00B9     		cbnz	r0, .L63
 302:Core/Src/main.c **** 
 1109              		.loc 1 302 1 view .LVU269
 1110 0024 08BD     		pop	{r3, pc}
 1111              	.L63:
 296:Core/Src/main.c ****   }
 1112              		.loc 1 296 5 is_stmt 1 view .LVU270
 1113 0026 FFF7FEFF 		bl	Error_Handler
 1114              	.LVL71:
 1115              	.L65:
 1116 002a 00BF     		.align	2
 1117              	.L64:
 1118 002c 00000000 		.word	.LANCHOR0
 1119 0030 00100140 		.word	1073811456
 1120              		.cfi_endproc
 1121              	.LFE140:
 1123              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 1124              		.align	1
 1125              		.syntax unified
 1126              		.thumb
 1127              		.thumb_func
 1128              		.fpu fpv4-sp-d16
 1130              	MX_USART2_UART_Init:
 1131              	.LFB141:
 310:Core/Src/main.c **** 
 1132              		.loc 1 310 1 view -0
 1133              		.cfi_startproc
 1134              		@ args = 0, pretend = 0, frame = 0
 1135              		@ frame_needed = 0, uses_anonymous_args = 0
 1136 0000 08B5     		push	{r3, lr}
 1137              	.LCFI27:
 1138              		.cfi_def_cfa_offset 8
 1139              		.cfi_offset 3, -8
 1140              		.cfi_offset 14, -4
 319:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1141              		.loc 1 319 3 view .LVU272
 319:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1142              		.loc 1 319 19 is_stmt 0 view .LVU273
 1143 0002 0A48     		ldr	r0, .L70
 1144 0004 0A4B     		ldr	r3, .L70+4
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 49


 1145 0006 0360     		str	r3, [r0]
 320:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1146              		.loc 1 320 3 is_stmt 1 view .LVU274
 320:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1147              		.loc 1 320 24 is_stmt 0 view .LVU275
 1148 0008 4FF4E133 		mov	r3, #115200
 1149 000c 4360     		str	r3, [r0, #4]
 321:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1150              		.loc 1 321 3 is_stmt 1 view .LVU276
 321:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1151              		.loc 1 321 26 is_stmt 0 view .LVU277
 1152 000e 0023     		movs	r3, #0
 1153 0010 8360     		str	r3, [r0, #8]
 322:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1154              		.loc 1 322 3 is_stmt 1 view .LVU278
 322:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1155              		.loc 1 322 24 is_stmt 0 view .LVU279
 1156 0012 C360     		str	r3, [r0, #12]
 323:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1157              		.loc 1 323 3 is_stmt 1 view .LVU280
 323:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1158              		.loc 1 323 22 is_stmt 0 view .LVU281
 1159 0014 0361     		str	r3, [r0, #16]
 324:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1160              		.loc 1 324 3 is_stmt 1 view .LVU282
 324:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1161              		.loc 1 324 20 is_stmt 0 view .LVU283
 1162 0016 0C22     		movs	r2, #12
 1163 0018 4261     		str	r2, [r0, #20]
 325:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1164              		.loc 1 325 3 is_stmt 1 view .LVU284
 325:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1165              		.loc 1 325 25 is_stmt 0 view .LVU285
 1166 001a 8361     		str	r3, [r0, #24]
 326:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1167              		.loc 1 326 3 is_stmt 1 view .LVU286
 326:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1168              		.loc 1 326 28 is_stmt 0 view .LVU287
 1169 001c C361     		str	r3, [r0, #28]
 327:Core/Src/main.c ****   {
 1170              		.loc 1 327 3 is_stmt 1 view .LVU288
 327:Core/Src/main.c ****   {
 1171              		.loc 1 327 7 is_stmt 0 view .LVU289
 1172 001e FFF7FEFF 		bl	HAL_UART_Init
 1173              	.LVL72:
 327:Core/Src/main.c ****   {
 1174              		.loc 1 327 6 view .LVU290
 1175 0022 00B9     		cbnz	r0, .L69
 335:Core/Src/main.c **** 
 1176              		.loc 1 335 1 view .LVU291
 1177 0024 08BD     		pop	{r3, pc}
 1178              	.L69:
 329:Core/Src/main.c ****   }
 1179              		.loc 1 329 5 is_stmt 1 view .LVU292
 1180 0026 FFF7FEFF 		bl	Error_Handler
 1181              	.LVL73:
 1182              	.L71:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 50


 1183 002a 00BF     		.align	2
 1184              	.L70:
 1185 002c 00000000 		.word	.LANCHOR1
 1186 0030 00440040 		.word	1073759232
 1187              		.cfi_endproc
 1188              	.LFE141:
 1190              		.section	.text.MX_ETH_Init,"ax",%progbits
 1191              		.align	1
 1192              		.syntax unified
 1193              		.thumb
 1194              		.thumb_func
 1195              		.fpu fpv4-sp-d16
 1197              	MX_ETH_Init:
 1198              	.LFB139:
 228:Core/Src/main.c **** 
 1199              		.loc 1 228 1 view -0
 1200              		.cfi_startproc
 1201              		@ args = 0, pretend = 0, frame = 0
 1202              		@ frame_needed = 0, uses_anonymous_args = 0
 1203 0000 10B5     		push	{r4, lr}
 1204              	.LCFI28:
 1205              		.cfi_def_cfa_offset 8
 1206              		.cfi_offset 4, -8
 1207              		.cfi_offset 14, -4
 234:Core/Src/main.c **** 
 1208              		.loc 1 234 4 view .LVU294
 239:Core/Src/main.c ****   MACAddr[0] = 0x00;
 1209              		.loc 1 239 3 view .LVU295
 239:Core/Src/main.c ****   MACAddr[0] = 0x00;
 1210              		.loc 1 239 17 is_stmt 0 view .LVU296
 1211 0002 1448     		ldr	r0, .L76
 1212 0004 144B     		ldr	r3, .L76+4
 1213 0006 0360     		str	r3, [r0]
 240:Core/Src/main.c ****   MACAddr[1] = 0x80;
 1214              		.loc 1 240 3 is_stmt 1 view .LVU297
 240:Core/Src/main.c ****   MACAddr[1] = 0x80;
 1215              		.loc 1 240 14 is_stmt 0 view .LVU298
 1216 0008 144B     		ldr	r3, .L76+8
 1217 000a 0022     		movs	r2, #0
 1218 000c 1A70     		strb	r2, [r3]
 241:Core/Src/main.c ****   MACAddr[2] = 0xE1;
 1219              		.loc 1 241 3 is_stmt 1 view .LVU299
 241:Core/Src/main.c ****   MACAddr[2] = 0xE1;
 1220              		.loc 1 241 14 is_stmt 0 view .LVU300
 1221 000e 8021     		movs	r1, #128
 1222 0010 5970     		strb	r1, [r3, #1]
 242:Core/Src/main.c ****   MACAddr[3] = 0x00;
 1223              		.loc 1 242 3 is_stmt 1 view .LVU301
 242:Core/Src/main.c ****   MACAddr[3] = 0x00;
 1224              		.loc 1 242 14 is_stmt 0 view .LVU302
 1225 0012 E121     		movs	r1, #225
 1226 0014 9970     		strb	r1, [r3, #2]
 243:Core/Src/main.c ****   MACAddr[4] = 0x00;
 1227              		.loc 1 243 3 is_stmt 1 view .LVU303
 243:Core/Src/main.c ****   MACAddr[4] = 0x00;
 1228              		.loc 1 243 14 is_stmt 0 view .LVU304
 1229 0016 DA70     		strb	r2, [r3, #3]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 51


 244:Core/Src/main.c ****   MACAddr[5] = 0x00;
 1230              		.loc 1 244 3 is_stmt 1 view .LVU305
 244:Core/Src/main.c ****   MACAddr[5] = 0x00;
 1231              		.loc 1 244 14 is_stmt 0 view .LVU306
 1232 0018 1A71     		strb	r2, [r3, #4]
 245:Core/Src/main.c ****   heth.Init.MACAddr = &MACAddr[0];
 1233              		.loc 1 245 3 is_stmt 1 view .LVU307
 245:Core/Src/main.c ****   heth.Init.MACAddr = &MACAddr[0];
 1234              		.loc 1 245 14 is_stmt 0 view .LVU308
 1235 001a 5A71     		strb	r2, [r3, #5]
 246:Core/Src/main.c ****   heth.Init.MediaInterface = HAL_ETH_RMII_MODE;
 1236              		.loc 1 246 3 is_stmt 1 view .LVU309
 246:Core/Src/main.c ****   heth.Init.MediaInterface = HAL_ETH_RMII_MODE;
 1237              		.loc 1 246 21 is_stmt 0 view .LVU310
 1238 001c 4360     		str	r3, [r0, #4]
 247:Core/Src/main.c ****   heth.Init.TxDesc = DMATxDscrTab;
 1239              		.loc 1 247 3 is_stmt 1 view .LVU311
 247:Core/Src/main.c ****   heth.Init.TxDesc = DMATxDscrTab;
 1240              		.loc 1 247 28 is_stmt 0 view .LVU312
 1241 001e 4FF40003 		mov	r3, #8388608
 1242 0022 8360     		str	r3, [r0, #8]
 248:Core/Src/main.c ****   heth.Init.RxDesc = DMARxDscrTab;
 1243              		.loc 1 248 3 is_stmt 1 view .LVU313
 248:Core/Src/main.c ****   heth.Init.RxDesc = DMARxDscrTab;
 1244              		.loc 1 248 20 is_stmt 0 view .LVU314
 1245 0024 0E4B     		ldr	r3, .L76+12
 1246 0026 C360     		str	r3, [r0, #12]
 249:Core/Src/main.c ****   heth.Init.RxBuffLen = 1524;
 1247              		.loc 1 249 3 is_stmt 1 view .LVU315
 249:Core/Src/main.c ****   heth.Init.RxBuffLen = 1524;
 1248              		.loc 1 249 20 is_stmt 0 view .LVU316
 1249 0028 0E4B     		ldr	r3, .L76+16
 1250 002a 0361     		str	r3, [r0, #16]
 250:Core/Src/main.c **** 
 1251              		.loc 1 250 3 is_stmt 1 view .LVU317
 250:Core/Src/main.c **** 
 1252              		.loc 1 250 23 is_stmt 0 view .LVU318
 1253 002c 40F2F453 		movw	r3, #1524
 1254 0030 4361     		str	r3, [r0, #20]
 256:Core/Src/main.c ****   {
 1255              		.loc 1 256 3 is_stmt 1 view .LVU319
 256:Core/Src/main.c ****   {
 1256              		.loc 1 256 7 is_stmt 0 view .LVU320
 1257 0032 FFF7FEFF 		bl	HAL_ETH_Init
 1258              	.LVL74:
 256:Core/Src/main.c ****   {
 1259              		.loc 1 256 6 view .LVU321
 1260 0036 58B9     		cbnz	r0, .L75
 261:Core/Src/main.c ****   TxConfig.Attributes = ETH_TX_PACKETS_FEATURES_CSUM | ETH_TX_PACKETS_FEATURES_CRCPAD;
 1261              		.loc 1 261 3 is_stmt 1 view .LVU322
 1262 0038 0B4C     		ldr	r4, .L76+20
 1263 003a 3822     		movs	r2, #56
 1264 003c 0021     		movs	r1, #0
 1265 003e 2046     		mov	r0, r4
 1266 0040 FFF7FEFF 		bl	memset
 1267              	.LVL75:
 262:Core/Src/main.c ****   TxConfig.ChecksumCtrl = ETH_CHECKSUM_IPHDR_PAYLOAD_INSERT_PHDR_CALC;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 52


 1268              		.loc 1 262 3 view .LVU323
 262:Core/Src/main.c ****   TxConfig.ChecksumCtrl = ETH_CHECKSUM_IPHDR_PAYLOAD_INSERT_PHDR_CALC;
 1269              		.loc 1 262 23 is_stmt 0 view .LVU324
 1270 0044 2123     		movs	r3, #33
 1271 0046 2360     		str	r3, [r4]
 263:Core/Src/main.c ****   TxConfig.CRCPadCtrl = ETH_CRC_PAD_INSERT;
 1272              		.loc 1 263 3 is_stmt 1 view .LVU325
 263:Core/Src/main.c ****   TxConfig.CRCPadCtrl = ETH_CRC_PAD_INSERT;
 1273              		.loc 1 263 25 is_stmt 0 view .LVU326
 1274 0048 4FF44003 		mov	r3, #12582912
 1275 004c 6361     		str	r3, [r4, #20]
 264:Core/Src/main.c ****   /* USER CODE BEGIN ETH_Init 2 */
 1276              		.loc 1 264 3 is_stmt 1 view .LVU327
 269:Core/Src/main.c **** 
 1277              		.loc 1 269 1 is_stmt 0 view .LVU328
 1278 004e 10BD     		pop	{r4, pc}
 1279              	.L75:
 258:Core/Src/main.c ****   }
 1280              		.loc 1 258 5 is_stmt 1 view .LVU329
 1281 0050 FFF7FEFF 		bl	Error_Handler
 1282              	.LVL76:
 1283              	.L77:
 1284              		.align	2
 1285              	.L76:
 1286 0054 00000000 		.word	.LANCHOR9
 1287 0058 00800240 		.word	1073905664
 1288 005c 00000000 		.word	.LANCHOR10
 1289 0060 00000000 		.word	.LANCHOR11
 1290 0064 00000000 		.word	.LANCHOR12
 1291 0068 00000000 		.word	.LANCHOR13
 1292              		.cfi_endproc
 1293              	.LFE139:
 1295              		.section	.text.SystemClock_Config,"ax",%progbits
 1296              		.align	1
 1297              		.global	SystemClock_Config
 1298              		.syntax unified
 1299              		.thumb
 1300              		.thumb_func
 1301              		.fpu fpv4-sp-d16
 1303              	SystemClock_Config:
 1304              	.LFB138:
 182:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1305              		.loc 1 182 1 view -0
 1306              		.cfi_startproc
 1307              		@ args = 0, pretend = 0, frame = 80
 1308              		@ frame_needed = 0, uses_anonymous_args = 0
 1309 0000 00B5     		push	{lr}
 1310              	.LCFI29:
 1311              		.cfi_def_cfa_offset 4
 1312              		.cfi_offset 14, -4
 1313 0002 95B0     		sub	sp, sp, #84
 1314              	.LCFI30:
 1315              		.cfi_def_cfa_offset 88
 183:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1316              		.loc 1 183 3 view .LVU331
 183:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1317              		.loc 1 183 22 is_stmt 0 view .LVU332
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 53


 1318 0004 3022     		movs	r2, #48
 1319 0006 0021     		movs	r1, #0
 1320 0008 08A8     		add	r0, sp, #32
 1321 000a FFF7FEFF 		bl	memset
 1322              	.LVL77:
 184:Core/Src/main.c **** 
 1323              		.loc 1 184 3 is_stmt 1 view .LVU333
 184:Core/Src/main.c **** 
 1324              		.loc 1 184 22 is_stmt 0 view .LVU334
 1325 000e 0023     		movs	r3, #0
 1326 0010 0393     		str	r3, [sp, #12]
 1327 0012 0493     		str	r3, [sp, #16]
 1328 0014 0593     		str	r3, [sp, #20]
 1329 0016 0693     		str	r3, [sp, #24]
 1330 0018 0793     		str	r3, [sp, #28]
 188:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1331              		.loc 1 188 3 is_stmt 1 view .LVU335
 1332              	.LBB18:
 188:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1333              		.loc 1 188 3 view .LVU336
 1334 001a 0193     		str	r3, [sp, #4]
 188:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1335              		.loc 1 188 3 view .LVU337
 1336 001c 1E4A     		ldr	r2, .L84
 1337 001e 116C     		ldr	r1, [r2, #64]
 1338 0020 41F08051 		orr	r1, r1, #268435456
 1339 0024 1164     		str	r1, [r2, #64]
 188:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1340              		.loc 1 188 3 view .LVU338
 1341 0026 126C     		ldr	r2, [r2, #64]
 1342 0028 02F08052 		and	r2, r2, #268435456
 1343 002c 0192     		str	r2, [sp, #4]
 188:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1344              		.loc 1 188 3 view .LVU339
 1345 002e 019A     		ldr	r2, [sp, #4]
 1346              	.LBE18:
 188:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1347              		.loc 1 188 3 view .LVU340
 189:Core/Src/main.c **** 
 1348              		.loc 1 189 3 view .LVU341
 1349              	.LBB19:
 189:Core/Src/main.c **** 
 1350              		.loc 1 189 3 view .LVU342
 1351 0030 0293     		str	r3, [sp, #8]
 189:Core/Src/main.c **** 
 1352              		.loc 1 189 3 view .LVU343
 1353 0032 1A4B     		ldr	r3, .L84+4
 1354 0034 1A68     		ldr	r2, [r3]
 1355 0036 42F48042 		orr	r2, r2, #16384
 1356 003a 1A60     		str	r2, [r3]
 189:Core/Src/main.c **** 
 1357              		.loc 1 189 3 view .LVU344
 1358 003c 1B68     		ldr	r3, [r3]
 1359 003e 03F48043 		and	r3, r3, #16384
 1360 0042 0293     		str	r3, [sp, #8]
 189:Core/Src/main.c **** 
 1361              		.loc 1 189 3 view .LVU345
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 54


 1362 0044 029B     		ldr	r3, [sp, #8]
 1363              	.LBE19:
 189:Core/Src/main.c **** 
 1364              		.loc 1 189 3 view .LVU346
 194:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1365              		.loc 1 194 3 view .LVU347
 194:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1366              		.loc 1 194 36 is_stmt 0 view .LVU348
 1367 0046 0123     		movs	r3, #1
 1368 0048 0893     		str	r3, [sp, #32]
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1369              		.loc 1 195 3 is_stmt 1 view .LVU349
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1370              		.loc 1 195 30 is_stmt 0 view .LVU350
 1371 004a 4FF48033 		mov	r3, #65536
 1372 004e 0993     		str	r3, [sp, #36]
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1373              		.loc 1 196 3 is_stmt 1 view .LVU351
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1374              		.loc 1 196 34 is_stmt 0 view .LVU352
 1375 0050 0223     		movs	r3, #2
 1376 0052 0E93     		str	r3, [sp, #56]
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1377              		.loc 1 197 3 is_stmt 1 view .LVU353
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1378              		.loc 1 197 35 is_stmt 0 view .LVU354
 1379 0054 4FF48003 		mov	r3, #4194304
 1380 0058 0F93     		str	r3, [sp, #60]
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1381              		.loc 1 198 3 is_stmt 1 view .LVU355
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1382              		.loc 1 198 30 is_stmt 0 view .LVU356
 1383 005a 0423     		movs	r3, #4
 1384 005c 1093     		str	r3, [sp, #64]
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1385              		.loc 1 199 3 is_stmt 1 view .LVU357
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1386              		.loc 1 199 30 is_stmt 0 view .LVU358
 1387 005e 9022     		movs	r2, #144
 1388 0060 1192     		str	r2, [sp, #68]
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1389              		.loc 1 200 3 is_stmt 1 view .LVU359
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1390              		.loc 1 200 30 is_stmt 0 view .LVU360
 1391 0062 1293     		str	r3, [sp, #72]
 201:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1392              		.loc 1 201 3 is_stmt 1 view .LVU361
 201:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1393              		.loc 1 201 30 is_stmt 0 view .LVU362
 1394 0064 1393     		str	r3, [sp, #76]
 202:Core/Src/main.c ****   {
 1395              		.loc 1 202 3 is_stmt 1 view .LVU363
 202:Core/Src/main.c ****   {
 1396              		.loc 1 202 7 is_stmt 0 view .LVU364
 1397 0066 08A8     		add	r0, sp, #32
 1398 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1399              	.LVL78:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 55


 202:Core/Src/main.c ****   {
 1400              		.loc 1 202 6 view .LVU365
 1401 006c 80B9     		cbnz	r0, .L82
 209:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1402              		.loc 1 209 3 is_stmt 1 view .LVU366
 209:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1403              		.loc 1 209 31 is_stmt 0 view .LVU367
 1404 006e 0F23     		movs	r3, #15
 1405 0070 0393     		str	r3, [sp, #12]
 211:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1406              		.loc 1 211 3 is_stmt 1 view .LVU368
 211:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1407              		.loc 1 211 34 is_stmt 0 view .LVU369
 1408 0072 0221     		movs	r1, #2
 1409 0074 0491     		str	r1, [sp, #16]
 212:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1410              		.loc 1 212 3 is_stmt 1 view .LVU370
 212:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1411              		.loc 1 212 35 is_stmt 0 view .LVU371
 1412 0076 0023     		movs	r3, #0
 1413 0078 0593     		str	r3, [sp, #20]
 213:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1414              		.loc 1 213 3 is_stmt 1 view .LVU372
 213:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1415              		.loc 1 213 36 is_stmt 0 view .LVU373
 1416 007a 4FF48052 		mov	r2, #4096
 1417 007e 0692     		str	r2, [sp, #24]
 214:Core/Src/main.c **** 
 1418              		.loc 1 214 3 is_stmt 1 view .LVU374
 214:Core/Src/main.c **** 
 1419              		.loc 1 214 36 is_stmt 0 view .LVU375
 1420 0080 0793     		str	r3, [sp, #28]
 216:Core/Src/main.c ****   {
 1421              		.loc 1 216 3 is_stmt 1 view .LVU376
 216:Core/Src/main.c ****   {
 1422              		.loc 1 216 7 is_stmt 0 view .LVU377
 1423 0082 03A8     		add	r0, sp, #12
 1424 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1425              	.LVL79:
 216:Core/Src/main.c ****   {
 1426              		.loc 1 216 6 view .LVU378
 1427 0088 20B9     		cbnz	r0, .L83
 220:Core/Src/main.c **** 
 1428              		.loc 1 220 1 view .LVU379
 1429 008a 15B0     		add	sp, sp, #84
 1430              	.LCFI31:
 1431              		.cfi_remember_state
 1432              		.cfi_def_cfa_offset 4
 1433              		@ sp needed
 1434 008c 5DF804FB 		ldr	pc, [sp], #4
 1435              	.L82:
 1436              	.LCFI32:
 1437              		.cfi_restore_state
 204:Core/Src/main.c ****   }
 1438              		.loc 1 204 5 is_stmt 1 view .LVU380
 1439 0090 FFF7FEFF 		bl	Error_Handler
 1440              	.LVL80:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 56


 1441              	.L83:
 218:Core/Src/main.c ****   }
 1442              		.loc 1 218 5 view .LVU381
 1443 0094 FFF7FEFF 		bl	Error_Handler
 1444              	.LVL81:
 1445              	.L85:
 1446              		.align	2
 1447              	.L84:
 1448 0098 00380240 		.word	1073887232
 1449 009c 00700040 		.word	1073770496
 1450              		.cfi_endproc
 1451              	.LFE138:
 1453              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1454              		.align	2
 1455              	.LC8:
 1456 0000 25730A00 		.ascii	"%s\012\000"
 1457              		.align	2
 1458              	.LC9:
 1459 0004 31323334 		.ascii	"1234567\015\012\000"
 1459      3536370D 
 1459      0A00
 1460              		.section	.text.main,"ax",%progbits
 1461              		.align	1
 1462              		.global	main
 1463              		.syntax unified
 1464              		.thumb
 1465              		.thumb_func
 1466              		.fpu fpv4-sp-d16
 1468              	main:
 1469              	.LFB137:
 102:Core/Src/main.c **** 
 1470              		.loc 1 102 1 view -0
 1471              		.cfi_startproc
 1472              		@ args = 0, pretend = 0, frame = 16
 1473              		@ frame_needed = 0, uses_anonymous_args = 0
 1474 0000 70B5     		push	{r4, r5, r6, lr}
 1475              	.LCFI33:
 1476              		.cfi_def_cfa_offset 16
 1477              		.cfi_offset 4, -16
 1478              		.cfi_offset 5, -12
 1479              		.cfi_offset 6, -8
 1480              		.cfi_offset 14, -4
 1481 0002 86B0     		sub	sp, sp, #24
 1482              	.LCFI34:
 1483              		.cfi_def_cfa_offset 40
 111:Core/Src/main.c **** 
 1484              		.loc 1 111 3 view .LVU383
 1485 0004 FFF7FEFF 		bl	HAL_Init
 1486              	.LVL82:
 118:Core/Src/main.c **** 
 1487              		.loc 1 118 3 view .LVU384
 1488 0008 FFF7FEFF 		bl	SystemClock_Config
 1489              	.LVL83:
 125:Core/Src/main.c ****   MX_USART1_UART_Init();
 1490              		.loc 1 125 3 view .LVU385
 1491 000c FFF7FEFF 		bl	MX_GPIO_Init
 1492              	.LVL84:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 57


 126:Core/Src/main.c ****   MX_USART2_UART_Init();
 1493              		.loc 1 126 3 view .LVU386
 1494 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 1495              	.LVL85:
 127:Core/Src/main.c ****   MX_ETH_Init();
 1496              		.loc 1 127 3 view .LVU387
 1497 0014 FFF7FEFF 		bl	MX_USART2_UART_Init
 1498              	.LVL86:
 128:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1499              		.loc 1 128 3 view .LVU388
 1500 0018 FFF7FEFF 		bl	MX_ETH_Init
 1501              	.LVL87:
 131:Core/Src/main.c ****   memset(yahdlc_send_frame, 0, BUF_SIZE);
 1502              		.loc 1 131 3 view .LVU389
 1503 001c 0122     		movs	r2, #1
 1504 001e 2C49     		ldr	r1, .L91
 1505 0020 2C48     		ldr	r0, .L91+4
 1506 0022 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1507              	.LVL88:
 132:Core/Src/main.c ****   tc_add();
 1508              		.loc 1 132 3 view .LVU390
 1509 0026 2C4D     		ldr	r5, .L91+8
 1510 0028 4FF48066 		mov	r6, #1024
 1511 002c 3246     		mov	r2, r6
 1512 002e 0021     		movs	r1, #0
 1513 0030 2846     		mov	r0, r5
 1514 0032 FFF7FEFF 		bl	memset
 1515              	.LVL89:
 133:Core/Src/main.c ****   debug_printf("%s\n",yahdlc_send_frame);
 1516              		.loc 1 133 3 view .LVU391
 1517 0036 FFF7FEFF 		bl	tc_add
 1518              	.LVL90:
 134:Core/Src/main.c ****   memset(yahdlc_send_frame, 0, BUF_SIZE);
 1519              		.loc 1 134 3 view .LVU392
 1520 003a 284C     		ldr	r4, .L91+12
 1521 003c 2946     		mov	r1, r5
 1522 003e 2046     		mov	r0, r4
 1523 0040 FFF7FEFF 		bl	debug_printf
 1524              	.LVL91:
 135:Core/Src/main.c ****   tc_subtract();
 1525              		.loc 1 135 3 view .LVU393
 1526 0044 3246     		mov	r2, r6
 1527 0046 0021     		movs	r1, #0
 1528 0048 2846     		mov	r0, r5
 1529 004a FFF7FEFF 		bl	memset
 1530              	.LVL92:
 136:Core/Src/main.c ****   debug_printf("%s\n",yahdlc_send_frame);
 1531              		.loc 1 136 3 view .LVU394
 1532 004e FFF7FEFF 		bl	tc_subtract
 1533              	.LVL93:
 137:Core/Src/main.c ****   memset(yahdlc_send_frame, 0, BUF_SIZE);
 1534              		.loc 1 137 3 view .LVU395
 1535 0052 2946     		mov	r1, r5
 1536 0054 2046     		mov	r0, r4
 1537 0056 FFF7FEFF 		bl	debug_printf
 1538              	.LVL94:
 138:Core/Src/main.c ****   tc_multiply();
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 58


 1539              		.loc 1 138 3 view .LVU396
 1540 005a 3246     		mov	r2, r6
 1541 005c 0021     		movs	r1, #0
 1542 005e 2846     		mov	r0, r5
 1543 0060 FFF7FEFF 		bl	memset
 1544              	.LVL95:
 139:Core/Src/main.c ****   debug_printf("%s\n",yahdlc_send_frame);
 1545              		.loc 1 139 3 view .LVU397
 1546 0064 FFF7FEFF 		bl	tc_multiply
 1547              	.LVL96:
 140:Core/Src/main.c ****   memset(yahdlc_send_frame, 0, BUF_SIZE);
 1548              		.loc 1 140 3 view .LVU398
 1549 0068 2946     		mov	r1, r5
 1550 006a 2046     		mov	r0, r4
 1551 006c FFF7FEFF 		bl	debug_printf
 1552              	.LVL97:
 141:Core/Src/main.c ****   tc_divide();
 1553              		.loc 1 141 3 view .LVU399
 1554 0070 3246     		mov	r2, r6
 1555 0072 0021     		movs	r1, #0
 1556 0074 2846     		mov	r0, r5
 1557 0076 FFF7FEFF 		bl	memset
 1558              	.LVL98:
 142:Core/Src/main.c ****   debug_printf("%s\n",yahdlc_send_frame);
 1559              		.loc 1 142 3 view .LVU400
 1560 007a FFF7FEFF 		bl	tc_divide
 1561              	.LVL99:
 143:Core/Src/main.c **** 
 1562              		.loc 1 143 3 view .LVU401
 1563 007e 2946     		mov	r1, r5
 1564 0080 2046     		mov	r0, r4
 1565 0082 FFF7FEFF 		bl	debug_printf
 1566              	.LVL100:
 145:Core/Src/main.c **** 
 1567              		.loc 1 145 3 view .LVU402
 1568 0086 1648     		ldr	r0, .L91+16
 1569 0088 FFF7FEFF 		bl	yahdlc_set_state
 1570              	.LVL101:
 147:Core/Src/main.c ****   control.seq_no = 0;
 1571              		.loc 1 147 3 view .LVU403
 147:Core/Src/main.c ****   control.seq_no = 0;
 1572              		.loc 1 147 17 is_stmt 0 view .LVU404
 1573 008c 154E     		ldr	r6, .L91+20
 1574 008e 0024     		movs	r4, #0
 1575 0090 3470     		strb	r4, [r6]
 148:Core/Src/main.c **** 
 1576              		.loc 1 148 3 is_stmt 1 view .LVU405
 148:Core/Src/main.c **** 
 1577              		.loc 1 148 18 is_stmt 0 view .LVU406
 1578 0092 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 1579 0094 64F30203 		bfi	r3, r4, #0, #3
 1580 0098 7370     		strb	r3, [r6, #1]
 150:Core/Src/main.c ****   int frame_len;
 1581              		.loc 1 150 3 is_stmt 1 view .LVU407
 150:Core/Src/main.c ****   int frame_len;
 1582              		.loc 1 150 11 is_stmt 0 view .LVU408
 1583 009a 134A     		ldr	r2, .L91+24
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 59


 1584 009c 03AB     		add	r3, sp, #12
 1585 009e 07CA     		ldm	r2, {r0, r1, r2}
 1586 00a0 03C3     		stmia	r3!, {r0, r1}
 1587 00a2 1A80     		strh	r2, [r3]	@ movhi
 151:Core/Src/main.c **** 
 1588              		.loc 1 151 3 is_stmt 1 view .LVU409
 153:Core/Src/main.c ****   for(int i=0; i<frame_len; i++)
 1589              		.loc 1 153 3 view .LVU410
 1590 00a4 02AB     		add	r3, sp, #8
 1591 00a6 0093     		str	r3, [sp]
 1592 00a8 2B46     		mov	r3, r5
 1593 00aa 0922     		movs	r2, #9
 1594 00ac 03A9     		add	r1, sp, #12
 1595 00ae 3046     		mov	r0, r6
 1596 00b0 FFF7FEFF 		bl	yahdlc_frame_data
 1597              	.LVL102:
 154:Core/Src/main.c ****   {
 1598              		.loc 1 154 3 view .LVU411
 1599              	.LBB20:
 154:Core/Src/main.c ****   {
 1600              		.loc 1 154 7 view .LVU412
 154:Core/Src/main.c ****   {
 1601              		.loc 1 154 3 is_stmt 0 view .LVU413
 1602 00b4 04E0     		b	.L87
 1603              	.LVL103:
 1604              	.L88:
 157:Core/Src/main.c ****   }
 1605              		.loc 1 157 5 is_stmt 1 discriminator 3 view .LVU414
 1606 00b6 084B     		ldr	r3, .L91+8
 1607 00b8 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 1608 00ba FFF7FEFF 		bl	uart_sendchar
 1609              	.LVL104:
 154:Core/Src/main.c ****   {
 1610              		.loc 1 154 29 discriminator 3 view .LVU415
 154:Core/Src/main.c ****   {
 1611              		.loc 1 154 30 is_stmt 0 discriminator 3 view .LVU416
 1612 00be 0134     		adds	r4, r4, #1
 1613              	.LVL105:
 1614              	.L87:
 154:Core/Src/main.c ****   {
 1615              		.loc 1 154 16 is_stmt 1 discriminator 1 view .LVU417
 154:Core/Src/main.c ****   {
 1616              		.loc 1 154 17 is_stmt 0 discriminator 1 view .LVU418
 1617 00c0 029B     		ldr	r3, [sp, #8]
 154:Core/Src/main.c ****   {
 1618              		.loc 1 154 3 discriminator 1 view .LVU419
 1619 00c2 A342     		cmp	r3, r4
 1620 00c4 F7DC     		bgt	.L88
 1621              	.LBE20:
 161:Core/Src/main.c ****   vsc85xx_config_init(phydev);
 1622              		.loc 1 161 3 is_stmt 1 view .LVU420
 162:Core/Src/main.c **** 
 1623              		.loc 1 162 3 view .LVU421
 1624 00c6 0020     		movs	r0, #0
 1625 00c8 FFF7FEFF 		bl	vsc85xx_config_init
 1626              	.LVL106:
 1627              	.L89:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 60


 168:Core/Src/main.c ****   {
 1628              		.loc 1 168 3 discriminator 1 view .LVU422
 173:Core/Src/main.c ****   /* USER CODE END 3 */
 1629              		.loc 1 173 3 discriminator 1 view .LVU423
 168:Core/Src/main.c ****   {
 1630              		.loc 1 168 9 discriminator 1 view .LVU424
 1631 00cc FEE7     		b	.L89
 1632              	.L92:
 1633 00ce 00BF     		.align	2
 1634              	.L91:
 1635 00d0 00000000 		.word	.LANCHOR3
 1636 00d4 00000000 		.word	.LANCHOR0
 1637 00d8 00000000 		.word	.LANCHOR8
 1638 00dc 00000000 		.word	.LC8
 1639 00e0 00000000 		.word	.LANCHOR14
 1640 00e4 00000000 		.word	.LANCHOR7
 1641 00e8 04000000 		.word	.LC9
 1642              		.cfi_endproc
 1643              	.LFE137:
 1645              		.global	state
 1646              		.global	t
 1647              		.global	buf_rx
 1648              		.global	data_rx
 1649              		.global	yahdlc_send_frame
 1650              		.global	control
 1651              		.global	newReceive
 1652              		.global	delaytimer
 1653              		.global	timeoutReceive
 1654              		.global	huart2
 1655              		.global	huart1
 1656              		.global	heth
 1657              		.global	DMATxDscrTab
 1658              		.global	DMARxDscrTab
 1659              		.global	TxConfig
 1660              		.section	.bss.DMARxDscrTab,"aw",%nobits
 1661              		.align	2
 1662              		.set	.LANCHOR12,. + 0
 1665              	DMARxDscrTab:
 1666 0000 00000000 		.space	160
 1666      00000000 
 1666      00000000 
 1666      00000000 
 1666      00000000 
 1667              		.section	.bss.DMATxDscrTab,"aw",%nobits
 1668              		.align	2
 1669              		.set	.LANCHOR11,. + 0
 1672              	DMATxDscrTab:
 1673 0000 00000000 		.space	160
 1673      00000000 
 1673      00000000 
 1673      00000000 
 1673      00000000 
 1674              		.section	.bss.MACAddr.0,"aw",%nobits
 1675              		.align	2
 1676              		.set	.LANCHOR10,. + 0
 1679              	MACAddr.0:
 1680 0000 00000000 		.space	6
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 61


 1680      0000
 1681              		.section	.bss.TxConfig,"aw",%nobits
 1682              		.align	2
 1683              		.set	.LANCHOR13,. + 0
 1686              	TxConfig:
 1687 0000 00000000 		.space	56
 1687      00000000 
 1687      00000000 
 1687      00000000 
 1687      00000000 
 1688              		.section	.bss.buf_rx,"aw",%nobits
 1689              		.align	2
 1690              		.set	.LANCHOR4,. + 0
 1693              	buf_rx:
 1694 0000 00000000 		.space	1024
 1694      00000000 
 1694      00000000 
 1694      00000000 
 1694      00000000 
 1695              		.section	.bss.control,"aw",%nobits
 1696              		.align	2
 1697              		.set	.LANCHOR7,. + 0
 1700              	control:
 1701 0000 0000     		.space	2
 1702              		.section	.bss.data_rx,"aw",%nobits
 1703              		.align	2
 1704              		.set	.LANCHOR3,. + 0
 1707              	data_rx:
 1708 0000 0000     		.space	2
 1709              		.section	.bss.heth,"aw",%nobits
 1710              		.align	2
 1711              		.set	.LANCHOR9,. + 0
 1714              	heth:
 1715 0000 00000000 		.space	176
 1715      00000000 
 1715      00000000 
 1715      00000000 
 1715      00000000 
 1716              		.section	.bss.huart1,"aw",%nobits
 1717              		.align	2
 1718              		.set	.LANCHOR0,. + 0
 1721              	huart1:
 1722 0000 00000000 		.space	72
 1722      00000000 
 1722      00000000 
 1722      00000000 
 1722      00000000 
 1723              		.section	.bss.huart2,"aw",%nobits
 1724              		.align	2
 1725              		.set	.LANCHOR1,. + 0
 1728              	huart2:
 1729 0000 00000000 		.space	72
 1729      00000000 
 1729      00000000 
 1729      00000000 
 1729      00000000 
 1730              		.section	.bss.newReceive,"aw",%nobits
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 62


 1731              		.set	.LANCHOR6,. + 0
 1734              	newReceive:
 1735 0000 00       		.space	1
 1736              		.section	.bss.state,"aw",%nobits
 1737              		.align	2
 1738              		.set	.LANCHOR14,. + 0
 1741              	state:
 1742 0000 00000000 		.space	20
 1742      00000000 
 1742      00000000 
 1742      00000000 
 1742      00000000 
 1743              		.section	.bss.t,"aw",%nobits
 1744              		.align	1
 1745              		.set	.LANCHOR5,. + 0
 1748              	t:
 1749 0000 0000     		.space	2
 1750              		.section	.bss.yahdlc_send_frame,"aw",%nobits
 1751              		.align	2
 1752              		.set	.LANCHOR8,. + 0
 1755              	yahdlc_send_frame:
 1756 0000 00000000 		.space	1024
 1756      00000000 
 1756      00000000 
 1756      00000000 
 1756      00000000 
 1757              		.section	.data.delaytimer,"aw"
 1758              		.align	1
 1761              	delaytimer:
 1762 0000 E803     		.short	1000
 1763              		.section	.data.timeoutReceive,"aw"
 1764              		.align	1
 1765              		.set	.LANCHOR2,. + 0
 1768              	timeoutReceive:
 1769 0000 4600     		.short	70
 1770              		.text
 1771              	.Letext0:
 1772              		.file 3 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\includ
 1773              		.file 4 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\includ
 1774              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1775              		.file 6 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\lib\\gcc\\arm-none-ea
 1776              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1777              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1778              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1779              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1780              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1781              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_eth.h"
 1782              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1783              		.file 14 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\lib\\gcc\\arm-none-e
 1784              		.file 15 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\inclu
 1785              		.file 16 "Core/test/yahdlc.h"
 1786              		.file 17 "Core/Inc/main.h"
 1787              		.file 18 "c:\\gnu-arm-embedded-toolchain\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\inclu
 1788              		.file 19 "Core/Inc/function_test.h"
 1789              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1790              		.file 21 "Core/ETH_Transceive/stub_eth_transceive.h"
 1791              		.file 22 "<built-in>"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 63


ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 64


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:25     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:165    .text.MX_GPIO_Init:0000009c $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:171    .text.uart_printf:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:178    .text.uart_printf:00000000 uart_printf
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:267    .text.uart_printf:00000040 $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:272    .text.uart_sendchar:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:279    .text.uart_sendchar:00000000 uart_sendchar
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:315    .text.uart_sendchar:0000001c $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:320    .text.debug_printf:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:327    .text.debug_printf:00000000 debug_printf
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:416    .text.debug_printf:00000040 $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:421    .text.debug_sendchar:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:428    .text.debug_sendchar:00000000 debug_sendchar
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:464    .text.debug_sendchar:0000001c $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:469    .text.append_char_to_buffer:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:476    .text.append_char_to_buffer:00000000 append_char_to_buffer
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:519    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:526    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:579    .text.HAL_UART_RxCpltCallback:00000034 $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:588    .rodata.ProcessDataFromUART.str1.4:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:614    .text.ProcessDataFromUART:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:621    .text.ProcessDataFromUART:00000000 ProcessDataFromUART
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1001   .text.ProcessDataFromUART:000001cc $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1018   .text.Error_Handler:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1025   .text.Error_Handler:00000000 Error_Handler
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1057   .text.MX_USART1_UART_Init:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1063   .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1118   .text.MX_USART1_UART_Init:0000002c $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1124   .text.MX_USART2_UART_Init:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1130   .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1185   .text.MX_USART2_UART_Init:0000002c $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1191   .text.MX_ETH_Init:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1197   .text.MX_ETH_Init:00000000 MX_ETH_Init
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1286   .text.MX_ETH_Init:00000054 $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1296   .text.SystemClock_Config:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1303   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1448   .text.SystemClock_Config:00000098 $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1454   .rodata.main.str1.4:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1461   .text.main:00000000 $t
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1468   .text.main:00000000 main
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1635   .text.main:000000d0 $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1741   .bss.state:00000000 state
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1748   .bss.t:00000000 t
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1693   .bss.buf_rx:00000000 buf_rx
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1707   .bss.data_rx:00000000 data_rx
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1755   .bss.yahdlc_send_frame:00000000 yahdlc_send_frame
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1700   .bss.control:00000000 control
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1734   .bss.newReceive:00000000 newReceive
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1761   .data.delaytimer:00000000 delaytimer
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1768   .data.timeoutReceive:00000000 timeoutReceive
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1728   .bss.huart2:00000000 huart2
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1721   .bss.huart1:00000000 huart1
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1714   .bss.heth:00000000 heth
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1672   .bss.DMATxDscrTab:00000000 DMATxDscrTab
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s 			page 65


C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1665   .bss.DMARxDscrTab:00000000 DMARxDscrTab
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1686   .bss.TxConfig:00000000 TxConfig
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1661   .bss.DMARxDscrTab:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1668   .bss.DMATxDscrTab:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1675   .bss.MACAddr.0:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1679   .bss.MACAddr.0:00000000 MACAddr.0
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1682   .bss.TxConfig:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1689   .bss.buf_rx:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1696   .bss.control:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1703   .bss.data_rx:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1710   .bss.heth:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1717   .bss.huart1:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1724   .bss.huart2:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1735   .bss.newReceive:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1737   .bss.state:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1744   .bss.t:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1751   .bss.yahdlc_send_frame:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1758   .data.delaytimer:00000000 $d
C:\Users\ASUS\AppData\Local\Temp\ccVfhlfh.s:1764   .data.timeoutReceive:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
vsprintf
HAL_UART_Transmit
strlen
HAL_UART_Receive_IT
memset
yahdlc_get_data
yahdlc_frame_data
strstr
tc_add
HAL_Delay
tc_subtract
tc_multiply
tc_divide
HAL_UART_Init
HAL_ETH_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
yahdlc_set_state
vsc85xx_config_init
